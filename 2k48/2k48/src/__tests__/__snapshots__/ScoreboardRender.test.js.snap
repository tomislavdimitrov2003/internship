// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders default scoreboard correctly 1`] = `
<RenderScoreboard
  rows={
    Array [
      Object {
        "name": "a",
        "score": 50,
      },
      Object {
        "name": "b",
        "score": 60,
      },
    ]
  }
>
  <div
    className="makeStyles-root-1"
  >
    <WithStyles(ForwardRef(Paper))
      className="makeStyles-paper-2"
    >
      <ForwardRef(Paper)
        className="makeStyles-paper-2"
        classes={
          Object {
            "elevation0": "MuiPaper-elevation0",
            "elevation1": "MuiPaper-elevation1",
            "elevation10": "MuiPaper-elevation10",
            "elevation11": "MuiPaper-elevation11",
            "elevation12": "MuiPaper-elevation12",
            "elevation13": "MuiPaper-elevation13",
            "elevation14": "MuiPaper-elevation14",
            "elevation15": "MuiPaper-elevation15",
            "elevation16": "MuiPaper-elevation16",
            "elevation17": "MuiPaper-elevation17",
            "elevation18": "MuiPaper-elevation18",
            "elevation19": "MuiPaper-elevation19",
            "elevation2": "MuiPaper-elevation2",
            "elevation20": "MuiPaper-elevation20",
            "elevation21": "MuiPaper-elevation21",
            "elevation22": "MuiPaper-elevation22",
            "elevation23": "MuiPaper-elevation23",
            "elevation24": "MuiPaper-elevation24",
            "elevation3": "MuiPaper-elevation3",
            "elevation4": "MuiPaper-elevation4",
            "elevation5": "MuiPaper-elevation5",
            "elevation6": "MuiPaper-elevation6",
            "elevation7": "MuiPaper-elevation7",
            "elevation8": "MuiPaper-elevation8",
            "elevation9": "MuiPaper-elevation9",
            "outlined": "MuiPaper-outlined",
            "root": "MuiPaper-root",
            "rounded": "MuiPaper-rounded",
          }
        }
      >
        <div
          className="MuiPaper-root makeStyles-paper-2 MuiPaper-elevation1 MuiPaper-rounded"
        >
          <EnhancedTableToolbar>
            <WithStyles(ForwardRef(Toolbar))
              className="makeStyles-root-5"
            >
              <ForwardRef(Toolbar)
                className="makeStyles-root-5"
                classes={
                  Object {
                    "dense": "MuiToolbar-dense",
                    "gutters": "MuiToolbar-gutters",
                    "regular": "MuiToolbar-regular",
                    "root": "MuiToolbar-root",
                  }
                }
              >
                <div
                  className="MuiToolbar-root MuiToolbar-regular makeStyles-root-5 MuiToolbar-gutters"
                >
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-title-7"
                    component="div"
                    id="tableTitle"
                    variant="h6"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-title-7"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      component="div"
                      id="tableTitle"
                      variant="h6"
                    >
                      <div
                        className="MuiTypography-root makeStyles-title-7 MuiTypography-h6"
                        id="tableTitle"
                      >
                        Scoreboard
                      </div>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                </div>
              </ForwardRef(Toolbar)>
            </WithStyles(ForwardRef(Toolbar))>
          </EnhancedTableToolbar>
          <WithStyles(ForwardRef(TableContainer))>
            <ForwardRef(TableContainer)
              classes={
                Object {
                  "root": "MuiTableContainer-root",
                }
              }
            >
              <div
                className="MuiTableContainer-root"
              >
                <WithStyles(ForwardRef(Table))
                  aria-label="enhanced table"
                  aria-labelledby="tableTitle"
                  className="makeStyles-table-3"
                  size="medium"
                >
                  <ForwardRef(Table)
                    aria-label="enhanced table"
                    aria-labelledby="tableTitle"
                    className="makeStyles-table-3"
                    classes={
                      Object {
                        "root": "MuiTable-root",
                        "stickyHeader": "MuiTable-stickyHeader",
                      }
                    }
                    size="medium"
                  >
                    <table
                      aria-label="enhanced table"
                      aria-labelledby="tableTitle"
                      className="MuiTable-root makeStyles-table-3"
                      role={null}
                    >
                      <EnhancedTableHead
                        classes={
                          Object {
                            "paper": "makeStyles-paper-2",
                            "root": "makeStyles-root-1",
                            "table": "makeStyles-table-3",
                            "visuallyHidden": "makeStyles-visuallyHidden-4",
                          }
                        }
                        onRequestSort={[Function]}
                        order="desc"
                        orderBy="score"
                        rowCount={2}
                      >
                        <WithStyles(ForwardRef(TableHead))>
                          <ForwardRef(TableHead)
                            classes={
                              Object {
                                "root": "MuiTableHead-root",
                              }
                            }
                          >
                            <thead
                              className="MuiTableHead-root"
                              role={null}
                            >
                              <WithStyles(ForwardRef(TableRow))>
                                <ForwardRef(TableRow)
                                  classes={
                                    Object {
                                      "footer": "MuiTableRow-footer",
                                      "head": "MuiTableRow-head",
                                      "hover": "MuiTableRow-hover",
                                      "root": "MuiTableRow-root",
                                      "selected": "Mui-selected",
                                    }
                                  }
                                >
                                  <tr
                                    className="MuiTableRow-root MuiTableRow-head"
                                    role={null}
                                  >
                                    <WithStyles(ForwardRef(TableCell))
                                      align="left"
                                      key="name"
                                      padding="none"
                                      sortDirection={false}
                                    >
                                      <ForwardRef(TableCell)
                                        align="left"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        padding="none"
                                        sortDirection={false}
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft MuiTableCell-paddingNone"
                                          scope="col"
                                        >
                                          <WithStyles(ForwardRef(TableSortLabel))
                                            active={false}
                                            className="nameHead"
                                            direction="asc"
                                            key="name"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(TableSortLabel)
                                              active={false}
                                              className="nameHead"
                                              classes={
                                                Object {
                                                  "active": "MuiTableSortLabel-active",
                                                  "icon": "MuiTableSortLabel-icon",
                                                  "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                  "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                  "root": "MuiTableSortLabel-root",
                                                }
                                              }
                                              direction="asc"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiTableSortLabel-root nameHead"
                                                component="span"
                                                disableRipple={true}
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiTableSortLabel-root nameHead"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="span"
                                                  disableRipple={true}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiTableSortLabel-root nameHead"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    Name
                                                    <ForwardRef(ArrowDownwardIcon)
                                                      className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDownwardIcon)>
                                                  </span>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(TableSortLabel)>
                                          </WithStyles(ForwardRef(TableSortLabel))>
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      align="right"
                                      key="score"
                                      padding="normal"
                                      sortDirection="desc"
                                    >
                                      <ForwardRef(TableCell)
                                        align="right"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        padding="normal"
                                        sortDirection="desc"
                                      >
                                        <th
                                          aria-sort="descending"
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignRight"
                                          scope="col"
                                        >
                                          <WithStyles(ForwardRef(TableSortLabel))
                                            active={true}
                                            className="scoreHead"
                                            direction="desc"
                                            key="score"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(TableSortLabel)
                                              active={true}
                                              className="scoreHead"
                                              classes={
                                                Object {
                                                  "active": "MuiTableSortLabel-active",
                                                  "icon": "MuiTableSortLabel-icon",
                                                  "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                  "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                  "root": "MuiTableSortLabel-root",
                                                }
                                              }
                                              direction="desc"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                component="span"
                                                disableRipple={true}
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="span"
                                                  disableRipple={true}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    Score
                                                    <span
                                                      className="makeStyles-visuallyHidden-4"
                                                    >
                                                      sorted descending
                                                    </span>
                                                    <ForwardRef(ArrowDownwardIcon)
                                                      className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDownwardIcon)>
                                                  </span>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(TableSortLabel)>
                                          </WithStyles(ForwardRef(TableSortLabel))>
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                  </tr>
                                </ForwardRef(TableRow)>
                              </WithStyles(ForwardRef(TableRow))>
                            </thead>
                          </ForwardRef(TableHead)>
                        </WithStyles(ForwardRef(TableHead))>
                      </EnhancedTableHead>
                      <WithStyles(ForwardRef(TableBody))>
                        <ForwardRef(TableBody)
                          classes={
                            Object {
                              "root": "MuiTableBody-root",
                            }
                          }
                        >
                          <tbody
                            className="MuiTableBody-root"
                            role={null}
                          >
                            <WithStyles(ForwardRef(TableRow))
                              key="0"
                              role="checkbox"
                              tabIndex={-1}
                            >
                              <ForwardRef(TableRow)
                                classes={
                                  Object {
                                    "footer": "MuiTableRow-footer",
                                    "head": "MuiTableRow-head",
                                    "hover": "MuiTableRow-hover",
                                    "root": "MuiTableRow-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                role="checkbox"
                                tabIndex={-1}
                              >
                                <tr
                                  className="MuiTableRow-root"
                                  role="checkbox"
                                  tabIndex={-1}
                                >
                                  <WithStyles(ForwardRef(TableCell))
                                    component="th"
                                    id="enhanced-table-checkbox-0"
                                    key="b"
                                    padding="none"
                                    scope="row"
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      component="th"
                                      id="enhanced-table-checkbox-0"
                                      padding="none"
                                      scope="row"
                                    >
                                      <th
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body MuiTableCell-paddingNone"
                                        id="enhanced-table-checkbox-0"
                                        role="cell"
                                        scope="row"
                                      >
                                        b
                                      </th>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                  <WithStyles(ForwardRef(TableCell))
                                    align="right"
                                    key="60"
                                  >
                                    <ForwardRef(TableCell)
                                      align="right"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                    >
                                      <td
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body MuiTableCell-alignRight"
                                      >
                                        60
                                      </td>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                </tr>
                              </ForwardRef(TableRow)>
                            </WithStyles(ForwardRef(TableRow))>
                            <WithStyles(ForwardRef(TableRow))
                              key="1"
                              role="checkbox"
                              tabIndex={-1}
                            >
                              <ForwardRef(TableRow)
                                classes={
                                  Object {
                                    "footer": "MuiTableRow-footer",
                                    "head": "MuiTableRow-head",
                                    "hover": "MuiTableRow-hover",
                                    "root": "MuiTableRow-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                role="checkbox"
                                tabIndex={-1}
                              >
                                <tr
                                  className="MuiTableRow-root"
                                  role="checkbox"
                                  tabIndex={-1}
                                >
                                  <WithStyles(ForwardRef(TableCell))
                                    component="th"
                                    id="enhanced-table-checkbox-1"
                                    key="a"
                                    padding="none"
                                    scope="row"
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      component="th"
                                      id="enhanced-table-checkbox-1"
                                      padding="none"
                                      scope="row"
                                    >
                                      <th
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body MuiTableCell-paddingNone"
                                        id="enhanced-table-checkbox-1"
                                        role="cell"
                                        scope="row"
                                      >
                                        a
                                      </th>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                  <WithStyles(ForwardRef(TableCell))
                                    align="right"
                                    key="50"
                                  >
                                    <ForwardRef(TableCell)
                                      align="right"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                    >
                                      <td
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body MuiTableCell-alignRight"
                                      >
                                        50
                                      </td>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                </tr>
                              </ForwardRef(TableRow)>
                            </WithStyles(ForwardRef(TableRow))>
                            <WithStyles(ForwardRef(TableRow))
                              style={
                                Object {
                                  "height": 159,
                                }
                              }
                            >
                              <ForwardRef(TableRow)
                                classes={
                                  Object {
                                    "footer": "MuiTableRow-footer",
                                    "head": "MuiTableRow-head",
                                    "hover": "MuiTableRow-hover",
                                    "root": "MuiTableRow-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                style={
                                  Object {
                                    "height": 159,
                                  }
                                }
                              >
                                <tr
                                  className="MuiTableRow-root"
                                  role={null}
                                  style={
                                    Object {
                                      "height": 159,
                                    }
                                  }
                                >
                                  <WithStyles(ForwardRef(TableCell))
                                    colSpan={6}
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      colSpan={6}
                                    >
                                      <td
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body"
                                        colSpan={6}
                                      />
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                </tr>
                              </ForwardRef(TableRow)>
                            </WithStyles(ForwardRef(TableRow))>
                          </tbody>
                        </ForwardRef(TableBody)>
                      </WithStyles(ForwardRef(TableBody))>
                    </table>
                  </ForwardRef(Table)>
                </WithStyles(ForwardRef(Table))>
              </div>
            </ForwardRef(TableContainer)>
          </WithStyles(ForwardRef(TableContainer))>
          <WithStyles(ForwardRef(TablePagination))
            component="div"
            count={2}
            onPageChange={[Function]}
            onRowsPerPageChange={[Function]}
            page={0}
            rowsPerPage={5}
            rowsPerPageOptions={
              Array [
                5,
                10,
                25,
              ]
            }
          >
            <ForwardRef(TablePagination)
              classes={
                Object {
                  "actions": "MuiTablePagination-actions",
                  "caption": "MuiTablePagination-caption",
                  "input": "MuiTablePagination-input",
                  "menuItem": "MuiTablePagination-menuItem",
                  "root": "MuiTablePagination-root",
                  "select": "MuiTablePagination-select",
                  "selectIcon": "MuiTablePagination-selectIcon",
                  "selectRoot": "MuiTablePagination-selectRoot",
                  "spacer": "MuiTablePagination-spacer",
                  "toolbar": "MuiTablePagination-toolbar",
                }
              }
              component="div"
              count={2}
              onPageChange={[Function]}
              onRowsPerPageChange={[Function]}
              page={0}
              rowsPerPage={5}
              rowsPerPageOptions={
                Array [
                  5,
                  10,
                  25,
                ]
              }
            >
              <div
                className="MuiTablePagination-root"
              >
                <WithStyles(ForwardRef(Toolbar))
                  className="MuiTablePagination-toolbar"
                >
                  <ForwardRef(Toolbar)
                    className="MuiTablePagination-toolbar"
                    classes={
                      Object {
                        "dense": "MuiToolbar-dense",
                        "gutters": "MuiToolbar-gutters",
                        "regular": "MuiToolbar-regular",
                        "root": "MuiToolbar-root",
                      }
                    }
                  >
                    <div
                      className="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                    >
                      <div
                        className="MuiTablePagination-spacer"
                      />
                      <WithStyles(ForwardRef(Typography))
                        className="MuiTablePagination-caption"
                        color="inherit"
                        id="mui-41324"
                        variant="body2"
                      >
                        <ForwardRef(Typography)
                          className="MuiTablePagination-caption"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          color="inherit"
                          id="mui-41324"
                          variant="body2"
                        >
                          <p
                            className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                            id="mui-41324"
                          >
                            Rows per page:
                          </p>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                      <WithStyles(ForwardRef(Select))
                        classes={
                          Object {
                            "icon": "MuiTablePagination-selectIcon",
                            "select": "MuiTablePagination-select",
                          }
                        }
                        id="mui-10030"
                        input={
                          <WithStyles(ForwardRef(InputBase))
                            className="MuiTablePagination-input MuiTablePagination-selectRoot"
                          />
                        }
                        labelId="mui-41324"
                        onChange={[Function]}
                        value={5}
                      >
                        <ForwardRef(Select)
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "filled": "MuiSelect-filled",
                              "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                              "iconFilled": "MuiSelect-iconFilled",
                              "iconOpen": "MuiSelect-iconOpen",
                              "iconOutlined": "MuiSelect-iconOutlined",
                              "nativeInput": "MuiSelect-nativeInput",
                              "outlined": "MuiSelect-outlined",
                              "root": "MuiSelect-root",
                              "select": "MuiSelect-select MuiTablePagination-select",
                              "selectMenu": "MuiSelect-selectMenu",
                            }
                          }
                          id="mui-10030"
                          input={
                            <WithStyles(ForwardRef(InputBase))
                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                            />
                          }
                          labelId="mui-41324"
                          onChange={[Function]}
                          value={5}
                        >
                          <WithStyles(ForwardRef(InputBase))
                            className="MuiTablePagination-input MuiTablePagination-selectRoot"
                            inputComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "aria-label": [Function],
                                  "autoFocus": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "disabled": [Function],
                                  "displayEmpty": [Function],
                                  "inputRef": [Function],
                                  "labelId": [Function],
                                  "multiple": [Function],
                                  "name": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onFocus": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "readOnly": [Function],
                                  "renderValue": [Function],
                                  "tabIndex": [Function],
                                  "type": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            inputProps={
                              Object {
                                "IconComponent": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "MenuProps": undefined,
                                "SelectDisplayProps": Object {
                                  "id": "mui-10030",
                                },
                                "autoWidth": false,
                                "children": Array [
                                  <WithStyles(ForwardRef(MenuItem))
                                    className="MuiTablePagination-menuItem"
                                    value={5}
                                  >
                                    5
                                  </WithStyles(ForwardRef(MenuItem))>,
                                  <WithStyles(ForwardRef(MenuItem))
                                    className="MuiTablePagination-menuItem"
                                    value={10}
                                  >
                                    10
                                  </WithStyles(ForwardRef(MenuItem))>,
                                  <WithStyles(ForwardRef(MenuItem))
                                    className="MuiTablePagination-menuItem"
                                    value={25}
                                  >
                                    25
                                  </WithStyles(ForwardRef(MenuItem))>,
                                ],
                                "classes": Object {
                                  "disabled": "Mui-disabled",
                                  "filled": "MuiSelect-filled",
                                  "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                  "iconFilled": "MuiSelect-iconFilled",
                                  "iconOpen": "MuiSelect-iconOpen",
                                  "iconOutlined": "MuiSelect-iconOutlined",
                                  "nativeInput": "MuiSelect-nativeInput",
                                  "outlined": "MuiSelect-outlined",
                                  "root": "MuiSelect-root",
                                  "select": "MuiSelect-select MuiTablePagination-select",
                                  "selectMenu": "MuiSelect-selectMenu",
                                },
                                "displayEmpty": false,
                                "labelId": "mui-41324",
                                "multiple": false,
                                "onClose": undefined,
                                "onOpen": undefined,
                                "open": undefined,
                                "renderValue": undefined,
                                "type": undefined,
                                "variant": "standard",
                              }
                            }
                            onChange={[Function]}
                            value={5}
                          >
                            <ForwardRef(InputBase)
                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "formControl": "MuiInputBase-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth",
                                  "input": "MuiInputBase-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense",
                                  "multiline": "MuiInputBase-multiline",
                                  "root": "MuiInputBase-root",
                                }
                              }
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "aria-label": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": undefined,
                                  "SelectDisplayProps": Object {
                                    "id": "mui-10030",
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <WithStyles(ForwardRef(MenuItem))
                                      className="MuiTablePagination-menuItem"
                                      value={5}
                                    >
                                      5
                                    </WithStyles(ForwardRef(MenuItem))>,
                                    <WithStyles(ForwardRef(MenuItem))
                                      className="MuiTablePagination-menuItem"
                                      value={10}
                                    >
                                      10
                                    </WithStyles(ForwardRef(MenuItem))>,
                                    <WithStyles(ForwardRef(MenuItem))
                                      className="MuiTablePagination-menuItem"
                                      value={25}
                                    >
                                      25
                                    </WithStyles(ForwardRef(MenuItem))>,
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "nativeInput": "MuiSelect-nativeInput",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select MuiTablePagination-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": false,
                                  "labelId": "mui-41324",
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              onChange={[Function]}
                              value={5}
                            >
                              <div
                                className="MuiInputBase-root MuiTablePagination-input MuiTablePagination-selectRoot"
                                onClick={[Function]}
                              >
                                <ForwardRef(SelectInput)
                                  IconComponent={
                                    Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    }
                                  }
                                  SelectDisplayProps={
                                    Object {
                                      "id": "mui-10030",
                                    }
                                  }
                                  autoWidth={false}
                                  className="MuiInputBase-input"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "nativeInput": "MuiSelect-nativeInput",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select MuiTablePagination-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    }
                                  }
                                  displayEmpty={false}
                                  inputRef={[Function]}
                                  labelId="mui-41324"
                                  multiple={false}
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  value={5}
                                  variant="standard"
                                >
                                  <div
                                    aria-haspopup="listbox"
                                    aria-labelledby="mui-41324 mui-10030"
                                    className="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                    id="mui-10030"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseDown={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    5
                                  </div>
                                  <input
                                    aria-hidden={true}
                                    className="MuiSelect-nativeInput"
                                    onAnimationStart={[Function]}
                                    onChange={[Function]}
                                    tabIndex={-1}
                                    value={5}
                                  />
                                  <ForwardRef(ArrowDropDownIcon)
                                    className="MuiSelect-icon MuiTablePagination-selectIcon"
                                  >
                                    <WithStyles(ForwardRef(SvgIcon))
                                      className="MuiSelect-icon MuiTablePagination-selectIcon"
                                    >
                                      <ForwardRef(SvgIcon)
                                        className="MuiSelect-icon MuiTablePagination-selectIcon"
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M7 10l5 5 5-5z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(ArrowDropDownIcon)>
                                  <WithStyles(ForwardRef(Menu))
                                    MenuListProps={
                                      Object {
                                        "aria-labelledby": "mui-41324",
                                        "disableListWrap": true,
                                        "role": "listbox",
                                      }
                                    }
                                    PaperProps={
                                      Object {
                                        "style": Object {
                                          "minWidth": undefined,
                                        },
                                      }
                                    }
                                    anchorEl={
                                      <div
                                        aria-haspopup="listbox"
                                        aria-labelledby="mui-41324 mui-10030"
                                        class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                        id="mui-10030"
                                        role="button"
                                        tabindex="0"
                                      >
                                        5
                                      </div>
                                    }
                                    id="menu-"
                                    onClose={[Function]}
                                    open={false}
                                  >
                                    <ForwardRef(Menu)
                                      MenuListProps={
                                        Object {
                                          "aria-labelledby": "mui-41324",
                                          "disableListWrap": true,
                                          "role": "listbox",
                                        }
                                      }
                                      PaperProps={
                                        Object {
                                          "style": Object {
                                            "minWidth": undefined,
                                          },
                                        }
                                      }
                                      anchorEl={
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="mui-41324 mui-10030"
                                          class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                          id="mui-10030"
                                          role="button"
                                          tabindex="0"
                                        >
                                          5
                                        </div>
                                      }
                                      classes={
                                        Object {
                                          "list": "MuiMenu-list",
                                          "paper": "MuiMenu-paper",
                                        }
                                      }
                                      id="menu-"
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <WithStyles(ForwardRef(Popover))
                                        PaperProps={
                                          Object {
                                            "classes": Object {
                                              "root": "MuiMenu-paper",
                                            },
                                            "style": Object {
                                              "minWidth": undefined,
                                            },
                                          }
                                        }
                                        TransitionProps={
                                          Object {
                                            "onEntering": [Function],
                                          }
                                        }
                                        anchorEl={
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="mui-41324 mui-10030"
                                            class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                            id="mui-10030"
                                            role="button"
                                            tabindex="0"
                                          >
                                            5
                                          </div>
                                        }
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        getContentAnchorEl={[Function]}
                                        id="menu-"
                                        onClose={[Function]}
                                        open={false}
                                        transformOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        transitionDuration="auto"
                                      >
                                        <ForwardRef(Popover)
                                          PaperProps={
                                            Object {
                                              "classes": Object {
                                                "root": "MuiMenu-paper",
                                              },
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          TransitionProps={
                                            Object {
                                              "onEntering": [Function],
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="mui-41324 mui-10030"
                                              class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                              id="mui-10030"
                                              role="button"
                                              tabindex="0"
                                            >
                                              5
                                            </div>
                                          }
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          classes={
                                            Object {
                                              "paper": "MuiPopover-paper",
                                              "root": "MuiPopover-root",
                                            }
                                          }
                                          getContentAnchorEl={[Function]}
                                          id="menu-"
                                          onClose={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          transitionDuration="auto"
                                        >
                                          <ForwardRef(Modal)
                                            BackdropProps={
                                              Object {
                                                "invisible": true,
                                              }
                                            }
                                            className="MuiPopover-root"
                                            container={<body />}
                                            id="menu-"
                                            onClose={[Function]}
                                            open={false}
                                          />
                                        </ForwardRef(Popover)>
                                      </WithStyles(ForwardRef(Popover))>
                                    </ForwardRef(Menu)>
                                  </WithStyles(ForwardRef(Menu))>
                                </ForwardRef(SelectInput)>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(Select)>
                      </WithStyles(ForwardRef(Select))>
                      <WithStyles(ForwardRef(Typography))
                        className="MuiTablePagination-caption"
                        color="inherit"
                        variant="body2"
                      >
                        <ForwardRef(Typography)
                          className="MuiTablePagination-caption"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          color="inherit"
                          variant="body2"
                        >
                          <p
                            className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                          >
                            1-2 of 2
                          </p>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                      <ForwardRef(TablePaginationActions)
                        backIconButtonProps={
                          Object {
                            "aria-label": "Previous page",
                            "title": "Previous page",
                          }
                        }
                        className="MuiTablePagination-actions"
                        count={2}
                        nextIconButtonProps={
                          Object {
                            "aria-label": "Next page",
                            "title": "Next page",
                          }
                        }
                        onPageChange={[Function]}
                        page={0}
                        rowsPerPage={5}
                      >
                        <div
                          className="MuiTablePagination-actions"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            aria-label="Previous page"
                            color="inherit"
                            disabled={true}
                            onClick={[Function]}
                            title="Previous page"
                          >
                            <ForwardRef(IconButton)
                              aria-label="Previous page"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              color="inherit"
                              disabled={true}
                              onClick={[Function]}
                              title="Previous page"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="Previous page"
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                disabled={true}
                                focusRipple={true}
                                onClick={[Function]}
                                title="Previous page"
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="Previous page"
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  disabled={true}
                                  focusRipple={true}
                                  onClick={[Function]}
                                  title="Previous page"
                                >
                                  <button
                                    aria-label="Previous page"
                                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={-1}
                                    title="Previous page"
                                    type="button"
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(KeyboardArrowLeftIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(KeyboardArrowLeftIcon)>
                                    </span>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                          <WithStyles(ForwardRef(IconButton))
                            aria-label="Next page"
                            color="inherit"
                            disabled={true}
                            onClick={[Function]}
                            title="Next page"
                          >
                            <ForwardRef(IconButton)
                              aria-label="Next page"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              color="inherit"
                              disabled={true}
                              onClick={[Function]}
                              title="Next page"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="Next page"
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                disabled={true}
                                focusRipple={true}
                                onClick={[Function]}
                                title="Next page"
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="Next page"
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  disabled={true}
                                  focusRipple={true}
                                  onClick={[Function]}
                                  title="Next page"
                                >
                                  <button
                                    aria-label="Next page"
                                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={-1}
                                    title="Next page"
                                    type="button"
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(KeyboardArrowRightIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(KeyboardArrowRightIcon)>
                                    </span>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                        </div>
                      </ForwardRef(TablePaginationActions)>
                    </div>
                  </ForwardRef(Toolbar)>
                </WithStyles(ForwardRef(Toolbar))>
              </div>
            </ForwardRef(TablePagination)>
          </WithStyles(ForwardRef(TablePagination))>
        </div>
      </ForwardRef(Paper)>
    </WithStyles(ForwardRef(Paper))>
    <WithStyles(ForwardRef(FormControlLabel))
      control={
        <WithStyles(ForwardRef(Switch))
          checked={false}
          onChange={[Function]}
        />
      }
      label="Dense padding"
    >
      <ForwardRef(FormControlLabel)
        classes={
          Object {
            "disabled": "Mui-disabled",
            "label": "MuiFormControlLabel-label",
            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
            "root": "MuiFormControlLabel-root",
          }
        }
        control={
          <WithStyles(ForwardRef(Switch))
            checked={false}
            onChange={[Function]}
          />
        }
        label="Dense padding"
      >
        <label
          className="MuiFormControlLabel-root"
        >
          <WithStyles(ForwardRef(Switch))
            checked={false}
            onChange={[Function]}
          >
            <ForwardRef(Switch)
              checked={false}
              classes={
                Object {
                  "checked": "Mui-checked",
                  "colorPrimary": "MuiSwitch-colorPrimary",
                  "colorSecondary": "MuiSwitch-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiSwitch-edgeEnd",
                  "edgeStart": "MuiSwitch-edgeStart",
                  "input": "MuiSwitch-input",
                  "root": "MuiSwitch-root",
                  "sizeSmall": "MuiSwitch-sizeSmall",
                  "switchBase": "MuiSwitch-switchBase",
                  "thumb": "MuiSwitch-thumb",
                  "track": "MuiSwitch-track",
                }
              }
              onChange={[Function]}
            >
              <span
                className="MuiSwitch-root"
              >
                <WithStyles(ForwardRef(SwitchBase))
                  checked={false}
                  checkedIcon={
                    <span
                      className="MuiSwitch-thumb"
                    />
                  }
                  classes={
                    Object {
                      "checked": "Mui-checked",
                      "disabled": "Mui-disabled",
                      "input": "MuiSwitch-input",
                      "root": "MuiSwitch-switchBase MuiSwitch-colorSecondary",
                    }
                  }
                  icon={
                    <span
                      className="MuiSwitch-thumb"
                    />
                  }
                  onChange={[Function]}
                  type="checkbox"
                >
                  <ForwardRef(SwitchBase)
                    checked={false}
                    checkedIcon={
                      <span
                        className="MuiSwitch-thumb"
                      />
                    }
                    classes={
                      Object {
                        "checked": "PrivateSwitchBase-checked-9 Mui-checked",
                        "disabled": "PrivateSwitchBase-disabled-10 Mui-disabled",
                        "input": "PrivateSwitchBase-input-11 MuiSwitch-input",
                        "root": "PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary",
                      }
                    }
                    icon={
                      <span
                        className="MuiSwitch-thumb"
                      />
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <WithStyles(ForwardRef(IconButton))
                      className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                      component="span"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      tabIndex={null}
                    >
                      <ForwardRef(IconButton)
                        className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                        classes={
                          Object {
                            "colorInherit": "MuiIconButton-colorInherit",
                            "colorPrimary": "MuiIconButton-colorPrimary",
                            "colorSecondary": "MuiIconButton-colorSecondary",
                            "disabled": "Mui-disabled",
                            "edgeEnd": "MuiIconButton-edgeEnd",
                            "edgeStart": "MuiIconButton-edgeStart",
                            "label": "MuiIconButton-label",
                            "root": "MuiIconButton-root",
                            "sizeSmall": "MuiIconButton-sizeSmall",
                          }
                        }
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          centerRipple={true}
                          className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                          component="span"
                          disabled={false}
                          focusRipple={true}
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <ForwardRef(ButtonBase)
                            centerRipple={true}
                            className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <span
                              aria-disabled={false}
                              className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={null}
                            >
                              <span
                                className="MuiIconButton-label"
                              >
                                <input
                                  checked={false}
                                  className="PrivateSwitchBase-input-11 MuiSwitch-input"
                                  onChange={[Function]}
                                  type="checkbox"
                                />
                                <span
                                  className="MuiSwitch-thumb"
                                />
                              </span>
                              <WithStyles(memo)
                                center={true}
                              >
                                <ForwardRef(TouchRipple)
                                  center={true}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </span>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(IconButton)>
                    </WithStyles(ForwardRef(IconButton))>
                  </ForwardRef(SwitchBase)>
                </WithStyles(ForwardRef(SwitchBase))>
                <span
                  className="MuiSwitch-track"
                />
              </span>
            </ForwardRef(Switch)>
          </WithStyles(ForwardRef(Switch))>
          <WithStyles(ForwardRef(Typography))
            className="MuiFormControlLabel-label"
            component="span"
          >
            <ForwardRef(Typography)
              className="MuiFormControlLabel-label"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
              component="span"
            >
              <span
                className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
              >
                Dense padding
              </span>
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </label>
      </ForwardRef(FormControlLabel)>
    </WithStyles(ForwardRef(FormControlLabel))>
  </div>
</RenderScoreboard>
`;

exports[`sort scoreboard by name correctly 1`] = `
<RenderScoreboard
  rows={
    Array [
      Object {
        "name": "a",
        "score": 50,
      },
      Object {
        "name": "b",
        "score": 60,
      },
    ]
  }
>
  <div
    className="makeStyles-root-1"
  >
    <WithStyles(ForwardRef(Paper))
      className="makeStyles-paper-2"
    >
      <ForwardRef(Paper)
        className="makeStyles-paper-2"
        classes={
          Object {
            "elevation0": "MuiPaper-elevation0",
            "elevation1": "MuiPaper-elevation1",
            "elevation10": "MuiPaper-elevation10",
            "elevation11": "MuiPaper-elevation11",
            "elevation12": "MuiPaper-elevation12",
            "elevation13": "MuiPaper-elevation13",
            "elevation14": "MuiPaper-elevation14",
            "elevation15": "MuiPaper-elevation15",
            "elevation16": "MuiPaper-elevation16",
            "elevation17": "MuiPaper-elevation17",
            "elevation18": "MuiPaper-elevation18",
            "elevation19": "MuiPaper-elevation19",
            "elevation2": "MuiPaper-elevation2",
            "elevation20": "MuiPaper-elevation20",
            "elevation21": "MuiPaper-elevation21",
            "elevation22": "MuiPaper-elevation22",
            "elevation23": "MuiPaper-elevation23",
            "elevation24": "MuiPaper-elevation24",
            "elevation3": "MuiPaper-elevation3",
            "elevation4": "MuiPaper-elevation4",
            "elevation5": "MuiPaper-elevation5",
            "elevation6": "MuiPaper-elevation6",
            "elevation7": "MuiPaper-elevation7",
            "elevation8": "MuiPaper-elevation8",
            "elevation9": "MuiPaper-elevation9",
            "outlined": "MuiPaper-outlined",
            "root": "MuiPaper-root",
            "rounded": "MuiPaper-rounded",
          }
        }
      >
        <div
          className="MuiPaper-root makeStyles-paper-2 MuiPaper-elevation1 MuiPaper-rounded"
        >
          <EnhancedTableToolbar>
            <WithStyles(ForwardRef(Toolbar))
              className="makeStyles-root-5"
            >
              <ForwardRef(Toolbar)
                className="makeStyles-root-5"
                classes={
                  Object {
                    "dense": "MuiToolbar-dense",
                    "gutters": "MuiToolbar-gutters",
                    "regular": "MuiToolbar-regular",
                    "root": "MuiToolbar-root",
                  }
                }
              >
                <div
                  className="MuiToolbar-root MuiToolbar-regular makeStyles-root-5 MuiToolbar-gutters"
                >
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-title-7"
                    component="div"
                    id="tableTitle"
                    variant="h6"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-title-7"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      component="div"
                      id="tableTitle"
                      variant="h6"
                    >
                      <div
                        className="MuiTypography-root makeStyles-title-7 MuiTypography-h6"
                        id="tableTitle"
                      >
                        Scoreboard
                      </div>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                </div>
              </ForwardRef(Toolbar)>
            </WithStyles(ForwardRef(Toolbar))>
          </EnhancedTableToolbar>
          <WithStyles(ForwardRef(TableContainer))>
            <ForwardRef(TableContainer)
              classes={
                Object {
                  "root": "MuiTableContainer-root",
                }
              }
            >
              <div
                className="MuiTableContainer-root"
              >
                <WithStyles(ForwardRef(Table))
                  aria-label="enhanced table"
                  aria-labelledby="tableTitle"
                  className="makeStyles-table-3"
                  size="medium"
                >
                  <ForwardRef(Table)
                    aria-label="enhanced table"
                    aria-labelledby="tableTitle"
                    className="makeStyles-table-3"
                    classes={
                      Object {
                        "root": "MuiTable-root",
                        "stickyHeader": "MuiTable-stickyHeader",
                      }
                    }
                    size="medium"
                  >
                    <table
                      aria-label="enhanced table"
                      aria-labelledby="tableTitle"
                      className="MuiTable-root makeStyles-table-3"
                      role={null}
                    >
                      <EnhancedTableHead
                        classes={
                          Object {
                            "paper": "makeStyles-paper-2",
                            "root": "makeStyles-root-1",
                            "table": "makeStyles-table-3",
                            "visuallyHidden": "makeStyles-visuallyHidden-4",
                          }
                        }
                        onRequestSort={[Function]}
                        order="asc"
                        orderBy="name"
                        rowCount={2}
                      >
                        <WithStyles(ForwardRef(TableHead))>
                          <ForwardRef(TableHead)
                            classes={
                              Object {
                                "root": "MuiTableHead-root",
                              }
                            }
                          >
                            <thead
                              className="MuiTableHead-root"
                              role={null}
                            >
                              <WithStyles(ForwardRef(TableRow))>
                                <ForwardRef(TableRow)
                                  classes={
                                    Object {
                                      "footer": "MuiTableRow-footer",
                                      "head": "MuiTableRow-head",
                                      "hover": "MuiTableRow-hover",
                                      "root": "MuiTableRow-root",
                                      "selected": "Mui-selected",
                                    }
                                  }
                                >
                                  <tr
                                    className="MuiTableRow-root MuiTableRow-head"
                                    role={null}
                                  >
                                    <WithStyles(ForwardRef(TableCell))
                                      align="left"
                                      key="name"
                                      padding="none"
                                      sortDirection="asc"
                                    >
                                      <ForwardRef(TableCell)
                                        align="left"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        padding="none"
                                        sortDirection="asc"
                                      >
                                        <th
                                          aria-sort="ascending"
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft MuiTableCell-paddingNone"
                                          scope="col"
                                        >
                                          <WithStyles(ForwardRef(TableSortLabel))
                                            active={true}
                                            className="nameHead"
                                            direction="asc"
                                            key="name"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(TableSortLabel)
                                              active={true}
                                              className="nameHead"
                                              classes={
                                                Object {
                                                  "active": "MuiTableSortLabel-active",
                                                  "icon": "MuiTableSortLabel-icon",
                                                  "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                  "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                  "root": "MuiTableSortLabel-root",
                                                }
                                              }
                                              direction="asc"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiTableSortLabel-root nameHead MuiTableSortLabel-active"
                                                component="span"
                                                disableRipple={true}
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiTableSortLabel-root nameHead MuiTableSortLabel-active"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="span"
                                                  disableRipple={true}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiTableSortLabel-root nameHead MuiTableSortLabel-active"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    Name
                                                    <span
                                                      className="makeStyles-visuallyHidden-4"
                                                    >
                                                      sorted ascending
                                                    </span>
                                                    <ForwardRef(ArrowDownwardIcon)
                                                      className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDownwardIcon)>
                                                  </span>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(TableSortLabel)>
                                          </WithStyles(ForwardRef(TableSortLabel))>
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      align="right"
                                      key="score"
                                      padding="normal"
                                      sortDirection={false}
                                    >
                                      <ForwardRef(TableCell)
                                        align="right"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        padding="normal"
                                        sortDirection={false}
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignRight"
                                          scope="col"
                                        >
                                          <WithStyles(ForwardRef(TableSortLabel))
                                            active={false}
                                            className="scoreHead"
                                            direction="asc"
                                            key="score"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(TableSortLabel)
                                              active={false}
                                              className="scoreHead"
                                              classes={
                                                Object {
                                                  "active": "MuiTableSortLabel-active",
                                                  "icon": "MuiTableSortLabel-icon",
                                                  "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                  "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                  "root": "MuiTableSortLabel-root",
                                                }
                                              }
                                              direction="asc"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiTableSortLabel-root scoreHead"
                                                component="span"
                                                disableRipple={true}
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiTableSortLabel-root scoreHead"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="span"
                                                  disableRipple={true}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiTableSortLabel-root scoreHead"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    Score
                                                    <ForwardRef(ArrowDownwardIcon)
                                                      className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDownwardIcon)>
                                                  </span>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(TableSortLabel)>
                                          </WithStyles(ForwardRef(TableSortLabel))>
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                  </tr>
                                </ForwardRef(TableRow)>
                              </WithStyles(ForwardRef(TableRow))>
                            </thead>
                          </ForwardRef(TableHead)>
                        </WithStyles(ForwardRef(TableHead))>
                      </EnhancedTableHead>
                      <WithStyles(ForwardRef(TableBody))>
                        <ForwardRef(TableBody)
                          classes={
                            Object {
                              "root": "MuiTableBody-root",
                            }
                          }
                        >
                          <tbody
                            className="MuiTableBody-root"
                            role={null}
                          >
                            <WithStyles(ForwardRef(TableRow))
                              key="0"
                              role="checkbox"
                              tabIndex={-1}
                            >
                              <ForwardRef(TableRow)
                                classes={
                                  Object {
                                    "footer": "MuiTableRow-footer",
                                    "head": "MuiTableRow-head",
                                    "hover": "MuiTableRow-hover",
                                    "root": "MuiTableRow-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                role="checkbox"
                                tabIndex={-1}
                              >
                                <tr
                                  className="MuiTableRow-root"
                                  role="checkbox"
                                  tabIndex={-1}
                                >
                                  <WithStyles(ForwardRef(TableCell))
                                    component="th"
                                    id="enhanced-table-checkbox-0"
                                    key="a"
                                    padding="none"
                                    scope="row"
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      component="th"
                                      id="enhanced-table-checkbox-0"
                                      padding="none"
                                      scope="row"
                                    >
                                      <th
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body MuiTableCell-paddingNone"
                                        id="enhanced-table-checkbox-0"
                                        role="cell"
                                        scope="row"
                                      >
                                        a
                                      </th>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                  <WithStyles(ForwardRef(TableCell))
                                    align="right"
                                    key="50"
                                  >
                                    <ForwardRef(TableCell)
                                      align="right"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                    >
                                      <td
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body MuiTableCell-alignRight"
                                      >
                                        50
                                      </td>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                </tr>
                              </ForwardRef(TableRow)>
                            </WithStyles(ForwardRef(TableRow))>
                            <WithStyles(ForwardRef(TableRow))
                              key="1"
                              role="checkbox"
                              tabIndex={-1}
                            >
                              <ForwardRef(TableRow)
                                classes={
                                  Object {
                                    "footer": "MuiTableRow-footer",
                                    "head": "MuiTableRow-head",
                                    "hover": "MuiTableRow-hover",
                                    "root": "MuiTableRow-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                role="checkbox"
                                tabIndex={-1}
                              >
                                <tr
                                  className="MuiTableRow-root"
                                  role="checkbox"
                                  tabIndex={-1}
                                >
                                  <WithStyles(ForwardRef(TableCell))
                                    component="th"
                                    id="enhanced-table-checkbox-1"
                                    key="b"
                                    padding="none"
                                    scope="row"
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      component="th"
                                      id="enhanced-table-checkbox-1"
                                      padding="none"
                                      scope="row"
                                    >
                                      <th
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body MuiTableCell-paddingNone"
                                        id="enhanced-table-checkbox-1"
                                        role="cell"
                                        scope="row"
                                      >
                                        b
                                      </th>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                  <WithStyles(ForwardRef(TableCell))
                                    align="right"
                                    key="60"
                                  >
                                    <ForwardRef(TableCell)
                                      align="right"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                    >
                                      <td
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body MuiTableCell-alignRight"
                                      >
                                        60
                                      </td>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                </tr>
                              </ForwardRef(TableRow)>
                            </WithStyles(ForwardRef(TableRow))>
                            <WithStyles(ForwardRef(TableRow))
                              style={
                                Object {
                                  "height": 159,
                                }
                              }
                            >
                              <ForwardRef(TableRow)
                                classes={
                                  Object {
                                    "footer": "MuiTableRow-footer",
                                    "head": "MuiTableRow-head",
                                    "hover": "MuiTableRow-hover",
                                    "root": "MuiTableRow-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                style={
                                  Object {
                                    "height": 159,
                                  }
                                }
                              >
                                <tr
                                  className="MuiTableRow-root"
                                  role={null}
                                  style={
                                    Object {
                                      "height": 159,
                                    }
                                  }
                                >
                                  <WithStyles(ForwardRef(TableCell))
                                    colSpan={6}
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      colSpan={6}
                                    >
                                      <td
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body"
                                        colSpan={6}
                                      />
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                </tr>
                              </ForwardRef(TableRow)>
                            </WithStyles(ForwardRef(TableRow))>
                          </tbody>
                        </ForwardRef(TableBody)>
                      </WithStyles(ForwardRef(TableBody))>
                    </table>
                  </ForwardRef(Table)>
                </WithStyles(ForwardRef(Table))>
              </div>
            </ForwardRef(TableContainer)>
          </WithStyles(ForwardRef(TableContainer))>
          <WithStyles(ForwardRef(TablePagination))
            component="div"
            count={2}
            onPageChange={[Function]}
            onRowsPerPageChange={[Function]}
            page={0}
            rowsPerPage={5}
            rowsPerPageOptions={
              Array [
                5,
                10,
                25,
              ]
            }
          >
            <ForwardRef(TablePagination)
              classes={
                Object {
                  "actions": "MuiTablePagination-actions",
                  "caption": "MuiTablePagination-caption",
                  "input": "MuiTablePagination-input",
                  "menuItem": "MuiTablePagination-menuItem",
                  "root": "MuiTablePagination-root",
                  "select": "MuiTablePagination-select",
                  "selectIcon": "MuiTablePagination-selectIcon",
                  "selectRoot": "MuiTablePagination-selectRoot",
                  "spacer": "MuiTablePagination-spacer",
                  "toolbar": "MuiTablePagination-toolbar",
                }
              }
              component="div"
              count={2}
              onPageChange={[Function]}
              onRowsPerPageChange={[Function]}
              page={0}
              rowsPerPage={5}
              rowsPerPageOptions={
                Array [
                  5,
                  10,
                  25,
                ]
              }
            >
              <div
                className="MuiTablePagination-root"
              >
                <WithStyles(ForwardRef(Toolbar))
                  className="MuiTablePagination-toolbar"
                >
                  <ForwardRef(Toolbar)
                    className="MuiTablePagination-toolbar"
                    classes={
                      Object {
                        "dense": "MuiToolbar-dense",
                        "gutters": "MuiToolbar-gutters",
                        "regular": "MuiToolbar-regular",
                        "root": "MuiToolbar-root",
                      }
                    }
                  >
                    <div
                      className="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                    >
                      <div
                        className="MuiTablePagination-spacer"
                      />
                      <WithStyles(ForwardRef(Typography))
                        className="MuiTablePagination-caption"
                        color="inherit"
                        id="mui-62136"
                        variant="body2"
                      >
                        <ForwardRef(Typography)
                          className="MuiTablePagination-caption"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          color="inherit"
                          id="mui-62136"
                          variant="body2"
                        >
                          <p
                            className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                            id="mui-62136"
                          >
                            Rows per page:
                          </p>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                      <WithStyles(ForwardRef(Select))
                        classes={
                          Object {
                            "icon": "MuiTablePagination-selectIcon",
                            "select": "MuiTablePagination-select",
                          }
                        }
                        id="mui-87814"
                        input={
                          <WithStyles(ForwardRef(InputBase))
                            className="MuiTablePagination-input MuiTablePagination-selectRoot"
                          />
                        }
                        labelId="mui-62136"
                        onChange={[Function]}
                        value={5}
                      >
                        <ForwardRef(Select)
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "filled": "MuiSelect-filled",
                              "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                              "iconFilled": "MuiSelect-iconFilled",
                              "iconOpen": "MuiSelect-iconOpen",
                              "iconOutlined": "MuiSelect-iconOutlined",
                              "nativeInput": "MuiSelect-nativeInput",
                              "outlined": "MuiSelect-outlined",
                              "root": "MuiSelect-root",
                              "select": "MuiSelect-select MuiTablePagination-select",
                              "selectMenu": "MuiSelect-selectMenu",
                            }
                          }
                          id="mui-87814"
                          input={
                            <WithStyles(ForwardRef(InputBase))
                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                            />
                          }
                          labelId="mui-62136"
                          onChange={[Function]}
                          value={5}
                        >
                          <WithStyles(ForwardRef(InputBase))
                            className="MuiTablePagination-input MuiTablePagination-selectRoot"
                            inputComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "aria-label": [Function],
                                  "autoFocus": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "disabled": [Function],
                                  "displayEmpty": [Function],
                                  "inputRef": [Function],
                                  "labelId": [Function],
                                  "multiple": [Function],
                                  "name": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onFocus": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "readOnly": [Function],
                                  "renderValue": [Function],
                                  "tabIndex": [Function],
                                  "type": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            inputProps={
                              Object {
                                "IconComponent": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "MenuProps": undefined,
                                "SelectDisplayProps": Object {
                                  "id": "mui-87814",
                                },
                                "autoWidth": false,
                                "children": Array [
                                  <WithStyles(ForwardRef(MenuItem))
                                    className="MuiTablePagination-menuItem"
                                    value={5}
                                  >
                                    5
                                  </WithStyles(ForwardRef(MenuItem))>,
                                  <WithStyles(ForwardRef(MenuItem))
                                    className="MuiTablePagination-menuItem"
                                    value={10}
                                  >
                                    10
                                  </WithStyles(ForwardRef(MenuItem))>,
                                  <WithStyles(ForwardRef(MenuItem))
                                    className="MuiTablePagination-menuItem"
                                    value={25}
                                  >
                                    25
                                  </WithStyles(ForwardRef(MenuItem))>,
                                ],
                                "classes": Object {
                                  "disabled": "Mui-disabled",
                                  "filled": "MuiSelect-filled",
                                  "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                  "iconFilled": "MuiSelect-iconFilled",
                                  "iconOpen": "MuiSelect-iconOpen",
                                  "iconOutlined": "MuiSelect-iconOutlined",
                                  "nativeInput": "MuiSelect-nativeInput",
                                  "outlined": "MuiSelect-outlined",
                                  "root": "MuiSelect-root",
                                  "select": "MuiSelect-select MuiTablePagination-select",
                                  "selectMenu": "MuiSelect-selectMenu",
                                },
                                "displayEmpty": false,
                                "labelId": "mui-62136",
                                "multiple": false,
                                "onClose": undefined,
                                "onOpen": undefined,
                                "open": undefined,
                                "renderValue": undefined,
                                "type": undefined,
                                "variant": "standard",
                              }
                            }
                            onChange={[Function]}
                            value={5}
                          >
                            <ForwardRef(InputBase)
                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "formControl": "MuiInputBase-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth",
                                  "input": "MuiInputBase-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense",
                                  "multiline": "MuiInputBase-multiline",
                                  "root": "MuiInputBase-root",
                                }
                              }
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "aria-label": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": undefined,
                                  "SelectDisplayProps": Object {
                                    "id": "mui-87814",
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <WithStyles(ForwardRef(MenuItem))
                                      className="MuiTablePagination-menuItem"
                                      value={5}
                                    >
                                      5
                                    </WithStyles(ForwardRef(MenuItem))>,
                                    <WithStyles(ForwardRef(MenuItem))
                                      className="MuiTablePagination-menuItem"
                                      value={10}
                                    >
                                      10
                                    </WithStyles(ForwardRef(MenuItem))>,
                                    <WithStyles(ForwardRef(MenuItem))
                                      className="MuiTablePagination-menuItem"
                                      value={25}
                                    >
                                      25
                                    </WithStyles(ForwardRef(MenuItem))>,
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "nativeInput": "MuiSelect-nativeInput",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select MuiTablePagination-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": false,
                                  "labelId": "mui-62136",
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              onChange={[Function]}
                              value={5}
                            >
                              <div
                                className="MuiInputBase-root MuiTablePagination-input MuiTablePagination-selectRoot"
                                onClick={[Function]}
                              >
                                <ForwardRef(SelectInput)
                                  IconComponent={
                                    Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    }
                                  }
                                  SelectDisplayProps={
                                    Object {
                                      "id": "mui-87814",
                                    }
                                  }
                                  autoWidth={false}
                                  className="MuiInputBase-input"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "nativeInput": "MuiSelect-nativeInput",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select MuiTablePagination-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    }
                                  }
                                  displayEmpty={false}
                                  inputRef={[Function]}
                                  labelId="mui-62136"
                                  multiple={false}
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  value={5}
                                  variant="standard"
                                >
                                  <div
                                    aria-haspopup="listbox"
                                    aria-labelledby="mui-62136 mui-87814"
                                    className="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                    id="mui-87814"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseDown={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    5
                                  </div>
                                  <input
                                    aria-hidden={true}
                                    className="MuiSelect-nativeInput"
                                    onAnimationStart={[Function]}
                                    onChange={[Function]}
                                    tabIndex={-1}
                                    value={5}
                                  />
                                  <ForwardRef(ArrowDropDownIcon)
                                    className="MuiSelect-icon MuiTablePagination-selectIcon"
                                  >
                                    <WithStyles(ForwardRef(SvgIcon))
                                      className="MuiSelect-icon MuiTablePagination-selectIcon"
                                    >
                                      <ForwardRef(SvgIcon)
                                        className="MuiSelect-icon MuiTablePagination-selectIcon"
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M7 10l5 5 5-5z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(ArrowDropDownIcon)>
                                  <WithStyles(ForwardRef(Menu))
                                    MenuListProps={
                                      Object {
                                        "aria-labelledby": "mui-62136",
                                        "disableListWrap": true,
                                        "role": "listbox",
                                      }
                                    }
                                    PaperProps={
                                      Object {
                                        "style": Object {
                                          "minWidth": undefined,
                                        },
                                      }
                                    }
                                    anchorEl={
                                      <div
                                        aria-haspopup="listbox"
                                        aria-labelledby="mui-62136 mui-87814"
                                        class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                        id="mui-87814"
                                        role="button"
                                        tabindex="0"
                                      >
                                        5
                                      </div>
                                    }
                                    id="menu-"
                                    onClose={[Function]}
                                    open={false}
                                  >
                                    <ForwardRef(Menu)
                                      MenuListProps={
                                        Object {
                                          "aria-labelledby": "mui-62136",
                                          "disableListWrap": true,
                                          "role": "listbox",
                                        }
                                      }
                                      PaperProps={
                                        Object {
                                          "style": Object {
                                            "minWidth": undefined,
                                          },
                                        }
                                      }
                                      anchorEl={
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="mui-62136 mui-87814"
                                          class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                          id="mui-87814"
                                          role="button"
                                          tabindex="0"
                                        >
                                          5
                                        </div>
                                      }
                                      classes={
                                        Object {
                                          "list": "MuiMenu-list",
                                          "paper": "MuiMenu-paper",
                                        }
                                      }
                                      id="menu-"
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <WithStyles(ForwardRef(Popover))
                                        PaperProps={
                                          Object {
                                            "classes": Object {
                                              "root": "MuiMenu-paper",
                                            },
                                            "style": Object {
                                              "minWidth": undefined,
                                            },
                                          }
                                        }
                                        TransitionProps={
                                          Object {
                                            "onEntering": [Function],
                                          }
                                        }
                                        anchorEl={
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="mui-62136 mui-87814"
                                            class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                            id="mui-87814"
                                            role="button"
                                            tabindex="0"
                                          >
                                            5
                                          </div>
                                        }
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        getContentAnchorEl={[Function]}
                                        id="menu-"
                                        onClose={[Function]}
                                        open={false}
                                        transformOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        transitionDuration="auto"
                                      >
                                        <ForwardRef(Popover)
                                          PaperProps={
                                            Object {
                                              "classes": Object {
                                                "root": "MuiMenu-paper",
                                              },
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          TransitionProps={
                                            Object {
                                              "onEntering": [Function],
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="mui-62136 mui-87814"
                                              class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                              id="mui-87814"
                                              role="button"
                                              tabindex="0"
                                            >
                                              5
                                            </div>
                                          }
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          classes={
                                            Object {
                                              "paper": "MuiPopover-paper",
                                              "root": "MuiPopover-root",
                                            }
                                          }
                                          getContentAnchorEl={[Function]}
                                          id="menu-"
                                          onClose={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          transitionDuration="auto"
                                        >
                                          <ForwardRef(Modal)
                                            BackdropProps={
                                              Object {
                                                "invisible": true,
                                              }
                                            }
                                            className="MuiPopover-root"
                                            container={<body />}
                                            id="menu-"
                                            onClose={[Function]}
                                            open={false}
                                          />
                                        </ForwardRef(Popover)>
                                      </WithStyles(ForwardRef(Popover))>
                                    </ForwardRef(Menu)>
                                  </WithStyles(ForwardRef(Menu))>
                                </ForwardRef(SelectInput)>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(Select)>
                      </WithStyles(ForwardRef(Select))>
                      <WithStyles(ForwardRef(Typography))
                        className="MuiTablePagination-caption"
                        color="inherit"
                        variant="body2"
                      >
                        <ForwardRef(Typography)
                          className="MuiTablePagination-caption"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          color="inherit"
                          variant="body2"
                        >
                          <p
                            className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                          >
                            1-2 of 2
                          </p>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                      <ForwardRef(TablePaginationActions)
                        backIconButtonProps={
                          Object {
                            "aria-label": "Previous page",
                            "title": "Previous page",
                          }
                        }
                        className="MuiTablePagination-actions"
                        count={2}
                        nextIconButtonProps={
                          Object {
                            "aria-label": "Next page",
                            "title": "Next page",
                          }
                        }
                        onPageChange={[Function]}
                        page={0}
                        rowsPerPage={5}
                      >
                        <div
                          className="MuiTablePagination-actions"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            aria-label="Previous page"
                            color="inherit"
                            disabled={true}
                            onClick={[Function]}
                            title="Previous page"
                          >
                            <ForwardRef(IconButton)
                              aria-label="Previous page"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              color="inherit"
                              disabled={true}
                              onClick={[Function]}
                              title="Previous page"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="Previous page"
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                disabled={true}
                                focusRipple={true}
                                onClick={[Function]}
                                title="Previous page"
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="Previous page"
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  disabled={true}
                                  focusRipple={true}
                                  onClick={[Function]}
                                  title="Previous page"
                                >
                                  <button
                                    aria-label="Previous page"
                                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={-1}
                                    title="Previous page"
                                    type="button"
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(KeyboardArrowLeftIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(KeyboardArrowLeftIcon)>
                                    </span>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                          <WithStyles(ForwardRef(IconButton))
                            aria-label="Next page"
                            color="inherit"
                            disabled={true}
                            onClick={[Function]}
                            title="Next page"
                          >
                            <ForwardRef(IconButton)
                              aria-label="Next page"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              color="inherit"
                              disabled={true}
                              onClick={[Function]}
                              title="Next page"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="Next page"
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                disabled={true}
                                focusRipple={true}
                                onClick={[Function]}
                                title="Next page"
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="Next page"
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  disabled={true}
                                  focusRipple={true}
                                  onClick={[Function]}
                                  title="Next page"
                                >
                                  <button
                                    aria-label="Next page"
                                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={-1}
                                    title="Next page"
                                    type="button"
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(KeyboardArrowRightIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(KeyboardArrowRightIcon)>
                                    </span>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                        </div>
                      </ForwardRef(TablePaginationActions)>
                    </div>
                  </ForwardRef(Toolbar)>
                </WithStyles(ForwardRef(Toolbar))>
              </div>
            </ForwardRef(TablePagination)>
          </WithStyles(ForwardRef(TablePagination))>
        </div>
      </ForwardRef(Paper)>
    </WithStyles(ForwardRef(Paper))>
    <WithStyles(ForwardRef(FormControlLabel))
      control={
        <WithStyles(ForwardRef(Switch))
          checked={false}
          onChange={[Function]}
        />
      }
      label="Dense padding"
    >
      <ForwardRef(FormControlLabel)
        classes={
          Object {
            "disabled": "Mui-disabled",
            "label": "MuiFormControlLabel-label",
            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
            "root": "MuiFormControlLabel-root",
          }
        }
        control={
          <WithStyles(ForwardRef(Switch))
            checked={false}
            onChange={[Function]}
          />
        }
        label="Dense padding"
      >
        <label
          className="MuiFormControlLabel-root"
        >
          <WithStyles(ForwardRef(Switch))
            checked={false}
            onChange={[Function]}
          >
            <ForwardRef(Switch)
              checked={false}
              classes={
                Object {
                  "checked": "Mui-checked",
                  "colorPrimary": "MuiSwitch-colorPrimary",
                  "colorSecondary": "MuiSwitch-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiSwitch-edgeEnd",
                  "edgeStart": "MuiSwitch-edgeStart",
                  "input": "MuiSwitch-input",
                  "root": "MuiSwitch-root",
                  "sizeSmall": "MuiSwitch-sizeSmall",
                  "switchBase": "MuiSwitch-switchBase",
                  "thumb": "MuiSwitch-thumb",
                  "track": "MuiSwitch-track",
                }
              }
              onChange={[Function]}
            >
              <span
                className="MuiSwitch-root"
              >
                <WithStyles(ForwardRef(SwitchBase))
                  checked={false}
                  checkedIcon={
                    <span
                      className="MuiSwitch-thumb"
                    />
                  }
                  classes={
                    Object {
                      "checked": "Mui-checked",
                      "disabled": "Mui-disabled",
                      "input": "MuiSwitch-input",
                      "root": "MuiSwitch-switchBase MuiSwitch-colorSecondary",
                    }
                  }
                  icon={
                    <span
                      className="MuiSwitch-thumb"
                    />
                  }
                  onChange={[Function]}
                  type="checkbox"
                >
                  <ForwardRef(SwitchBase)
                    checked={false}
                    checkedIcon={
                      <span
                        className="MuiSwitch-thumb"
                      />
                    }
                    classes={
                      Object {
                        "checked": "PrivateSwitchBase-checked-9 Mui-checked",
                        "disabled": "PrivateSwitchBase-disabled-10 Mui-disabled",
                        "input": "PrivateSwitchBase-input-11 MuiSwitch-input",
                        "root": "PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary",
                      }
                    }
                    icon={
                      <span
                        className="MuiSwitch-thumb"
                      />
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <WithStyles(ForwardRef(IconButton))
                      className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                      component="span"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      tabIndex={null}
                    >
                      <ForwardRef(IconButton)
                        className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                        classes={
                          Object {
                            "colorInherit": "MuiIconButton-colorInherit",
                            "colorPrimary": "MuiIconButton-colorPrimary",
                            "colorSecondary": "MuiIconButton-colorSecondary",
                            "disabled": "Mui-disabled",
                            "edgeEnd": "MuiIconButton-edgeEnd",
                            "edgeStart": "MuiIconButton-edgeStart",
                            "label": "MuiIconButton-label",
                            "root": "MuiIconButton-root",
                            "sizeSmall": "MuiIconButton-sizeSmall",
                          }
                        }
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          centerRipple={true}
                          className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                          component="span"
                          disabled={false}
                          focusRipple={true}
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <ForwardRef(ButtonBase)
                            centerRipple={true}
                            className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <span
                              aria-disabled={false}
                              className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={null}
                            >
                              <span
                                className="MuiIconButton-label"
                              >
                                <input
                                  checked={false}
                                  className="PrivateSwitchBase-input-11 MuiSwitch-input"
                                  onChange={[Function]}
                                  type="checkbox"
                                />
                                <span
                                  className="MuiSwitch-thumb"
                                />
                              </span>
                              <WithStyles(memo)
                                center={true}
                              >
                                <ForwardRef(TouchRipple)
                                  center={true}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </span>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(IconButton)>
                    </WithStyles(ForwardRef(IconButton))>
                  </ForwardRef(SwitchBase)>
                </WithStyles(ForwardRef(SwitchBase))>
                <span
                  className="MuiSwitch-track"
                />
              </span>
            </ForwardRef(Switch)>
          </WithStyles(ForwardRef(Switch))>
          <WithStyles(ForwardRef(Typography))
            className="MuiFormControlLabel-label"
            component="span"
          >
            <ForwardRef(Typography)
              className="MuiFormControlLabel-label"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
              component="span"
            >
              <span
                className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
              >
                Dense padding
              </span>
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </label>
      </ForwardRef(FormControlLabel)>
    </WithStyles(ForwardRef(FormControlLabel))>
  </div>
</RenderScoreboard>
`;

exports[`sort scoreboard by score correctly 1`] = `
<RenderScoreboard
  rows={
    Array [
      Object {
        "name": "a",
        "score": 50,
      },
      Object {
        "name": "b",
        "score": 60,
      },
    ]
  }
>
  <div
    className="makeStyles-root-1"
  >
    <WithStyles(ForwardRef(Paper))
      className="makeStyles-paper-2"
    >
      <ForwardRef(Paper)
        className="makeStyles-paper-2"
        classes={
          Object {
            "elevation0": "MuiPaper-elevation0",
            "elevation1": "MuiPaper-elevation1",
            "elevation10": "MuiPaper-elevation10",
            "elevation11": "MuiPaper-elevation11",
            "elevation12": "MuiPaper-elevation12",
            "elevation13": "MuiPaper-elevation13",
            "elevation14": "MuiPaper-elevation14",
            "elevation15": "MuiPaper-elevation15",
            "elevation16": "MuiPaper-elevation16",
            "elevation17": "MuiPaper-elevation17",
            "elevation18": "MuiPaper-elevation18",
            "elevation19": "MuiPaper-elevation19",
            "elevation2": "MuiPaper-elevation2",
            "elevation20": "MuiPaper-elevation20",
            "elevation21": "MuiPaper-elevation21",
            "elevation22": "MuiPaper-elevation22",
            "elevation23": "MuiPaper-elevation23",
            "elevation24": "MuiPaper-elevation24",
            "elevation3": "MuiPaper-elevation3",
            "elevation4": "MuiPaper-elevation4",
            "elevation5": "MuiPaper-elevation5",
            "elevation6": "MuiPaper-elevation6",
            "elevation7": "MuiPaper-elevation7",
            "elevation8": "MuiPaper-elevation8",
            "elevation9": "MuiPaper-elevation9",
            "outlined": "MuiPaper-outlined",
            "root": "MuiPaper-root",
            "rounded": "MuiPaper-rounded",
          }
        }
      >
        <div
          className="MuiPaper-root makeStyles-paper-2 MuiPaper-elevation1 MuiPaper-rounded"
        >
          <EnhancedTableToolbar>
            <WithStyles(ForwardRef(Toolbar))
              className="makeStyles-root-5"
            >
              <ForwardRef(Toolbar)
                className="makeStyles-root-5"
                classes={
                  Object {
                    "dense": "MuiToolbar-dense",
                    "gutters": "MuiToolbar-gutters",
                    "regular": "MuiToolbar-regular",
                    "root": "MuiToolbar-root",
                  }
                }
              >
                <div
                  className="MuiToolbar-root MuiToolbar-regular makeStyles-root-5 MuiToolbar-gutters"
                >
                  <WithStyles(ForwardRef(Typography))
                    className="makeStyles-title-7"
                    component="div"
                    id="tableTitle"
                    variant="h6"
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-title-7"
                      classes={
                        Object {
                          "alignCenter": "MuiTypography-alignCenter",
                          "alignJustify": "MuiTypography-alignJustify",
                          "alignLeft": "MuiTypography-alignLeft",
                          "alignRight": "MuiTypography-alignRight",
                          "body1": "MuiTypography-body1",
                          "body2": "MuiTypography-body2",
                          "button": "MuiTypography-button",
                          "caption": "MuiTypography-caption",
                          "colorError": "MuiTypography-colorError",
                          "colorInherit": "MuiTypography-colorInherit",
                          "colorPrimary": "MuiTypography-colorPrimary",
                          "colorSecondary": "MuiTypography-colorSecondary",
                          "colorTextPrimary": "MuiTypography-colorTextPrimary",
                          "colorTextSecondary": "MuiTypography-colorTextSecondary",
                          "displayBlock": "MuiTypography-displayBlock",
                          "displayInline": "MuiTypography-displayInline",
                          "gutterBottom": "MuiTypography-gutterBottom",
                          "h1": "MuiTypography-h1",
                          "h2": "MuiTypography-h2",
                          "h3": "MuiTypography-h3",
                          "h4": "MuiTypography-h4",
                          "h5": "MuiTypography-h5",
                          "h6": "MuiTypography-h6",
                          "noWrap": "MuiTypography-noWrap",
                          "overline": "MuiTypography-overline",
                          "paragraph": "MuiTypography-paragraph",
                          "root": "MuiTypography-root",
                          "srOnly": "MuiTypography-srOnly",
                          "subtitle1": "MuiTypography-subtitle1",
                          "subtitle2": "MuiTypography-subtitle2",
                        }
                      }
                      component="div"
                      id="tableTitle"
                      variant="h6"
                    >
                      <div
                        className="MuiTypography-root makeStyles-title-7 MuiTypography-h6"
                        id="tableTitle"
                      >
                        Scoreboard
                      </div>
                    </ForwardRef(Typography)>
                  </WithStyles(ForwardRef(Typography))>
                </div>
              </ForwardRef(Toolbar)>
            </WithStyles(ForwardRef(Toolbar))>
          </EnhancedTableToolbar>
          <WithStyles(ForwardRef(TableContainer))>
            <ForwardRef(TableContainer)
              classes={
                Object {
                  "root": "MuiTableContainer-root",
                }
              }
            >
              <div
                className="MuiTableContainer-root"
              >
                <WithStyles(ForwardRef(Table))
                  aria-label="enhanced table"
                  aria-labelledby="tableTitle"
                  className="makeStyles-table-3"
                  size="medium"
                >
                  <ForwardRef(Table)
                    aria-label="enhanced table"
                    aria-labelledby="tableTitle"
                    className="makeStyles-table-3"
                    classes={
                      Object {
                        "root": "MuiTable-root",
                        "stickyHeader": "MuiTable-stickyHeader",
                      }
                    }
                    size="medium"
                  >
                    <table
                      aria-label="enhanced table"
                      aria-labelledby="tableTitle"
                      className="MuiTable-root makeStyles-table-3"
                      role={null}
                    >
                      <EnhancedTableHead
                        classes={
                          Object {
                            "paper": "makeStyles-paper-2",
                            "root": "makeStyles-root-1",
                            "table": "makeStyles-table-3",
                            "visuallyHidden": "makeStyles-visuallyHidden-4",
                          }
                        }
                        onRequestSort={[Function]}
                        order="asc"
                        orderBy="score"
                        rowCount={2}
                      >
                        <WithStyles(ForwardRef(TableHead))>
                          <ForwardRef(TableHead)
                            classes={
                              Object {
                                "root": "MuiTableHead-root",
                              }
                            }
                          >
                            <thead
                              className="MuiTableHead-root"
                              role={null}
                            >
                              <WithStyles(ForwardRef(TableRow))>
                                <ForwardRef(TableRow)
                                  classes={
                                    Object {
                                      "footer": "MuiTableRow-footer",
                                      "head": "MuiTableRow-head",
                                      "hover": "MuiTableRow-hover",
                                      "root": "MuiTableRow-root",
                                      "selected": "Mui-selected",
                                    }
                                  }
                                >
                                  <tr
                                    className="MuiTableRow-root MuiTableRow-head"
                                    role={null}
                                  >
                                    <WithStyles(ForwardRef(TableCell))
                                      align="left"
                                      key="name"
                                      padding="none"
                                      sortDirection={false}
                                    >
                                      <ForwardRef(TableCell)
                                        align="left"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        padding="none"
                                        sortDirection={false}
                                      >
                                        <th
                                          aria-sort={null}
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft MuiTableCell-paddingNone"
                                          scope="col"
                                        >
                                          <WithStyles(ForwardRef(TableSortLabel))
                                            active={false}
                                            className="nameHead"
                                            direction="asc"
                                            key="name"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(TableSortLabel)
                                              active={false}
                                              className="nameHead"
                                              classes={
                                                Object {
                                                  "active": "MuiTableSortLabel-active",
                                                  "icon": "MuiTableSortLabel-icon",
                                                  "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                  "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                  "root": "MuiTableSortLabel-root",
                                                }
                                              }
                                              direction="asc"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiTableSortLabel-root nameHead"
                                                component="span"
                                                disableRipple={true}
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiTableSortLabel-root nameHead"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="span"
                                                  disableRipple={true}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiTableSortLabel-root nameHead"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    Name
                                                    <ForwardRef(ArrowDownwardIcon)
                                                      className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDownwardIcon)>
                                                  </span>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(TableSortLabel)>
                                          </WithStyles(ForwardRef(TableSortLabel))>
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                    <WithStyles(ForwardRef(TableCell))
                                      align="right"
                                      key="score"
                                      padding="normal"
                                      sortDirection="asc"
                                    >
                                      <ForwardRef(TableCell)
                                        align="right"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTableCell-alignCenter",
                                            "alignJustify": "MuiTableCell-alignJustify",
                                            "alignLeft": "MuiTableCell-alignLeft",
                                            "alignRight": "MuiTableCell-alignRight",
                                            "body": "MuiTableCell-body",
                                            "footer": "MuiTableCell-footer",
                                            "head": "MuiTableCell-head",
                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                            "paddingNone": "MuiTableCell-paddingNone",
                                            "root": "MuiTableCell-root",
                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                          }
                                        }
                                        padding="normal"
                                        sortDirection="asc"
                                      >
                                        <th
                                          aria-sort="ascending"
                                          className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignRight"
                                          scope="col"
                                        >
                                          <WithStyles(ForwardRef(TableSortLabel))
                                            active={true}
                                            className="scoreHead"
                                            direction="asc"
                                            key="score"
                                            onClick={[Function]}
                                          >
                                            <ForwardRef(TableSortLabel)
                                              active={true}
                                              className="scoreHead"
                                              classes={
                                                Object {
                                                  "active": "MuiTableSortLabel-active",
                                                  "icon": "MuiTableSortLabel-icon",
                                                  "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                  "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                  "root": "MuiTableSortLabel-root",
                                                }
                                              }
                                              direction="asc"
                                              onClick={[Function]}
                                            >
                                              <WithStyles(ForwardRef(ButtonBase))
                                                className="MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                component="span"
                                                disableRipple={true}
                                                onClick={[Function]}
                                              >
                                                <ForwardRef(ButtonBase)
                                                  className="MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                  classes={
                                                    Object {
                                                      "disabled": "Mui-disabled",
                                                      "focusVisible": "Mui-focusVisible",
                                                      "root": "MuiButtonBase-root",
                                                    }
                                                  }
                                                  component="span"
                                                  disableRipple={true}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    aria-disabled={false}
                                                    className="MuiButtonBase-root MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                    onBlur={[Function]}
                                                    onClick={[Function]}
                                                    onDragLeave={[Function]}
                                                    onFocus={[Function]}
                                                    onKeyDown={[Function]}
                                                    onKeyUp={[Function]}
                                                    onMouseDown={[Function]}
                                                    onMouseLeave={[Function]}
                                                    onMouseUp={[Function]}
                                                    onTouchEnd={[Function]}
                                                    onTouchMove={[Function]}
                                                    onTouchStart={[Function]}
                                                    role="button"
                                                    tabIndex={0}
                                                  >
                                                    Score
                                                    <span
                                                      className="makeStyles-visuallyHidden-4"
                                                    >
                                                      sorted ascending
                                                    </span>
                                                    <ForwardRef(ArrowDownwardIcon)
                                                      className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDownwardIcon)>
                                                  </span>
                                                </ForwardRef(ButtonBase)>
                                              </WithStyles(ForwardRef(ButtonBase))>
                                            </ForwardRef(TableSortLabel)>
                                          </WithStyles(ForwardRef(TableSortLabel))>
                                        </th>
                                      </ForwardRef(TableCell)>
                                    </WithStyles(ForwardRef(TableCell))>
                                  </tr>
                                </ForwardRef(TableRow)>
                              </WithStyles(ForwardRef(TableRow))>
                            </thead>
                          </ForwardRef(TableHead)>
                        </WithStyles(ForwardRef(TableHead))>
                      </EnhancedTableHead>
                      <WithStyles(ForwardRef(TableBody))>
                        <ForwardRef(TableBody)
                          classes={
                            Object {
                              "root": "MuiTableBody-root",
                            }
                          }
                        >
                          <tbody
                            className="MuiTableBody-root"
                            role={null}
                          >
                            <WithStyles(ForwardRef(TableRow))
                              key="0"
                              role="checkbox"
                              tabIndex={-1}
                            >
                              <ForwardRef(TableRow)
                                classes={
                                  Object {
                                    "footer": "MuiTableRow-footer",
                                    "head": "MuiTableRow-head",
                                    "hover": "MuiTableRow-hover",
                                    "root": "MuiTableRow-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                role="checkbox"
                                tabIndex={-1}
                              >
                                <tr
                                  className="MuiTableRow-root"
                                  role="checkbox"
                                  tabIndex={-1}
                                >
                                  <WithStyles(ForwardRef(TableCell))
                                    component="th"
                                    id="enhanced-table-checkbox-0"
                                    key="a"
                                    padding="none"
                                    scope="row"
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      component="th"
                                      id="enhanced-table-checkbox-0"
                                      padding="none"
                                      scope="row"
                                    >
                                      <th
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body MuiTableCell-paddingNone"
                                        id="enhanced-table-checkbox-0"
                                        role="cell"
                                        scope="row"
                                      >
                                        a
                                      </th>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                  <WithStyles(ForwardRef(TableCell))
                                    align="right"
                                    key="50"
                                  >
                                    <ForwardRef(TableCell)
                                      align="right"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                    >
                                      <td
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body MuiTableCell-alignRight"
                                      >
                                        50
                                      </td>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                </tr>
                              </ForwardRef(TableRow)>
                            </WithStyles(ForwardRef(TableRow))>
                            <WithStyles(ForwardRef(TableRow))
                              key="1"
                              role="checkbox"
                              tabIndex={-1}
                            >
                              <ForwardRef(TableRow)
                                classes={
                                  Object {
                                    "footer": "MuiTableRow-footer",
                                    "head": "MuiTableRow-head",
                                    "hover": "MuiTableRow-hover",
                                    "root": "MuiTableRow-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                role="checkbox"
                                tabIndex={-1}
                              >
                                <tr
                                  className="MuiTableRow-root"
                                  role="checkbox"
                                  tabIndex={-1}
                                >
                                  <WithStyles(ForwardRef(TableCell))
                                    component="th"
                                    id="enhanced-table-checkbox-1"
                                    key="b"
                                    padding="none"
                                    scope="row"
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      component="th"
                                      id="enhanced-table-checkbox-1"
                                      padding="none"
                                      scope="row"
                                    >
                                      <th
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body MuiTableCell-paddingNone"
                                        id="enhanced-table-checkbox-1"
                                        role="cell"
                                        scope="row"
                                      >
                                        b
                                      </th>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                  <WithStyles(ForwardRef(TableCell))
                                    align="right"
                                    key="60"
                                  >
                                    <ForwardRef(TableCell)
                                      align="right"
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                    >
                                      <td
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body MuiTableCell-alignRight"
                                      >
                                        60
                                      </td>
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                </tr>
                              </ForwardRef(TableRow)>
                            </WithStyles(ForwardRef(TableRow))>
                            <WithStyles(ForwardRef(TableRow))
                              style={
                                Object {
                                  "height": 159,
                                }
                              }
                            >
                              <ForwardRef(TableRow)
                                classes={
                                  Object {
                                    "footer": "MuiTableRow-footer",
                                    "head": "MuiTableRow-head",
                                    "hover": "MuiTableRow-hover",
                                    "root": "MuiTableRow-root",
                                    "selected": "Mui-selected",
                                  }
                                }
                                style={
                                  Object {
                                    "height": 159,
                                  }
                                }
                              >
                                <tr
                                  className="MuiTableRow-root"
                                  role={null}
                                  style={
                                    Object {
                                      "height": 159,
                                    }
                                  }
                                >
                                  <WithStyles(ForwardRef(TableCell))
                                    colSpan={6}
                                  >
                                    <ForwardRef(TableCell)
                                      classes={
                                        Object {
                                          "alignCenter": "MuiTableCell-alignCenter",
                                          "alignJustify": "MuiTableCell-alignJustify",
                                          "alignLeft": "MuiTableCell-alignLeft",
                                          "alignRight": "MuiTableCell-alignRight",
                                          "body": "MuiTableCell-body",
                                          "footer": "MuiTableCell-footer",
                                          "head": "MuiTableCell-head",
                                          "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                          "paddingNone": "MuiTableCell-paddingNone",
                                          "root": "MuiTableCell-root",
                                          "sizeSmall": "MuiTableCell-sizeSmall",
                                          "stickyHeader": "MuiTableCell-stickyHeader",
                                        }
                                      }
                                      colSpan={6}
                                    >
                                      <td
                                        aria-sort={null}
                                        className="MuiTableCell-root MuiTableCell-body"
                                        colSpan={6}
                                      />
                                    </ForwardRef(TableCell)>
                                  </WithStyles(ForwardRef(TableCell))>
                                </tr>
                              </ForwardRef(TableRow)>
                            </WithStyles(ForwardRef(TableRow))>
                          </tbody>
                        </ForwardRef(TableBody)>
                      </WithStyles(ForwardRef(TableBody))>
                    </table>
                  </ForwardRef(Table)>
                </WithStyles(ForwardRef(Table))>
              </div>
            </ForwardRef(TableContainer)>
          </WithStyles(ForwardRef(TableContainer))>
          <WithStyles(ForwardRef(TablePagination))
            component="div"
            count={2}
            onPageChange={[Function]}
            onRowsPerPageChange={[Function]}
            page={0}
            rowsPerPage={5}
            rowsPerPageOptions={
              Array [
                5,
                10,
                25,
              ]
            }
          >
            <ForwardRef(TablePagination)
              classes={
                Object {
                  "actions": "MuiTablePagination-actions",
                  "caption": "MuiTablePagination-caption",
                  "input": "MuiTablePagination-input",
                  "menuItem": "MuiTablePagination-menuItem",
                  "root": "MuiTablePagination-root",
                  "select": "MuiTablePagination-select",
                  "selectIcon": "MuiTablePagination-selectIcon",
                  "selectRoot": "MuiTablePagination-selectRoot",
                  "spacer": "MuiTablePagination-spacer",
                  "toolbar": "MuiTablePagination-toolbar",
                }
              }
              component="div"
              count={2}
              onPageChange={[Function]}
              onRowsPerPageChange={[Function]}
              page={0}
              rowsPerPage={5}
              rowsPerPageOptions={
                Array [
                  5,
                  10,
                  25,
                ]
              }
            >
              <div
                className="MuiTablePagination-root"
              >
                <WithStyles(ForwardRef(Toolbar))
                  className="MuiTablePagination-toolbar"
                >
                  <ForwardRef(Toolbar)
                    className="MuiTablePagination-toolbar"
                    classes={
                      Object {
                        "dense": "MuiToolbar-dense",
                        "gutters": "MuiToolbar-gutters",
                        "regular": "MuiToolbar-regular",
                        "root": "MuiToolbar-root",
                      }
                    }
                  >
                    <div
                      className="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                    >
                      <div
                        className="MuiTablePagination-spacer"
                      />
                      <WithStyles(ForwardRef(Typography))
                        className="MuiTablePagination-caption"
                        color="inherit"
                        id="mui-5805"
                        variant="body2"
                      >
                        <ForwardRef(Typography)
                          className="MuiTablePagination-caption"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          color="inherit"
                          id="mui-5805"
                          variant="body2"
                        >
                          <p
                            className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                            id="mui-5805"
                          >
                            Rows per page:
                          </p>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                      <WithStyles(ForwardRef(Select))
                        classes={
                          Object {
                            "icon": "MuiTablePagination-selectIcon",
                            "select": "MuiTablePagination-select",
                          }
                        }
                        id="mui-44552"
                        input={
                          <WithStyles(ForwardRef(InputBase))
                            className="MuiTablePagination-input MuiTablePagination-selectRoot"
                          />
                        }
                        labelId="mui-5805"
                        onChange={[Function]}
                        value={5}
                      >
                        <ForwardRef(Select)
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "filled": "MuiSelect-filled",
                              "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                              "iconFilled": "MuiSelect-iconFilled",
                              "iconOpen": "MuiSelect-iconOpen",
                              "iconOutlined": "MuiSelect-iconOutlined",
                              "nativeInput": "MuiSelect-nativeInput",
                              "outlined": "MuiSelect-outlined",
                              "root": "MuiSelect-root",
                              "select": "MuiSelect-select MuiTablePagination-select",
                              "selectMenu": "MuiSelect-selectMenu",
                            }
                          }
                          id="mui-44552"
                          input={
                            <WithStyles(ForwardRef(InputBase))
                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                            />
                          }
                          labelId="mui-5805"
                          onChange={[Function]}
                          value={5}
                        >
                          <WithStyles(ForwardRef(InputBase))
                            className="MuiTablePagination-input MuiTablePagination-selectRoot"
                            inputComponent={
                              Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "IconComponent": [Function],
                                  "MenuProps": [Function],
                                  "SelectDisplayProps": [Function],
                                  "aria-label": [Function],
                                  "autoFocus": [Function],
                                  "autoWidth": [Function],
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "defaultValue": [Function],
                                  "disabled": [Function],
                                  "displayEmpty": [Function],
                                  "inputRef": [Function],
                                  "labelId": [Function],
                                  "multiple": [Function],
                                  "name": [Function],
                                  "onBlur": [Function],
                                  "onChange": [Function],
                                  "onClose": [Function],
                                  "onFocus": [Function],
                                  "onOpen": [Function],
                                  "open": [Function],
                                  "readOnly": [Function],
                                  "renderValue": [Function],
                                  "tabIndex": [Function],
                                  "type": [Function],
                                  "value": [Function],
                                  "variant": [Function],
                                },
                                "render": [Function],
                              }
                            }
                            inputProps={
                              Object {
                                "IconComponent": Object {
                                  "$$typeof": Symbol(react.memo),
                                  "compare": null,
                                  "type": Object {
                                    "$$typeof": Symbol(react.forward_ref),
                                    "render": [Function],
                                  },
                                },
                                "MenuProps": undefined,
                                "SelectDisplayProps": Object {
                                  "id": "mui-44552",
                                },
                                "autoWidth": false,
                                "children": Array [
                                  <WithStyles(ForwardRef(MenuItem))
                                    className="MuiTablePagination-menuItem"
                                    value={5}
                                  >
                                    5
                                  </WithStyles(ForwardRef(MenuItem))>,
                                  <WithStyles(ForwardRef(MenuItem))
                                    className="MuiTablePagination-menuItem"
                                    value={10}
                                  >
                                    10
                                  </WithStyles(ForwardRef(MenuItem))>,
                                  <WithStyles(ForwardRef(MenuItem))
                                    className="MuiTablePagination-menuItem"
                                    value={25}
                                  >
                                    25
                                  </WithStyles(ForwardRef(MenuItem))>,
                                ],
                                "classes": Object {
                                  "disabled": "Mui-disabled",
                                  "filled": "MuiSelect-filled",
                                  "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                  "iconFilled": "MuiSelect-iconFilled",
                                  "iconOpen": "MuiSelect-iconOpen",
                                  "iconOutlined": "MuiSelect-iconOutlined",
                                  "nativeInput": "MuiSelect-nativeInput",
                                  "outlined": "MuiSelect-outlined",
                                  "root": "MuiSelect-root",
                                  "select": "MuiSelect-select MuiTablePagination-select",
                                  "selectMenu": "MuiSelect-selectMenu",
                                },
                                "displayEmpty": false,
                                "labelId": "mui-5805",
                                "multiple": false,
                                "onClose": undefined,
                                "onOpen": undefined,
                                "open": undefined,
                                "renderValue": undefined,
                                "type": undefined,
                                "variant": "standard",
                              }
                            }
                            onChange={[Function]}
                            value={5}
                          >
                            <ForwardRef(InputBase)
                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                              classes={
                                Object {
                                  "adornedEnd": "MuiInputBase-adornedEnd",
                                  "adornedStart": "MuiInputBase-adornedStart",
                                  "colorSecondary": "MuiInputBase-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "error": "Mui-error",
                                  "focused": "Mui-focused",
                                  "formControl": "MuiInputBase-formControl",
                                  "fullWidth": "MuiInputBase-fullWidth",
                                  "input": "MuiInputBase-input",
                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                  "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                  "inputMarginDense": "MuiInputBase-inputMarginDense",
                                  "inputMultiline": "MuiInputBase-inputMultiline",
                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                  "marginDense": "MuiInputBase-marginDense",
                                  "multiline": "MuiInputBase-multiline",
                                  "root": "MuiInputBase-root",
                                }
                              }
                              inputComponent={
                                Object {
                                  "$$typeof": Symbol(react.forward_ref),
                                  "propTypes": Object {
                                    "IconComponent": [Function],
                                    "MenuProps": [Function],
                                    "SelectDisplayProps": [Function],
                                    "aria-label": [Function],
                                    "autoFocus": [Function],
                                    "autoWidth": [Function],
                                    "children": [Function],
                                    "className": [Function],
                                    "classes": [Function],
                                    "defaultValue": [Function],
                                    "disabled": [Function],
                                    "displayEmpty": [Function],
                                    "inputRef": [Function],
                                    "labelId": [Function],
                                    "multiple": [Function],
                                    "name": [Function],
                                    "onBlur": [Function],
                                    "onChange": [Function],
                                    "onClose": [Function],
                                    "onFocus": [Function],
                                    "onOpen": [Function],
                                    "open": [Function],
                                    "readOnly": [Function],
                                    "renderValue": [Function],
                                    "tabIndex": [Function],
                                    "type": [Function],
                                    "value": [Function],
                                    "variant": [Function],
                                  },
                                  "render": [Function],
                                }
                              }
                              inputProps={
                                Object {
                                  "IconComponent": Object {
                                    "$$typeof": Symbol(react.memo),
                                    "compare": null,
                                    "type": Object {
                                      "$$typeof": Symbol(react.forward_ref),
                                      "render": [Function],
                                    },
                                  },
                                  "MenuProps": undefined,
                                  "SelectDisplayProps": Object {
                                    "id": "mui-44552",
                                  },
                                  "autoWidth": false,
                                  "children": Array [
                                    <WithStyles(ForwardRef(MenuItem))
                                      className="MuiTablePagination-menuItem"
                                      value={5}
                                    >
                                      5
                                    </WithStyles(ForwardRef(MenuItem))>,
                                    <WithStyles(ForwardRef(MenuItem))
                                      className="MuiTablePagination-menuItem"
                                      value={10}
                                    >
                                      10
                                    </WithStyles(ForwardRef(MenuItem))>,
                                    <WithStyles(ForwardRef(MenuItem))
                                      className="MuiTablePagination-menuItem"
                                      value={25}
                                    >
                                      25
                                    </WithStyles(ForwardRef(MenuItem))>,
                                  ],
                                  "classes": Object {
                                    "disabled": "Mui-disabled",
                                    "filled": "MuiSelect-filled",
                                    "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                    "iconFilled": "MuiSelect-iconFilled",
                                    "iconOpen": "MuiSelect-iconOpen",
                                    "iconOutlined": "MuiSelect-iconOutlined",
                                    "nativeInput": "MuiSelect-nativeInput",
                                    "outlined": "MuiSelect-outlined",
                                    "root": "MuiSelect-root",
                                    "select": "MuiSelect-select MuiTablePagination-select",
                                    "selectMenu": "MuiSelect-selectMenu",
                                  },
                                  "displayEmpty": false,
                                  "labelId": "mui-5805",
                                  "multiple": false,
                                  "onClose": undefined,
                                  "onOpen": undefined,
                                  "open": undefined,
                                  "renderValue": undefined,
                                  "type": undefined,
                                  "variant": "standard",
                                }
                              }
                              onChange={[Function]}
                              value={5}
                            >
                              <div
                                className="MuiInputBase-root MuiTablePagination-input MuiTablePagination-selectRoot"
                                onClick={[Function]}
                              >
                                <ForwardRef(SelectInput)
                                  IconComponent={
                                    Object {
                                      "$$typeof": Symbol(react.memo),
                                      "compare": null,
                                      "type": Object {
                                        "$$typeof": Symbol(react.forward_ref),
                                        "render": [Function],
                                      },
                                    }
                                  }
                                  SelectDisplayProps={
                                    Object {
                                      "id": "mui-44552",
                                    }
                                  }
                                  autoWidth={false}
                                  className="MuiInputBase-input"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "filled": "MuiSelect-filled",
                                      "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                      "iconFilled": "MuiSelect-iconFilled",
                                      "iconOpen": "MuiSelect-iconOpen",
                                      "iconOutlined": "MuiSelect-iconOutlined",
                                      "nativeInput": "MuiSelect-nativeInput",
                                      "outlined": "MuiSelect-outlined",
                                      "root": "MuiSelect-root",
                                      "select": "MuiSelect-select MuiTablePagination-select",
                                      "selectMenu": "MuiSelect-selectMenu",
                                    }
                                  }
                                  displayEmpty={false}
                                  inputRef={[Function]}
                                  labelId="mui-5805"
                                  multiple={false}
                                  onAnimationStart={[Function]}
                                  onBlur={[Function]}
                                  onChange={[Function]}
                                  onFocus={[Function]}
                                  value={5}
                                  variant="standard"
                                >
                                  <div
                                    aria-haspopup="listbox"
                                    aria-labelledby="mui-5805 mui-44552"
                                    className="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                    id="mui-44552"
                                    onBlur={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onMouseDown={[Function]}
                                    role="button"
                                    tabIndex={0}
                                  >
                                    5
                                  </div>
                                  <input
                                    aria-hidden={true}
                                    className="MuiSelect-nativeInput"
                                    onAnimationStart={[Function]}
                                    onChange={[Function]}
                                    tabIndex={-1}
                                    value={5}
                                  />
                                  <ForwardRef(ArrowDropDownIcon)
                                    className="MuiSelect-icon MuiTablePagination-selectIcon"
                                  >
                                    <WithStyles(ForwardRef(SvgIcon))
                                      className="MuiSelect-icon MuiTablePagination-selectIcon"
                                    >
                                      <ForwardRef(SvgIcon)
                                        className="MuiSelect-icon MuiTablePagination-selectIcon"
                                        classes={
                                          Object {
                                            "colorAction": "MuiSvgIcon-colorAction",
                                            "colorDisabled": "MuiSvgIcon-colorDisabled",
                                            "colorError": "MuiSvgIcon-colorError",
                                            "colorPrimary": "MuiSvgIcon-colorPrimary",
                                            "colorSecondary": "MuiSvgIcon-colorSecondary",
                                            "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                            "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                            "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                            "root": "MuiSvgIcon-root",
                                          }
                                        }
                                      >
                                        <svg
                                          aria-hidden={true}
                                          className="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                          focusable="false"
                                          viewBox="0 0 24 24"
                                        >
                                          <path
                                            d="M7 10l5 5 5-5z"
                                          />
                                        </svg>
                                      </ForwardRef(SvgIcon)>
                                    </WithStyles(ForwardRef(SvgIcon))>
                                  </ForwardRef(ArrowDropDownIcon)>
                                  <WithStyles(ForwardRef(Menu))
                                    MenuListProps={
                                      Object {
                                        "aria-labelledby": "mui-5805",
                                        "disableListWrap": true,
                                        "role": "listbox",
                                      }
                                    }
                                    PaperProps={
                                      Object {
                                        "style": Object {
                                          "minWidth": undefined,
                                        },
                                      }
                                    }
                                    anchorEl={
                                      <div
                                        aria-haspopup="listbox"
                                        aria-labelledby="mui-5805 mui-44552"
                                        class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                        id="mui-44552"
                                        role="button"
                                        tabindex="0"
                                      >
                                        5
                                      </div>
                                    }
                                    id="menu-"
                                    onClose={[Function]}
                                    open={false}
                                  >
                                    <ForwardRef(Menu)
                                      MenuListProps={
                                        Object {
                                          "aria-labelledby": "mui-5805",
                                          "disableListWrap": true,
                                          "role": "listbox",
                                        }
                                      }
                                      PaperProps={
                                        Object {
                                          "style": Object {
                                            "minWidth": undefined,
                                          },
                                        }
                                      }
                                      anchorEl={
                                        <div
                                          aria-haspopup="listbox"
                                          aria-labelledby="mui-5805 mui-44552"
                                          class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                          id="mui-44552"
                                          role="button"
                                          tabindex="0"
                                        >
                                          5
                                        </div>
                                      }
                                      classes={
                                        Object {
                                          "list": "MuiMenu-list",
                                          "paper": "MuiMenu-paper",
                                        }
                                      }
                                      id="menu-"
                                      onClose={[Function]}
                                      open={false}
                                    >
                                      <WithStyles(ForwardRef(Popover))
                                        PaperProps={
                                          Object {
                                            "classes": Object {
                                              "root": "MuiMenu-paper",
                                            },
                                            "style": Object {
                                              "minWidth": undefined,
                                            },
                                          }
                                        }
                                        TransitionProps={
                                          Object {
                                            "onEntering": [Function],
                                          }
                                        }
                                        anchorEl={
                                          <div
                                            aria-haspopup="listbox"
                                            aria-labelledby="mui-5805 mui-44552"
                                            class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                            id="mui-44552"
                                            role="button"
                                            tabindex="0"
                                          >
                                            5
                                          </div>
                                        }
                                        anchorOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        getContentAnchorEl={[Function]}
                                        id="menu-"
                                        onClose={[Function]}
                                        open={false}
                                        transformOrigin={
                                          Object {
                                            "horizontal": "left",
                                            "vertical": "top",
                                          }
                                        }
                                        transitionDuration="auto"
                                      >
                                        <ForwardRef(Popover)
                                          PaperProps={
                                            Object {
                                              "classes": Object {
                                                "root": "MuiMenu-paper",
                                              },
                                              "style": Object {
                                                "minWidth": undefined,
                                              },
                                            }
                                          }
                                          TransitionProps={
                                            Object {
                                              "onEntering": [Function],
                                            }
                                          }
                                          anchorEl={
                                            <div
                                              aria-haspopup="listbox"
                                              aria-labelledby="mui-5805 mui-44552"
                                              class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                              id="mui-44552"
                                              role="button"
                                              tabindex="0"
                                            >
                                              5
                                            </div>
                                          }
                                          anchorOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          classes={
                                            Object {
                                              "paper": "MuiPopover-paper",
                                              "root": "MuiPopover-root",
                                            }
                                          }
                                          getContentAnchorEl={[Function]}
                                          id="menu-"
                                          onClose={[Function]}
                                          open={false}
                                          transformOrigin={
                                            Object {
                                              "horizontal": "left",
                                              "vertical": "top",
                                            }
                                          }
                                          transitionDuration="auto"
                                        >
                                          <ForwardRef(Modal)
                                            BackdropProps={
                                              Object {
                                                "invisible": true,
                                              }
                                            }
                                            className="MuiPopover-root"
                                            container={<body />}
                                            id="menu-"
                                            onClose={[Function]}
                                            open={false}
                                          />
                                        </ForwardRef(Popover)>
                                      </WithStyles(ForwardRef(Popover))>
                                    </ForwardRef(Menu)>
                                  </WithStyles(ForwardRef(Menu))>
                                </ForwardRef(SelectInput)>
                              </div>
                            </ForwardRef(InputBase)>
                          </WithStyles(ForwardRef(InputBase))>
                        </ForwardRef(Select)>
                      </WithStyles(ForwardRef(Select))>
                      <WithStyles(ForwardRef(Typography))
                        className="MuiTablePagination-caption"
                        color="inherit"
                        variant="body2"
                      >
                        <ForwardRef(Typography)
                          className="MuiTablePagination-caption"
                          classes={
                            Object {
                              "alignCenter": "MuiTypography-alignCenter",
                              "alignJustify": "MuiTypography-alignJustify",
                              "alignLeft": "MuiTypography-alignLeft",
                              "alignRight": "MuiTypography-alignRight",
                              "body1": "MuiTypography-body1",
                              "body2": "MuiTypography-body2",
                              "button": "MuiTypography-button",
                              "caption": "MuiTypography-caption",
                              "colorError": "MuiTypography-colorError",
                              "colorInherit": "MuiTypography-colorInherit",
                              "colorPrimary": "MuiTypography-colorPrimary",
                              "colorSecondary": "MuiTypography-colorSecondary",
                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                              "displayBlock": "MuiTypography-displayBlock",
                              "displayInline": "MuiTypography-displayInline",
                              "gutterBottom": "MuiTypography-gutterBottom",
                              "h1": "MuiTypography-h1",
                              "h2": "MuiTypography-h2",
                              "h3": "MuiTypography-h3",
                              "h4": "MuiTypography-h4",
                              "h5": "MuiTypography-h5",
                              "h6": "MuiTypography-h6",
                              "noWrap": "MuiTypography-noWrap",
                              "overline": "MuiTypography-overline",
                              "paragraph": "MuiTypography-paragraph",
                              "root": "MuiTypography-root",
                              "srOnly": "MuiTypography-srOnly",
                              "subtitle1": "MuiTypography-subtitle1",
                              "subtitle2": "MuiTypography-subtitle2",
                            }
                          }
                          color="inherit"
                          variant="body2"
                        >
                          <p
                            className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                          >
                            1-2 of 2
                          </p>
                        </ForwardRef(Typography)>
                      </WithStyles(ForwardRef(Typography))>
                      <ForwardRef(TablePaginationActions)
                        backIconButtonProps={
                          Object {
                            "aria-label": "Previous page",
                            "title": "Previous page",
                          }
                        }
                        className="MuiTablePagination-actions"
                        count={2}
                        nextIconButtonProps={
                          Object {
                            "aria-label": "Next page",
                            "title": "Next page",
                          }
                        }
                        onPageChange={[Function]}
                        page={0}
                        rowsPerPage={5}
                      >
                        <div
                          className="MuiTablePagination-actions"
                        >
                          <WithStyles(ForwardRef(IconButton))
                            aria-label="Previous page"
                            color="inherit"
                            disabled={true}
                            onClick={[Function]}
                            title="Previous page"
                          >
                            <ForwardRef(IconButton)
                              aria-label="Previous page"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              color="inherit"
                              disabled={true}
                              onClick={[Function]}
                              title="Previous page"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="Previous page"
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                disabled={true}
                                focusRipple={true}
                                onClick={[Function]}
                                title="Previous page"
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="Previous page"
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  disabled={true}
                                  focusRipple={true}
                                  onClick={[Function]}
                                  title="Previous page"
                                >
                                  <button
                                    aria-label="Previous page"
                                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={-1}
                                    title="Previous page"
                                    type="button"
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(KeyboardArrowLeftIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(KeyboardArrowLeftIcon)>
                                    </span>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                          <WithStyles(ForwardRef(IconButton))
                            aria-label="Next page"
                            color="inherit"
                            disabled={true}
                            onClick={[Function]}
                            title="Next page"
                          >
                            <ForwardRef(IconButton)
                              aria-label="Next page"
                              classes={
                                Object {
                                  "colorInherit": "MuiIconButton-colorInherit",
                                  "colorPrimary": "MuiIconButton-colorPrimary",
                                  "colorSecondary": "MuiIconButton-colorSecondary",
                                  "disabled": "Mui-disabled",
                                  "edgeEnd": "MuiIconButton-edgeEnd",
                                  "edgeStart": "MuiIconButton-edgeStart",
                                  "label": "MuiIconButton-label",
                                  "root": "MuiIconButton-root",
                                  "sizeSmall": "MuiIconButton-sizeSmall",
                                }
                              }
                              color="inherit"
                              disabled={true}
                              onClick={[Function]}
                              title="Next page"
                            >
                              <WithStyles(ForwardRef(ButtonBase))
                                aria-label="Next page"
                                centerRipple={true}
                                className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                disabled={true}
                                focusRipple={true}
                                onClick={[Function]}
                                title="Next page"
                              >
                                <ForwardRef(ButtonBase)
                                  aria-label="Next page"
                                  centerRipple={true}
                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                  classes={
                                    Object {
                                      "disabled": "Mui-disabled",
                                      "focusVisible": "Mui-focusVisible",
                                      "root": "MuiButtonBase-root",
                                    }
                                  }
                                  disabled={true}
                                  focusRipple={true}
                                  onClick={[Function]}
                                  title="Next page"
                                >
                                  <button
                                    aria-label="Next page"
                                    className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                    disabled={true}
                                    onBlur={[Function]}
                                    onClick={[Function]}
                                    onDragLeave={[Function]}
                                    onFocus={[Function]}
                                    onKeyDown={[Function]}
                                    onKeyUp={[Function]}
                                    onMouseDown={[Function]}
                                    onMouseLeave={[Function]}
                                    onMouseUp={[Function]}
                                    onTouchEnd={[Function]}
                                    onTouchMove={[Function]}
                                    onTouchStart={[Function]}
                                    tabIndex={-1}
                                    title="Next page"
                                    type="button"
                                  >
                                    <span
                                      className="MuiIconButton-label"
                                    >
                                      <ForwardRef(KeyboardArrowRightIcon)>
                                        <WithStyles(ForwardRef(SvgIcon))>
                                          <ForwardRef(SvgIcon)
                                            classes={
                                              Object {
                                                "colorAction": "MuiSvgIcon-colorAction",
                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                "colorError": "MuiSvgIcon-colorError",
                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                "root": "MuiSvgIcon-root",
                                              }
                                            }
                                          >
                                            <svg
                                              aria-hidden={true}
                                              className="MuiSvgIcon-root"
                                              focusable="false"
                                              viewBox="0 0 24 24"
                                            >
                                              <path
                                                d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                              />
                                            </svg>
                                          </ForwardRef(SvgIcon)>
                                        </WithStyles(ForwardRef(SvgIcon))>
                                      </ForwardRef(KeyboardArrowRightIcon)>
                                    </span>
                                  </button>
                                </ForwardRef(ButtonBase)>
                              </WithStyles(ForwardRef(ButtonBase))>
                            </ForwardRef(IconButton)>
                          </WithStyles(ForwardRef(IconButton))>
                        </div>
                      </ForwardRef(TablePaginationActions)>
                    </div>
                  </ForwardRef(Toolbar)>
                </WithStyles(ForwardRef(Toolbar))>
              </div>
            </ForwardRef(TablePagination)>
          </WithStyles(ForwardRef(TablePagination))>
        </div>
      </ForwardRef(Paper)>
    </WithStyles(ForwardRef(Paper))>
    <WithStyles(ForwardRef(FormControlLabel))
      control={
        <WithStyles(ForwardRef(Switch))
          checked={false}
          onChange={[Function]}
        />
      }
      label="Dense padding"
    >
      <ForwardRef(FormControlLabel)
        classes={
          Object {
            "disabled": "Mui-disabled",
            "label": "MuiFormControlLabel-label",
            "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
            "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
            "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
            "root": "MuiFormControlLabel-root",
          }
        }
        control={
          <WithStyles(ForwardRef(Switch))
            checked={false}
            onChange={[Function]}
          />
        }
        label="Dense padding"
      >
        <label
          className="MuiFormControlLabel-root"
        >
          <WithStyles(ForwardRef(Switch))
            checked={false}
            onChange={[Function]}
          >
            <ForwardRef(Switch)
              checked={false}
              classes={
                Object {
                  "checked": "Mui-checked",
                  "colorPrimary": "MuiSwitch-colorPrimary",
                  "colorSecondary": "MuiSwitch-colorSecondary",
                  "disabled": "Mui-disabled",
                  "edgeEnd": "MuiSwitch-edgeEnd",
                  "edgeStart": "MuiSwitch-edgeStart",
                  "input": "MuiSwitch-input",
                  "root": "MuiSwitch-root",
                  "sizeSmall": "MuiSwitch-sizeSmall",
                  "switchBase": "MuiSwitch-switchBase",
                  "thumb": "MuiSwitch-thumb",
                  "track": "MuiSwitch-track",
                }
              }
              onChange={[Function]}
            >
              <span
                className="MuiSwitch-root"
              >
                <WithStyles(ForwardRef(SwitchBase))
                  checked={false}
                  checkedIcon={
                    <span
                      className="MuiSwitch-thumb"
                    />
                  }
                  classes={
                    Object {
                      "checked": "Mui-checked",
                      "disabled": "Mui-disabled",
                      "input": "MuiSwitch-input",
                      "root": "MuiSwitch-switchBase MuiSwitch-colorSecondary",
                    }
                  }
                  icon={
                    <span
                      className="MuiSwitch-thumb"
                    />
                  }
                  onChange={[Function]}
                  type="checkbox"
                >
                  <ForwardRef(SwitchBase)
                    checked={false}
                    checkedIcon={
                      <span
                        className="MuiSwitch-thumb"
                      />
                    }
                    classes={
                      Object {
                        "checked": "PrivateSwitchBase-checked-9 Mui-checked",
                        "disabled": "PrivateSwitchBase-disabled-10 Mui-disabled",
                        "input": "PrivateSwitchBase-input-11 MuiSwitch-input",
                        "root": "PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary",
                      }
                    }
                    icon={
                      <span
                        className="MuiSwitch-thumb"
                      />
                    }
                    onChange={[Function]}
                    type="checkbox"
                  >
                    <WithStyles(ForwardRef(IconButton))
                      className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                      component="span"
                      onBlur={[Function]}
                      onFocus={[Function]}
                      tabIndex={null}
                    >
                      <ForwardRef(IconButton)
                        className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                        classes={
                          Object {
                            "colorInherit": "MuiIconButton-colorInherit",
                            "colorPrimary": "MuiIconButton-colorPrimary",
                            "colorSecondary": "MuiIconButton-colorSecondary",
                            "disabled": "Mui-disabled",
                            "edgeEnd": "MuiIconButton-edgeEnd",
                            "edgeStart": "MuiIconButton-edgeStart",
                            "label": "MuiIconButton-label",
                            "root": "MuiIconButton-root",
                            "sizeSmall": "MuiIconButton-sizeSmall",
                          }
                        }
                        component="span"
                        onBlur={[Function]}
                        onFocus={[Function]}
                        tabIndex={null}
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          centerRipple={true}
                          className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                          component="span"
                          disabled={false}
                          focusRipple={true}
                          onBlur={[Function]}
                          onFocus={[Function]}
                          tabIndex={null}
                        >
                          <ForwardRef(ButtonBase)
                            centerRipple={true}
                            className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="span"
                            disabled={false}
                            focusRipple={true}
                            onBlur={[Function]}
                            onFocus={[Function]}
                            tabIndex={null}
                          >
                            <span
                              aria-disabled={false}
                              className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                              onBlur={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={null}
                            >
                              <span
                                className="MuiIconButton-label"
                              >
                                <input
                                  checked={false}
                                  className="PrivateSwitchBase-input-11 MuiSwitch-input"
                                  onChange={[Function]}
                                  type="checkbox"
                                />
                                <span
                                  className="MuiSwitch-thumb"
                                />
                              </span>
                              <WithStyles(memo)
                                center={true}
                              >
                                <ForwardRef(TouchRipple)
                                  center={true}
                                  classes={
                                    Object {
                                      "child": "MuiTouchRipple-child",
                                      "childLeaving": "MuiTouchRipple-childLeaving",
                                      "childPulsate": "MuiTouchRipple-childPulsate",
                                      "ripple": "MuiTouchRipple-ripple",
                                      "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                      "rippleVisible": "MuiTouchRipple-rippleVisible",
                                      "root": "MuiTouchRipple-root",
                                    }
                                  }
                                >
                                  <span
                                    className="MuiTouchRipple-root"
                                  >
                                    <TransitionGroup
                                      childFactory={[Function]}
                                      component={null}
                                      exit={true}
                                    />
                                  </span>
                                </ForwardRef(TouchRipple)>
                              </WithStyles(memo)>
                            </span>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(IconButton)>
                    </WithStyles(ForwardRef(IconButton))>
                  </ForwardRef(SwitchBase)>
                </WithStyles(ForwardRef(SwitchBase))>
                <span
                  className="MuiSwitch-track"
                />
              </span>
            </ForwardRef(Switch)>
          </WithStyles(ForwardRef(Switch))>
          <WithStyles(ForwardRef(Typography))
            className="MuiFormControlLabel-label"
            component="span"
          >
            <ForwardRef(Typography)
              className="MuiFormControlLabel-label"
              classes={
                Object {
                  "alignCenter": "MuiTypography-alignCenter",
                  "alignJustify": "MuiTypography-alignJustify",
                  "alignLeft": "MuiTypography-alignLeft",
                  "alignRight": "MuiTypography-alignRight",
                  "body1": "MuiTypography-body1",
                  "body2": "MuiTypography-body2",
                  "button": "MuiTypography-button",
                  "caption": "MuiTypography-caption",
                  "colorError": "MuiTypography-colorError",
                  "colorInherit": "MuiTypography-colorInherit",
                  "colorPrimary": "MuiTypography-colorPrimary",
                  "colorSecondary": "MuiTypography-colorSecondary",
                  "colorTextPrimary": "MuiTypography-colorTextPrimary",
                  "colorTextSecondary": "MuiTypography-colorTextSecondary",
                  "displayBlock": "MuiTypography-displayBlock",
                  "displayInline": "MuiTypography-displayInline",
                  "gutterBottom": "MuiTypography-gutterBottom",
                  "h1": "MuiTypography-h1",
                  "h2": "MuiTypography-h2",
                  "h3": "MuiTypography-h3",
                  "h4": "MuiTypography-h4",
                  "h5": "MuiTypography-h5",
                  "h6": "MuiTypography-h6",
                  "noWrap": "MuiTypography-noWrap",
                  "overline": "MuiTypography-overline",
                  "paragraph": "MuiTypography-paragraph",
                  "root": "MuiTypography-root",
                  "srOnly": "MuiTypography-srOnly",
                  "subtitle1": "MuiTypography-subtitle1",
                  "subtitle2": "MuiTypography-subtitle2",
                }
              }
              component="span"
            >
              <span
                className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
              >
                Dense padding
              </span>
            </ForwardRef(Typography)>
          </WithStyles(ForwardRef(Typography))>
        </label>
      </ForwardRef(FormControlLabel)>
    </WithStyles(ForwardRef(FormControlLabel))>
  </div>
</RenderScoreboard>
`;
