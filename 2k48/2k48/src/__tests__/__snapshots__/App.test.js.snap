// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders App correctly 1`] = `
<div
  className="App"
>
  <WithStyles(ForwardRef(Grid))
    alignItems="center"
    container={true}
    direction="column"
    justify="center"
  >
    <WithStyles(ForwardRef(Grid))
      item={true}
      xs={1}
    >
      <ResizeButtons
        setCurrentSize={[Function]}
      />
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      item={true}
      xs={8}
    >
      <Board
        onGameOver={[Function]}
        size={4}
      />
      <Prompt
        finalScore={0}
        username={[Function]}
      />
    </WithStyles(ForwardRef(Grid))>
    <WithStyles(ForwardRef(Grid))
      item={true}
      xs={3}
    >
      <Scoreboard
        score={0}
        setScore={[Function]}
        setUsername={[Function]}
        username={false}
      />
    </WithStyles(ForwardRef(Grid))>
  </WithStyles(ForwardRef(Grid))>
</div>
`;

exports[`resizes correctly resizes 4x4 board correctly 1`] = `
<App>
  <div
    className="App"
  >
    <WithStyles(ForwardRef(Grid))
      alignItems="center"
      container={true}
      direction="column"
      justify="center"
    >
      <ForwardRef(Grid)
        alignItems="center"
        classes={
          Object {
            "align-content-xs-center": "MuiGrid-align-content-xs-center",
            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
            "align-items-xs-center": "MuiGrid-align-items-xs-center",
            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
            "container": "MuiGrid-container",
            "direction-xs-column": "MuiGrid-direction-xs-column",
            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
            "grid-lg-1": "MuiGrid-grid-lg-1",
            "grid-lg-10": "MuiGrid-grid-lg-10",
            "grid-lg-11": "MuiGrid-grid-lg-11",
            "grid-lg-12": "MuiGrid-grid-lg-12",
            "grid-lg-2": "MuiGrid-grid-lg-2",
            "grid-lg-3": "MuiGrid-grid-lg-3",
            "grid-lg-4": "MuiGrid-grid-lg-4",
            "grid-lg-5": "MuiGrid-grid-lg-5",
            "grid-lg-6": "MuiGrid-grid-lg-6",
            "grid-lg-7": "MuiGrid-grid-lg-7",
            "grid-lg-8": "MuiGrid-grid-lg-8",
            "grid-lg-9": "MuiGrid-grid-lg-9",
            "grid-lg-auto": "MuiGrid-grid-lg-auto",
            "grid-lg-true": "MuiGrid-grid-lg-true",
            "grid-md-1": "MuiGrid-grid-md-1",
            "grid-md-10": "MuiGrid-grid-md-10",
            "grid-md-11": "MuiGrid-grid-md-11",
            "grid-md-12": "MuiGrid-grid-md-12",
            "grid-md-2": "MuiGrid-grid-md-2",
            "grid-md-3": "MuiGrid-grid-md-3",
            "grid-md-4": "MuiGrid-grid-md-4",
            "grid-md-5": "MuiGrid-grid-md-5",
            "grid-md-6": "MuiGrid-grid-md-6",
            "grid-md-7": "MuiGrid-grid-md-7",
            "grid-md-8": "MuiGrid-grid-md-8",
            "grid-md-9": "MuiGrid-grid-md-9",
            "grid-md-auto": "MuiGrid-grid-md-auto",
            "grid-md-true": "MuiGrid-grid-md-true",
            "grid-sm-1": "MuiGrid-grid-sm-1",
            "grid-sm-10": "MuiGrid-grid-sm-10",
            "grid-sm-11": "MuiGrid-grid-sm-11",
            "grid-sm-12": "MuiGrid-grid-sm-12",
            "grid-sm-2": "MuiGrid-grid-sm-2",
            "grid-sm-3": "MuiGrid-grid-sm-3",
            "grid-sm-4": "MuiGrid-grid-sm-4",
            "grid-sm-5": "MuiGrid-grid-sm-5",
            "grid-sm-6": "MuiGrid-grid-sm-6",
            "grid-sm-7": "MuiGrid-grid-sm-7",
            "grid-sm-8": "MuiGrid-grid-sm-8",
            "grid-sm-9": "MuiGrid-grid-sm-9",
            "grid-sm-auto": "MuiGrid-grid-sm-auto",
            "grid-sm-true": "MuiGrid-grid-sm-true",
            "grid-xl-1": "MuiGrid-grid-xl-1",
            "grid-xl-10": "MuiGrid-grid-xl-10",
            "grid-xl-11": "MuiGrid-grid-xl-11",
            "grid-xl-12": "MuiGrid-grid-xl-12",
            "grid-xl-2": "MuiGrid-grid-xl-2",
            "grid-xl-3": "MuiGrid-grid-xl-3",
            "grid-xl-4": "MuiGrid-grid-xl-4",
            "grid-xl-5": "MuiGrid-grid-xl-5",
            "grid-xl-6": "MuiGrid-grid-xl-6",
            "grid-xl-7": "MuiGrid-grid-xl-7",
            "grid-xl-8": "MuiGrid-grid-xl-8",
            "grid-xl-9": "MuiGrid-grid-xl-9",
            "grid-xl-auto": "MuiGrid-grid-xl-auto",
            "grid-xl-true": "MuiGrid-grid-xl-true",
            "grid-xs-1": "MuiGrid-grid-xs-1",
            "grid-xs-10": "MuiGrid-grid-xs-10",
            "grid-xs-11": "MuiGrid-grid-xs-11",
            "grid-xs-12": "MuiGrid-grid-xs-12",
            "grid-xs-2": "MuiGrid-grid-xs-2",
            "grid-xs-3": "MuiGrid-grid-xs-3",
            "grid-xs-4": "MuiGrid-grid-xs-4",
            "grid-xs-5": "MuiGrid-grid-xs-5",
            "grid-xs-6": "MuiGrid-grid-xs-6",
            "grid-xs-7": "MuiGrid-grid-xs-7",
            "grid-xs-8": "MuiGrid-grid-xs-8",
            "grid-xs-9": "MuiGrid-grid-xs-9",
            "grid-xs-auto": "MuiGrid-grid-xs-auto",
            "grid-xs-true": "MuiGrid-grid-xs-true",
            "item": "MuiGrid-item",
            "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
            "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
            "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
            "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
            "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
            "root": "MuiGrid-root",
            "spacing-xs-1": "MuiGrid-spacing-xs-1",
            "spacing-xs-10": "MuiGrid-spacing-xs-10",
            "spacing-xs-2": "MuiGrid-spacing-xs-2",
            "spacing-xs-3": "MuiGrid-spacing-xs-3",
            "spacing-xs-4": "MuiGrid-spacing-xs-4",
            "spacing-xs-5": "MuiGrid-spacing-xs-5",
            "spacing-xs-6": "MuiGrid-spacing-xs-6",
            "spacing-xs-7": "MuiGrid-spacing-xs-7",
            "spacing-xs-8": "MuiGrid-spacing-xs-8",
            "spacing-xs-9": "MuiGrid-spacing-xs-9",
            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
            "zeroMinWidth": "MuiGrid-zeroMinWidth",
          }
        }
        container={true}
        direction="column"
        justify="center"
      >
        <div
          className="MuiGrid-root MuiGrid-container MuiGrid-direction-xs-column MuiGrid-align-items-xs-center MuiGrid-justify-content-xs-center"
        >
          <WithStyles(ForwardRef(Grid))
            item={true}
            xs={1}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              item={true}
              xs={1}
            >
              <div
                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1"
              >
                <ResizeButtons
                  setCurrentSize={[Function]}
                >
                  <div>
                    <button
                      className="resize4"
                      onClick={[Function]}
                      type="button"
                    >
                      4x4
                    </button>
                    <button
                      className="resize5"
                      onClick={[Function]}
                      type="button"
                    >
                      5x5
                    </button>
                    <button
                      className="resize6"
                      onClick={[Function]}
                      type="button"
                    >
                      6x6
                    </button>
                  </div>
                </ResizeButtons>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
            xs={8}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              item={true}
              xs={8}
            >
              <div
                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8"
              >
                <Board
                  onGameOver={[Function]}
                  size={4}
                >
                  <div>
                    <div
                      className="score"
                    >
                      Score: 
                      0
                    </div>
                    <table
                      border="1px solid black"
                      border-collapse="collapse"
                    >
                      <tbody>
                        <Row
                          key="0"
                          row={
                            Array [
                              0,
                              0,
                              4,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={4}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "rgb(0, 180, 128)",
                                  }
                                }
                                width="50"
                              >
                                <div>
                                  4
                                </div>
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                        <Row
                          key="1"
                          row={
                            Array [
                              0,
                              0,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                        <Row
                          key="2"
                          row={
                            Array [
                              0,
                              0,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                        <Row
                          key="3"
                          row={
                            Array [
                              0,
                              4,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={4}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "rgb(0, 180, 128)",
                                  }
                                }
                                width="50"
                              >
                                <div>
                                  4
                                </div>
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                      </tbody>
                    </table>
                    <div />
                  </div>
                </Board>
                <Prompt
                  finalScore={0}
                  username={[Function]}
                >
                  <div>
                    <WithStyles(ForwardRef(Dialog))
                      onClose={[Function]}
                      open={false}
                    >
                      <ForwardRef(Dialog)
                        classes={
                          Object {
                            "container": "MuiDialog-container",
                            "paper": "MuiDialog-paper",
                            "paperFullScreen": "MuiDialog-paperFullScreen",
                            "paperFullWidth": "MuiDialog-paperFullWidth",
                            "paperScrollBody": "MuiDialog-paperScrollBody",
                            "paperScrollPaper": "MuiDialog-paperScrollPaper",
                            "paperWidthFalse": "MuiDialog-paperWidthFalse",
                            "paperWidthLg": "MuiDialog-paperWidthLg",
                            "paperWidthMd": "MuiDialog-paperWidthMd",
                            "paperWidthSm": "MuiDialog-paperWidthSm",
                            "paperWidthXl": "MuiDialog-paperWidthXl",
                            "paperWidthXs": "MuiDialog-paperWidthXs",
                            "root": "MuiDialog-root",
                            "scrollBody": "MuiDialog-scrollBody",
                            "scrollPaper": "MuiDialog-scrollPaper",
                          }
                        }
                        onClose={[Function]}
                        open={false}
                      >
                        <ForwardRef(Modal)
                          BackdropComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Naked": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "invisible": [Function],
                                  "open": [Function],
                                  "transitionDuration": [Function],
                                },
                                "render": [Function],
                              },
                              "displayName": "WithStyles(ForwardRef(Backdrop))",
                              "options": Object {
                                "defaultTheme": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "activatedOpacity": 0.12,
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "disabledOpacity": 0.38,
                                      "focus": "rgba(0, 0, 0, 0.12)",
                                      "focusOpacity": 0.12,
                                      "hover": "rgba(0, 0, 0, 0.04)",
                                      "hoverOpacity": 0.04,
                                      "selected": "rgba(0, 0, 0, 0.08)",
                                      "selectedOpacity": 0.08,
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "info": Object {
                                      "contrastText": "#fff",
                                      "dark": "#1976d2",
                                      "light": "#64b5f6",
                                      "main": "#2196f3",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "success": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#388e3c",
                                      "light": "#81c784",
                                      "main": "#4caf50",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                    "warning": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#f57c00",
                                      "light": "#ffb74d",
                                      "main": "#ff9800",
                                    },
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                },
                                "name": "MuiBackdrop",
                              },
                              "propTypes": Object {
                                "classes": [Function],
                                "innerRef": [Function],
                              },
                              "render": [Function],
                              "useStyles": [Function],
                            }
                          }
                          BackdropProps={
                            Object {
                              "transitionDuration": Object {
                                "enter": 225,
                                "exit": 195,
                              },
                            }
                          }
                          className="MuiDialog-root"
                          closeAfterTransition={true}
                          disableEscapeKeyDown={false}
                          onClose={[Function]}
                          open={false}
                        />
                      </ForwardRef(Dialog)>
                    </WithStyles(ForwardRef(Dialog))>
                  </div>
                </Prompt>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
            xs={3}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              item={true}
              xs={3}
            >
              <div
                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-3"
              >
                <Scoreboard
                  score={0}
                  setScore={[Function]}
                  setUsername={[Function]}
                  username={false}
                >
                  <RenderScoreboard
                    rows={Array []}
                  >
                    <div
                      className="makeStyles-root-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="makeStyles-paper-2"
                      >
                        <ForwardRef(Paper)
                          className="makeStyles-paper-2"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "outlined": "MuiPaper-outlined",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                        >
                          <div
                            className="MuiPaper-root makeStyles-paper-2 MuiPaper-elevation1 MuiPaper-rounded"
                          >
                            <EnhancedTableToolbar>
                              <WithStyles(ForwardRef(Toolbar))
                                className="makeStyles-root-5"
                              >
                                <ForwardRef(Toolbar)
                                  className="makeStyles-root-5"
                                  classes={
                                    Object {
                                      "dense": "MuiToolbar-dense",
                                      "gutters": "MuiToolbar-gutters",
                                      "regular": "MuiToolbar-regular",
                                      "root": "MuiToolbar-root",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiToolbar-root MuiToolbar-regular makeStyles-root-5 MuiToolbar-gutters"
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      className="makeStyles-title-7"
                                      component="div"
                                      id="tableTitle"
                                      variant="h6"
                                    >
                                      <ForwardRef(Typography)
                                        className="makeStyles-title-7"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="div"
                                        id="tableTitle"
                                        variant="h6"
                                      >
                                        <div
                                          className="MuiTypography-root makeStyles-title-7 MuiTypography-h6"
                                          id="tableTitle"
                                        >
                                          Scoreboard
                                        </div>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </div>
                                </ForwardRef(Toolbar)>
                              </WithStyles(ForwardRef(Toolbar))>
                            </EnhancedTableToolbar>
                            <WithStyles(ForwardRef(TableContainer))>
                              <ForwardRef(TableContainer)
                                classes={
                                  Object {
                                    "root": "MuiTableContainer-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiTableContainer-root"
                                >
                                  <WithStyles(ForwardRef(Table))
                                    aria-label="enhanced table"
                                    aria-labelledby="tableTitle"
                                    className="makeStyles-table-3"
                                    size="medium"
                                  >
                                    <ForwardRef(Table)
                                      aria-label="enhanced table"
                                      aria-labelledby="tableTitle"
                                      className="makeStyles-table-3"
                                      classes={
                                        Object {
                                          "root": "MuiTable-root",
                                          "stickyHeader": "MuiTable-stickyHeader",
                                        }
                                      }
                                      size="medium"
                                    >
                                      <table
                                        aria-label="enhanced table"
                                        aria-labelledby="tableTitle"
                                        className="MuiTable-root makeStyles-table-3"
                                        role={null}
                                      >
                                        <EnhancedTableHead
                                          classes={
                                            Object {
                                              "paper": "makeStyles-paper-2",
                                              "root": "makeStyles-root-1",
                                              "table": "makeStyles-table-3",
                                              "visuallyHidden": "makeStyles-visuallyHidden-4",
                                            }
                                          }
                                          onRequestSort={[Function]}
                                          order="desc"
                                          orderBy="score"
                                          rowCount={0}
                                        >
                                          <WithStyles(ForwardRef(TableHead))>
                                            <ForwardRef(TableHead)
                                              classes={
                                                Object {
                                                  "root": "MuiTableHead-root",
                                                }
                                              }
                                            >
                                              <thead
                                                className="MuiTableHead-root"
                                                role={null}
                                              >
                                                <WithStyles(ForwardRef(TableRow))>
                                                  <ForwardRef(TableRow)
                                                    classes={
                                                      Object {
                                                        "footer": "MuiTableRow-footer",
                                                        "head": "MuiTableRow-head",
                                                        "hover": "MuiTableRow-hover",
                                                        "root": "MuiTableRow-root",
                                                        "selected": "Mui-selected",
                                                      }
                                                    }
                                                  >
                                                    <tr
                                                      className="MuiTableRow-root MuiTableRow-head"
                                                      role={null}
                                                    >
                                                      <WithStyles(ForwardRef(TableCell))
                                                        align="left"
                                                        key="name"
                                                        padding="none"
                                                        sortDirection={false}
                                                      >
                                                        <ForwardRef(TableCell)
                                                          align="left"
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTableCell-alignCenter",
                                                              "alignJustify": "MuiTableCell-alignJustify",
                                                              "alignLeft": "MuiTableCell-alignLeft",
                                                              "alignRight": "MuiTableCell-alignRight",
                                                              "body": "MuiTableCell-body",
                                                              "footer": "MuiTableCell-footer",
                                                              "head": "MuiTableCell-head",
                                                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                              "paddingNone": "MuiTableCell-paddingNone",
                                                              "root": "MuiTableCell-root",
                                                              "sizeSmall": "MuiTableCell-sizeSmall",
                                                              "stickyHeader": "MuiTableCell-stickyHeader",
                                                            }
                                                          }
                                                          padding="none"
                                                          sortDirection={false}
                                                        >
                                                          <th
                                                            aria-sort={null}
                                                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft MuiTableCell-paddingNone"
                                                            scope="col"
                                                          >
                                                            <WithStyles(ForwardRef(TableSortLabel))
                                                              active={false}
                                                              className="nameHead"
                                                              direction="asc"
                                                              key="name"
                                                              onClick={[Function]}
                                                            >
                                                              <ForwardRef(TableSortLabel)
                                                                active={false}
                                                                className="nameHead"
                                                                classes={
                                                                  Object {
                                                                    "active": "MuiTableSortLabel-active",
                                                                    "icon": "MuiTableSortLabel-icon",
                                                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                    "root": "MuiTableSortLabel-root",
                                                                  }
                                                                }
                                                                direction="asc"
                                                                onClick={[Function]}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  className="MuiTableSortLabel-root nameHead"
                                                                  component="span"
                                                                  disableRipple={true}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    className="MuiTableSortLabel-root nameHead"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="span"
                                                                    disableRipple={true}
                                                                    onClick={[Function]}
                                                                  >
                                                                    <span
                                                                      aria-disabled={false}
                                                                      className="MuiButtonBase-root MuiTableSortLabel-root nameHead"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      Name
                                                                      <ForwardRef(ArrowDownwardIcon)
                                                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                      >
                                                                        <WithStyles(ForwardRef(SvgIcon))
                                                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                        >
                                                                          <ForwardRef(SvgIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                            classes={
                                                                              Object {
                                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                "colorError": "MuiSvgIcon-colorError",
                                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                "root": "MuiSvgIcon-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <svg
                                                                              aria-hidden={true}
                                                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                              focusable="false"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <path
                                                                                d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                              />
                                                                            </svg>
                                                                          </ForwardRef(SvgIcon)>
                                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                                      </ForwardRef(ArrowDownwardIcon)>
                                                                    </span>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(TableSortLabel)>
                                                            </WithStyles(ForwardRef(TableSortLabel))>
                                                          </th>
                                                        </ForwardRef(TableCell)>
                                                      </WithStyles(ForwardRef(TableCell))>
                                                      <WithStyles(ForwardRef(TableCell))
                                                        align="right"
                                                        key="score"
                                                        padding="normal"
                                                        sortDirection="desc"
                                                      >
                                                        <ForwardRef(TableCell)
                                                          align="right"
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTableCell-alignCenter",
                                                              "alignJustify": "MuiTableCell-alignJustify",
                                                              "alignLeft": "MuiTableCell-alignLeft",
                                                              "alignRight": "MuiTableCell-alignRight",
                                                              "body": "MuiTableCell-body",
                                                              "footer": "MuiTableCell-footer",
                                                              "head": "MuiTableCell-head",
                                                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                              "paddingNone": "MuiTableCell-paddingNone",
                                                              "root": "MuiTableCell-root",
                                                              "sizeSmall": "MuiTableCell-sizeSmall",
                                                              "stickyHeader": "MuiTableCell-stickyHeader",
                                                            }
                                                          }
                                                          padding="normal"
                                                          sortDirection="desc"
                                                        >
                                                          <th
                                                            aria-sort="descending"
                                                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignRight"
                                                            scope="col"
                                                          >
                                                            <WithStyles(ForwardRef(TableSortLabel))
                                                              active={true}
                                                              className="scoreHead"
                                                              direction="desc"
                                                              key="score"
                                                              onClick={[Function]}
                                                            >
                                                              <ForwardRef(TableSortLabel)
                                                                active={true}
                                                                className="scoreHead"
                                                                classes={
                                                                  Object {
                                                                    "active": "MuiTableSortLabel-active",
                                                                    "icon": "MuiTableSortLabel-icon",
                                                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                    "root": "MuiTableSortLabel-root",
                                                                  }
                                                                }
                                                                direction="desc"
                                                                onClick={[Function]}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  className="MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                                  component="span"
                                                                  disableRipple={true}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    className="MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="span"
                                                                    disableRipple={true}
                                                                    onClick={[Function]}
                                                                  >
                                                                    <span
                                                                      aria-disabled={false}
                                                                      className="MuiButtonBase-root MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      Score
                                                                      <span
                                                                        className="makeStyles-visuallyHidden-4"
                                                                      >
                                                                        sorted descending
                                                                      </span>
                                                                      <ForwardRef(ArrowDownwardIcon)
                                                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                                      >
                                                                        <WithStyles(ForwardRef(SvgIcon))
                                                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                                        >
                                                                          <ForwardRef(SvgIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                                            classes={
                                                                              Object {
                                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                "colorError": "MuiSvgIcon-colorError",
                                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                "root": "MuiSvgIcon-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <svg
                                                                              aria-hidden={true}
                                                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                                              focusable="false"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <path
                                                                                d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                              />
                                                                            </svg>
                                                                          </ForwardRef(SvgIcon)>
                                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                                      </ForwardRef(ArrowDownwardIcon)>
                                                                    </span>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(TableSortLabel)>
                                                            </WithStyles(ForwardRef(TableSortLabel))>
                                                          </th>
                                                        </ForwardRef(TableCell)>
                                                      </WithStyles(ForwardRef(TableCell))>
                                                    </tr>
                                                  </ForwardRef(TableRow)>
                                                </WithStyles(ForwardRef(TableRow))>
                                              </thead>
                                            </ForwardRef(TableHead)>
                                          </WithStyles(ForwardRef(TableHead))>
                                        </EnhancedTableHead>
                                        <WithStyles(ForwardRef(TableBody))>
                                          <ForwardRef(TableBody)
                                            classes={
                                              Object {
                                                "root": "MuiTableBody-root",
                                              }
                                            }
                                          >
                                            <tbody
                                              className="MuiTableBody-root"
                                              role={null}
                                            >
                                              <WithStyles(ForwardRef(TableRow))
                                                style={
                                                  Object {
                                                    "height": 265,
                                                  }
                                                }
                                              >
                                                <ForwardRef(TableRow)
                                                  classes={
                                                    Object {
                                                      "footer": "MuiTableRow-footer",
                                                      "head": "MuiTableRow-head",
                                                      "hover": "MuiTableRow-hover",
                                                      "root": "MuiTableRow-root",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  style={
                                                    Object {
                                                      "height": 265,
                                                    }
                                                  }
                                                >
                                                  <tr
                                                    className="MuiTableRow-root"
                                                    role={null}
                                                    style={
                                                      Object {
                                                        "height": 265,
                                                      }
                                                    }
                                                  >
                                                    <WithStyles(ForwardRef(TableCell))
                                                      colSpan={6}
                                                    >
                                                      <ForwardRef(TableCell)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTableCell-alignCenter",
                                                            "alignJustify": "MuiTableCell-alignJustify",
                                                            "alignLeft": "MuiTableCell-alignLeft",
                                                            "alignRight": "MuiTableCell-alignRight",
                                                            "body": "MuiTableCell-body",
                                                            "footer": "MuiTableCell-footer",
                                                            "head": "MuiTableCell-head",
                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                            "paddingNone": "MuiTableCell-paddingNone",
                                                            "root": "MuiTableCell-root",
                                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                                          }
                                                        }
                                                        colSpan={6}
                                                      >
                                                        <td
                                                          aria-sort={null}
                                                          className="MuiTableCell-root MuiTableCell-body"
                                                          colSpan={6}
                                                        />
                                                      </ForwardRef(TableCell)>
                                                    </WithStyles(ForwardRef(TableCell))>
                                                  </tr>
                                                </ForwardRef(TableRow)>
                                              </WithStyles(ForwardRef(TableRow))>
                                            </tbody>
                                          </ForwardRef(TableBody)>
                                        </WithStyles(ForwardRef(TableBody))>
                                      </table>
                                    </ForwardRef(Table)>
                                  </WithStyles(ForwardRef(Table))>
                                </div>
                              </ForwardRef(TableContainer)>
                            </WithStyles(ForwardRef(TableContainer))>
                            <WithStyles(ForwardRef(TablePagination))
                              component="div"
                              count={0}
                              onPageChange={[Function]}
                              onRowsPerPageChange={[Function]}
                              page={0}
                              rowsPerPage={5}
                              rowsPerPageOptions={
                                Array [
                                  5,
                                  10,
                                  25,
                                ]
                              }
                            >
                              <ForwardRef(TablePagination)
                                classes={
                                  Object {
                                    "actions": "MuiTablePagination-actions",
                                    "caption": "MuiTablePagination-caption",
                                    "input": "MuiTablePagination-input",
                                    "menuItem": "MuiTablePagination-menuItem",
                                    "root": "MuiTablePagination-root",
                                    "select": "MuiTablePagination-select",
                                    "selectIcon": "MuiTablePagination-selectIcon",
                                    "selectRoot": "MuiTablePagination-selectRoot",
                                    "spacer": "MuiTablePagination-spacer",
                                    "toolbar": "MuiTablePagination-toolbar",
                                  }
                                }
                                component="div"
                                count={0}
                                onPageChange={[Function]}
                                onRowsPerPageChange={[Function]}
                                page={0}
                                rowsPerPage={5}
                                rowsPerPageOptions={
                                  Array [
                                    5,
                                    10,
                                    25,
                                  ]
                                }
                              >
                                <div
                                  className="MuiTablePagination-root"
                                >
                                  <WithStyles(ForwardRef(Toolbar))
                                    className="MuiTablePagination-toolbar"
                                  >
                                    <ForwardRef(Toolbar)
                                      className="MuiTablePagination-toolbar"
                                      classes={
                                        Object {
                                          "dense": "MuiToolbar-dense",
                                          "gutters": "MuiToolbar-gutters",
                                          "regular": "MuiToolbar-regular",
                                          "root": "MuiToolbar-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                      >
                                        <div
                                          className="MuiTablePagination-spacer"
                                        />
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiTablePagination-caption"
                                          color="inherit"
                                          id="mui-6386"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiTablePagination-caption"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="inherit"
                                            id="mui-6386"
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                                              id="mui-6386"
                                            >
                                              Rows per page:
                                            </p>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                        <WithStyles(ForwardRef(Select))
                                          classes={
                                            Object {
                                              "icon": "MuiTablePagination-selectIcon",
                                              "select": "MuiTablePagination-select",
                                            }
                                          }
                                          id="mui-31407"
                                          input={
                                            <WithStyles(ForwardRef(InputBase))
                                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                            />
                                          }
                                          labelId="mui-6386"
                                          onChange={[Function]}
                                          value={5}
                                        >
                                          <ForwardRef(Select)
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled",
                                                "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                "iconFilled": "MuiSelect-iconFilled",
                                                "iconOpen": "MuiSelect-iconOpen",
                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                "nativeInput": "MuiSelect-nativeInput",
                                                "outlined": "MuiSelect-outlined",
                                                "root": "MuiSelect-root",
                                                "select": "MuiSelect-select MuiTablePagination-select",
                                                "selectMenu": "MuiSelect-selectMenu",
                                              }
                                            }
                                            id="mui-31407"
                                            input={
                                              <WithStyles(ForwardRef(InputBase))
                                                className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                              />
                                            }
                                            labelId="mui-6386"
                                            onChange={[Function]}
                                            value={5}
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "MenuProps": [Function],
                                                    "SelectDisplayProps": [Function],
                                                    "aria-label": [Function],
                                                    "autoFocus": [Function],
                                                    "autoWidth": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "defaultValue": [Function],
                                                    "disabled": [Function],
                                                    "displayEmpty": [Function],
                                                    "inputRef": [Function],
                                                    "labelId": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onClose": [Function],
                                                    "onFocus": [Function],
                                                    "onOpen": [Function],
                                                    "open": [Function],
                                                    "readOnly": [Function],
                                                    "renderValue": [Function],
                                                    "tabIndex": [Function],
                                                    "type": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": "mui-31407",
                                                  },
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      className="MuiTablePagination-menuItem"
                                                      value={5}
                                                    >
                                                      5
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      className="MuiTablePagination-menuItem"
                                                      value={10}
                                                    >
                                                      10
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      className="MuiTablePagination-menuItem"
                                                      value={25}
                                                    >
                                                      25
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "nativeInput": "MuiSelect-nativeInput",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select MuiTablePagination-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "displayEmpty": false,
                                                  "labelId": "mui-6386",
                                                  "multiple": false,
                                                  "onClose": undefined,
                                                  "onOpen": undefined,
                                                  "open": undefined,
                                                  "renderValue": undefined,
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              onChange={[Function]}
                                              value={5}
                                            >
                                              <ForwardRef(InputBase)
                                                className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "formControl": "MuiInputBase-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                    "input": "MuiInputBase-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense",
                                                    "multiline": "MuiInputBase-multiline",
                                                    "root": "MuiInputBase-root",
                                                  }
                                                }
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "MenuProps": [Function],
                                                      "SelectDisplayProps": [Function],
                                                      "aria-label": [Function],
                                                      "autoFocus": [Function],
                                                      "autoWidth": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "defaultValue": [Function],
                                                      "disabled": [Function],
                                                      "displayEmpty": [Function],
                                                      "inputRef": [Function],
                                                      "labelId": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onClose": [Function],
                                                      "onFocus": [Function],
                                                      "onOpen": [Function],
                                                      "open": [Function],
                                                      "readOnly": [Function],
                                                      "renderValue": [Function],
                                                      "tabIndex": [Function],
                                                      "type": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "MenuProps": undefined,
                                                    "SelectDisplayProps": Object {
                                                      "id": "mui-31407",
                                                    },
                                                    "autoWidth": false,
                                                    "children": Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        className="MuiTablePagination-menuItem"
                                                        value={5}
                                                      >
                                                        5
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        className="MuiTablePagination-menuItem"
                                                        value={10}
                                                      >
                                                        10
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        className="MuiTablePagination-menuItem"
                                                        value={25}
                                                      >
                                                        25
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select MuiTablePagination-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "displayEmpty": false,
                                                    "labelId": "mui-6386",
                                                    "multiple": false,
                                                    "onClose": undefined,
                                                    "onOpen": undefined,
                                                    "open": undefined,
                                                    "renderValue": undefined,
                                                    "type": undefined,
                                                    "variant": "standard",
                                                  }
                                                }
                                                onChange={[Function]}
                                                value={5}
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiTablePagination-input MuiTablePagination-selectRoot"
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(SelectInput)
                                                    IconComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      }
                                                    }
                                                    SelectDisplayProps={
                                                      Object {
                                                        "id": "mui-31407",
                                                      }
                                                    }
                                                    autoWidth={false}
                                                    className="MuiInputBase-input"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select MuiTablePagination-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      }
                                                    }
                                                    displayEmpty={false}
                                                    inputRef={[Function]}
                                                    labelId="mui-6386"
                                                    multiple={false}
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    value={5}
                                                    variant="standard"
                                                  >
                                                    <div
                                                      aria-haspopup="listbox"
                                                      aria-labelledby="mui-6386 mui-31407"
                                                      className="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                      id="mui-31407"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      5
                                                    </div>
                                                    <input
                                                      aria-hidden={true}
                                                      className="MuiSelect-nativeInput"
                                                      onAnimationStart={[Function]}
                                                      onChange={[Function]}
                                                      tabIndex={-1}
                                                      value={5}
                                                    />
                                                    <ForwardRef(ArrowDropDownIcon)
                                                      className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M7 10l5 5 5-5z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDropDownIcon)>
                                                    <WithStyles(ForwardRef(Menu))
                                                      MenuListProps={
                                                        Object {
                                                          "aria-labelledby": "mui-6386",
                                                          "disableListWrap": true,
                                                          "role": "listbox",
                                                        }
                                                      }
                                                      PaperProps={
                                                        Object {
                                                          "style": Object {
                                                            "minWidth": undefined,
                                                          },
                                                        }
                                                      }
                                                      anchorEl={
                                                        <div
                                                          aria-haspopup="listbox"
                                                          aria-labelledby="mui-6386 mui-31407"
                                                          class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                          id="mui-31407"
                                                          role="button"
                                                          tabindex="0"
                                                        >
                                                          5
                                                        </div>
                                                      }
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      open={false}
                                                    >
                                                      <ForwardRef(Menu)
                                                        MenuListProps={
                                                          Object {
                                                            "aria-labelledby": "mui-6386",
                                                            "disableListWrap": true,
                                                            "role": "listbox",
                                                          }
                                                        }
                                                        PaperProps={
                                                          Object {
                                                            "style": Object {
                                                              "minWidth": undefined,
                                                            },
                                                          }
                                                        }
                                                        anchorEl={
                                                          <div
                                                            aria-haspopup="listbox"
                                                            aria-labelledby="mui-6386 mui-31407"
                                                            class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                            id="mui-31407"
                                                            role="button"
                                                            tabindex="0"
                                                          >
                                                            5
                                                          </div>
                                                        }
                                                        classes={
                                                          Object {
                                                            "list": "MuiMenu-list",
                                                            "paper": "MuiMenu-paper",
                                                          }
                                                        }
                                                        id="menu-"
                                                        onClose={[Function]}
                                                        open={false}
                                                      >
                                                        <WithStyles(ForwardRef(Popover))
                                                          PaperProps={
                                                            Object {
                                                              "classes": Object {
                                                                "root": "MuiMenu-paper",
                                                              },
                                                              "style": Object {
                                                                "minWidth": undefined,
                                                              },
                                                            }
                                                          }
                                                          TransitionProps={
                                                            Object {
                                                              "onEntering": [Function],
                                                            }
                                                          }
                                                          anchorEl={
                                                            <div
                                                              aria-haspopup="listbox"
                                                              aria-labelledby="mui-6386 mui-31407"
                                                              class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                              id="mui-31407"
                                                              role="button"
                                                              tabindex="0"
                                                            >
                                                              5
                                                            </div>
                                                          }
                                                          anchorOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          getContentAnchorEl={[Function]}
                                                          id="menu-"
                                                          onClose={[Function]}
                                                          open={false}
                                                          transformOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          transitionDuration="auto"
                                                        >
                                                          <ForwardRef(Popover)
                                                            PaperProps={
                                                              Object {
                                                                "classes": Object {
                                                                  "root": "MuiMenu-paper",
                                                                },
                                                                "style": Object {
                                                                  "minWidth": undefined,
                                                                },
                                                              }
                                                            }
                                                            TransitionProps={
                                                              Object {
                                                                "onEntering": [Function],
                                                              }
                                                            }
                                                            anchorEl={
                                                              <div
                                                                aria-haspopup="listbox"
                                                                aria-labelledby="mui-6386 mui-31407"
                                                                class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                id="mui-31407"
                                                                role="button"
                                                                tabindex="0"
                                                              >
                                                                5
                                                              </div>
                                                            }
                                                            anchorOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "paper": "MuiPopover-paper",
                                                                "root": "MuiPopover-root",
                                                              }
                                                            }
                                                            getContentAnchorEl={[Function]}
                                                            id="menu-"
                                                            onClose={[Function]}
                                                            open={false}
                                                            transformOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            transitionDuration="auto"
                                                          >
                                                            <ForwardRef(Modal)
                                                              BackdropProps={
                                                                Object {
                                                                  "invisible": true,
                                                                }
                                                              }
                                                              className="MuiPopover-root"
                                                              container={<body />}
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            />
                                                          </ForwardRef(Popover)>
                                                        </WithStyles(ForwardRef(Popover))>
                                                      </ForwardRef(Menu)>
                                                    </WithStyles(ForwardRef(Menu))>
                                                  </ForwardRef(SelectInput)>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Select)>
                                        </WithStyles(ForwardRef(Select))>
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiTablePagination-caption"
                                          color="inherit"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiTablePagination-caption"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="inherit"
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                                            >
                                              0-0 of 0
                                            </p>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                        <ForwardRef(TablePaginationActions)
                                          backIconButtonProps={
                                            Object {
                                              "aria-label": "Previous page",
                                              "title": "Previous page",
                                            }
                                          }
                                          className="MuiTablePagination-actions"
                                          count={0}
                                          nextIconButtonProps={
                                            Object {
                                              "aria-label": "Next page",
                                              "title": "Next page",
                                            }
                                          }
                                          onPageChange={[Function]}
                                          page={0}
                                          rowsPerPage={5}
                                        >
                                          <div
                                            className="MuiTablePagination-actions"
                                          >
                                            <WithStyles(ForwardRef(IconButton))
                                              aria-label="Previous page"
                                              color="inherit"
                                              disabled={true}
                                              onClick={[Function]}
                                              title="Previous page"
                                            >
                                              <ForwardRef(IconButton)
                                                aria-label="Previous page"
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiIconButton-colorInherit",
                                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                                    "edgeStart": "MuiIconButton-edgeStart",
                                                    "label": "MuiIconButton-label",
                                                    "root": "MuiIconButton-root",
                                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                                  }
                                                }
                                                color="inherit"
                                                disabled={true}
                                                onClick={[Function]}
                                                title="Previous page"
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  aria-label="Previous page"
                                                  centerRipple={true}
                                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                  disabled={true}
                                                  focusRipple={true}
                                                  onClick={[Function]}
                                                  title="Previous page"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    aria-label="Previous page"
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    disabled={true}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    title="Previous page"
                                                  >
                                                    <button
                                                      aria-label="Previous page"
                                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                      disabled={true}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={-1}
                                                      title="Previous page"
                                                      type="button"
                                                    >
                                                      <span
                                                        className="MuiIconButton-label"
                                                      >
                                                        <ForwardRef(KeyboardArrowLeftIcon)>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(KeyboardArrowLeftIcon)>
                                                      </span>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(IconButton)>
                                            </WithStyles(ForwardRef(IconButton))>
                                            <WithStyles(ForwardRef(IconButton))
                                              aria-label="Next page"
                                              color="inherit"
                                              disabled={true}
                                              onClick={[Function]}
                                              title="Next page"
                                            >
                                              <ForwardRef(IconButton)
                                                aria-label="Next page"
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiIconButton-colorInherit",
                                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                                    "edgeStart": "MuiIconButton-edgeStart",
                                                    "label": "MuiIconButton-label",
                                                    "root": "MuiIconButton-root",
                                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                                  }
                                                }
                                                color="inherit"
                                                disabled={true}
                                                onClick={[Function]}
                                                title="Next page"
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  aria-label="Next page"
                                                  centerRipple={true}
                                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                  disabled={true}
                                                  focusRipple={true}
                                                  onClick={[Function]}
                                                  title="Next page"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    aria-label="Next page"
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    disabled={true}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    title="Next page"
                                                  >
                                                    <button
                                                      aria-label="Next page"
                                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                      disabled={true}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={-1}
                                                      title="Next page"
                                                      type="button"
                                                    >
                                                      <span
                                                        className="MuiIconButton-label"
                                                      >
                                                        <ForwardRef(KeyboardArrowRightIcon)>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(KeyboardArrowRightIcon)>
                                                      </span>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(IconButton)>
                                            </WithStyles(ForwardRef(IconButton))>
                                          </div>
                                        </ForwardRef(TablePaginationActions)>
                                      </div>
                                    </ForwardRef(Toolbar)>
                                  </WithStyles(ForwardRef(Toolbar))>
                                </div>
                              </ForwardRef(TablePagination)>
                            </WithStyles(ForwardRef(TablePagination))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                      <WithStyles(ForwardRef(FormControlLabel))
                        control={
                          <WithStyles(ForwardRef(Switch))
                            checked={false}
                            onChange={[Function]}
                          />
                        }
                        label="Dense padding"
                      >
                        <ForwardRef(FormControlLabel)
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "label": "MuiFormControlLabel-label",
                              "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                              "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                              "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                              "root": "MuiFormControlLabel-root",
                            }
                          }
                          control={
                            <WithStyles(ForwardRef(Switch))
                              checked={false}
                              onChange={[Function]}
                            />
                          }
                          label="Dense padding"
                        >
                          <label
                            className="MuiFormControlLabel-root"
                          >
                            <WithStyles(ForwardRef(Switch))
                              checked={false}
                              onChange={[Function]}
                            >
                              <ForwardRef(Switch)
                                checked={false}
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "colorPrimary": "MuiSwitch-colorPrimary",
                                    "colorSecondary": "MuiSwitch-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiSwitch-edgeEnd",
                                    "edgeStart": "MuiSwitch-edgeStart",
                                    "input": "MuiSwitch-input",
                                    "root": "MuiSwitch-root",
                                    "sizeSmall": "MuiSwitch-sizeSmall",
                                    "switchBase": "MuiSwitch-switchBase",
                                    "thumb": "MuiSwitch-thumb",
                                    "track": "MuiSwitch-track",
                                  }
                                }
                                onChange={[Function]}
                              >
                                <span
                                  className="MuiSwitch-root"
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={false}
                                    checkedIcon={
                                      <span
                                        className="MuiSwitch-thumb"
                                      />
                                    }
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "disabled": "Mui-disabled",
                                        "input": "MuiSwitch-input",
                                        "root": "MuiSwitch-switchBase MuiSwitch-colorSecondary",
                                      }
                                    }
                                    icon={
                                      <span
                                        className="MuiSwitch-thumb"
                                      />
                                    }
                                    onChange={[Function]}
                                    type="checkbox"
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={false}
                                      checkedIcon={
                                        <span
                                          className="MuiSwitch-thumb"
                                        />
                                      }
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-9 Mui-checked",
                                          "disabled": "PrivateSwitchBase-disabled-10 Mui-disabled",
                                          "input": "PrivateSwitchBase-input-11 MuiSwitch-input",
                                          "root": "PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary",
                                        }
                                      }
                                      icon={
                                        <span
                                          className="MuiSwitch-thumb"
                                        />
                                      }
                                      onChange={[Function]}
                                      type="checkbox"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                        component="span"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          component="span"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                            component="span"
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    checked={false}
                                                    className="PrivateSwitchBase-input-11 MuiSwitch-input"
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                  />
                                                  <span
                                                    className="MuiSwitch-thumb"
                                                  />
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                  <span
                                    className="MuiSwitch-track"
                                  />
                                </span>
                              </ForwardRef(Switch)>
                            </WithStyles(ForwardRef(Switch))>
                            <WithStyles(ForwardRef(Typography))
                              className="MuiFormControlLabel-label"
                              component="span"
                            >
                              <ForwardRef(Typography)
                                className="MuiFormControlLabel-label"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                              >
                                <span
                                  className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                >
                                  Dense padding
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </label>
                        </ForwardRef(FormControlLabel)>
                      </WithStyles(ForwardRef(FormControlLabel))>
                    </div>
                  </RenderScoreboard>
                </Scoreboard>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
        </div>
      </ForwardRef(Grid)>
    </WithStyles(ForwardRef(Grid))>
  </div>
</App>
`;

exports[`resizes correctly resizes 5x5 board correctly 1`] = `
<App>
  <div
    className="App"
  >
    <WithStyles(ForwardRef(Grid))
      alignItems="center"
      container={true}
      direction="column"
      justify="center"
    >
      <ForwardRef(Grid)
        alignItems="center"
        classes={
          Object {
            "align-content-xs-center": "MuiGrid-align-content-xs-center",
            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
            "align-items-xs-center": "MuiGrid-align-items-xs-center",
            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
            "container": "MuiGrid-container",
            "direction-xs-column": "MuiGrid-direction-xs-column",
            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
            "grid-lg-1": "MuiGrid-grid-lg-1",
            "grid-lg-10": "MuiGrid-grid-lg-10",
            "grid-lg-11": "MuiGrid-grid-lg-11",
            "grid-lg-12": "MuiGrid-grid-lg-12",
            "grid-lg-2": "MuiGrid-grid-lg-2",
            "grid-lg-3": "MuiGrid-grid-lg-3",
            "grid-lg-4": "MuiGrid-grid-lg-4",
            "grid-lg-5": "MuiGrid-grid-lg-5",
            "grid-lg-6": "MuiGrid-grid-lg-6",
            "grid-lg-7": "MuiGrid-grid-lg-7",
            "grid-lg-8": "MuiGrid-grid-lg-8",
            "grid-lg-9": "MuiGrid-grid-lg-9",
            "grid-lg-auto": "MuiGrid-grid-lg-auto",
            "grid-lg-true": "MuiGrid-grid-lg-true",
            "grid-md-1": "MuiGrid-grid-md-1",
            "grid-md-10": "MuiGrid-grid-md-10",
            "grid-md-11": "MuiGrid-grid-md-11",
            "grid-md-12": "MuiGrid-grid-md-12",
            "grid-md-2": "MuiGrid-grid-md-2",
            "grid-md-3": "MuiGrid-grid-md-3",
            "grid-md-4": "MuiGrid-grid-md-4",
            "grid-md-5": "MuiGrid-grid-md-5",
            "grid-md-6": "MuiGrid-grid-md-6",
            "grid-md-7": "MuiGrid-grid-md-7",
            "grid-md-8": "MuiGrid-grid-md-8",
            "grid-md-9": "MuiGrid-grid-md-9",
            "grid-md-auto": "MuiGrid-grid-md-auto",
            "grid-md-true": "MuiGrid-grid-md-true",
            "grid-sm-1": "MuiGrid-grid-sm-1",
            "grid-sm-10": "MuiGrid-grid-sm-10",
            "grid-sm-11": "MuiGrid-grid-sm-11",
            "grid-sm-12": "MuiGrid-grid-sm-12",
            "grid-sm-2": "MuiGrid-grid-sm-2",
            "grid-sm-3": "MuiGrid-grid-sm-3",
            "grid-sm-4": "MuiGrid-grid-sm-4",
            "grid-sm-5": "MuiGrid-grid-sm-5",
            "grid-sm-6": "MuiGrid-grid-sm-6",
            "grid-sm-7": "MuiGrid-grid-sm-7",
            "grid-sm-8": "MuiGrid-grid-sm-8",
            "grid-sm-9": "MuiGrid-grid-sm-9",
            "grid-sm-auto": "MuiGrid-grid-sm-auto",
            "grid-sm-true": "MuiGrid-grid-sm-true",
            "grid-xl-1": "MuiGrid-grid-xl-1",
            "grid-xl-10": "MuiGrid-grid-xl-10",
            "grid-xl-11": "MuiGrid-grid-xl-11",
            "grid-xl-12": "MuiGrid-grid-xl-12",
            "grid-xl-2": "MuiGrid-grid-xl-2",
            "grid-xl-3": "MuiGrid-grid-xl-3",
            "grid-xl-4": "MuiGrid-grid-xl-4",
            "grid-xl-5": "MuiGrid-grid-xl-5",
            "grid-xl-6": "MuiGrid-grid-xl-6",
            "grid-xl-7": "MuiGrid-grid-xl-7",
            "grid-xl-8": "MuiGrid-grid-xl-8",
            "grid-xl-9": "MuiGrid-grid-xl-9",
            "grid-xl-auto": "MuiGrid-grid-xl-auto",
            "grid-xl-true": "MuiGrid-grid-xl-true",
            "grid-xs-1": "MuiGrid-grid-xs-1",
            "grid-xs-10": "MuiGrid-grid-xs-10",
            "grid-xs-11": "MuiGrid-grid-xs-11",
            "grid-xs-12": "MuiGrid-grid-xs-12",
            "grid-xs-2": "MuiGrid-grid-xs-2",
            "grid-xs-3": "MuiGrid-grid-xs-3",
            "grid-xs-4": "MuiGrid-grid-xs-4",
            "grid-xs-5": "MuiGrid-grid-xs-5",
            "grid-xs-6": "MuiGrid-grid-xs-6",
            "grid-xs-7": "MuiGrid-grid-xs-7",
            "grid-xs-8": "MuiGrid-grid-xs-8",
            "grid-xs-9": "MuiGrid-grid-xs-9",
            "grid-xs-auto": "MuiGrid-grid-xs-auto",
            "grid-xs-true": "MuiGrid-grid-xs-true",
            "item": "MuiGrid-item",
            "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
            "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
            "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
            "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
            "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
            "root": "MuiGrid-root",
            "spacing-xs-1": "MuiGrid-spacing-xs-1",
            "spacing-xs-10": "MuiGrid-spacing-xs-10",
            "spacing-xs-2": "MuiGrid-spacing-xs-2",
            "spacing-xs-3": "MuiGrid-spacing-xs-3",
            "spacing-xs-4": "MuiGrid-spacing-xs-4",
            "spacing-xs-5": "MuiGrid-spacing-xs-5",
            "spacing-xs-6": "MuiGrid-spacing-xs-6",
            "spacing-xs-7": "MuiGrid-spacing-xs-7",
            "spacing-xs-8": "MuiGrid-spacing-xs-8",
            "spacing-xs-9": "MuiGrid-spacing-xs-9",
            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
            "zeroMinWidth": "MuiGrid-zeroMinWidth",
          }
        }
        container={true}
        direction="column"
        justify="center"
      >
        <div
          className="MuiGrid-root MuiGrid-container MuiGrid-direction-xs-column MuiGrid-align-items-xs-center MuiGrid-justify-content-xs-center"
        >
          <WithStyles(ForwardRef(Grid))
            item={true}
            xs={1}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              item={true}
              xs={1}
            >
              <div
                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1"
              >
                <ResizeButtons
                  setCurrentSize={[Function]}
                >
                  <div>
                    <button
                      className="resize4"
                      onClick={[Function]}
                      type="button"
                    >
                      4x4
                    </button>
                    <button
                      className="resize5"
                      onClick={[Function]}
                      type="button"
                    >
                      5x5
                    </button>
                    <button
                      className="resize6"
                      onClick={[Function]}
                      type="button"
                    >
                      6x6
                    </button>
                  </div>
                </ResizeButtons>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
            xs={8}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              item={true}
              xs={8}
            >
              <div
                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8"
              >
                <Board
                  onGameOver={[Function]}
                  size={5}
                >
                  <div>
                    <div
                      className="score"
                    >
                      Score: 
                      0
                    </div>
                    <table
                      border="1px solid black"
                      border-collapse="collapse"
                    >
                      <tbody>
                        <Row
                          key="0"
                          row={
                            Array [
                              2,
                              0,
                              0,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={2}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "rgb(128, 140, 0)",
                                  }
                                }
                                width="50"
                              >
                                <div>
                                  2
                                </div>
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="4"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                        <Row
                          key="1"
                          row={
                            Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="4"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                        <Row
                          key="2"
                          row={
                            Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="4"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                        <Row
                          key="3"
                          row={
                            Array [
                              4,
                              0,
                              0,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={4}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "rgb(0, 180, 128)",
                                  }
                                }
                                width="50"
                              >
                                <div>
                                  4
                                </div>
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="4"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                        <Row
                          key="4"
                          row={
                            Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="4"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                      </tbody>
                    </table>
                    <div />
                  </div>
                </Board>
                <Prompt
                  finalScore={0}
                  username={[Function]}
                >
                  <div>
                    <WithStyles(ForwardRef(Dialog))
                      onClose={[Function]}
                      open={false}
                    >
                      <ForwardRef(Dialog)
                        classes={
                          Object {
                            "container": "MuiDialog-container",
                            "paper": "MuiDialog-paper",
                            "paperFullScreen": "MuiDialog-paperFullScreen",
                            "paperFullWidth": "MuiDialog-paperFullWidth",
                            "paperScrollBody": "MuiDialog-paperScrollBody",
                            "paperScrollPaper": "MuiDialog-paperScrollPaper",
                            "paperWidthFalse": "MuiDialog-paperWidthFalse",
                            "paperWidthLg": "MuiDialog-paperWidthLg",
                            "paperWidthMd": "MuiDialog-paperWidthMd",
                            "paperWidthSm": "MuiDialog-paperWidthSm",
                            "paperWidthXl": "MuiDialog-paperWidthXl",
                            "paperWidthXs": "MuiDialog-paperWidthXs",
                            "root": "MuiDialog-root",
                            "scrollBody": "MuiDialog-scrollBody",
                            "scrollPaper": "MuiDialog-scrollPaper",
                          }
                        }
                        onClose={[Function]}
                        open={false}
                      >
                        <ForwardRef(Modal)
                          BackdropComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Naked": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "invisible": [Function],
                                  "open": [Function],
                                  "transitionDuration": [Function],
                                },
                                "render": [Function],
                              },
                              "displayName": "WithStyles(ForwardRef(Backdrop))",
                              "options": Object {
                                "defaultTheme": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "activatedOpacity": 0.12,
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "disabledOpacity": 0.38,
                                      "focus": "rgba(0, 0, 0, 0.12)",
                                      "focusOpacity": 0.12,
                                      "hover": "rgba(0, 0, 0, 0.04)",
                                      "hoverOpacity": 0.04,
                                      "selected": "rgba(0, 0, 0, 0.08)",
                                      "selectedOpacity": 0.08,
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "info": Object {
                                      "contrastText": "#fff",
                                      "dark": "#1976d2",
                                      "light": "#64b5f6",
                                      "main": "#2196f3",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "success": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#388e3c",
                                      "light": "#81c784",
                                      "main": "#4caf50",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                    "warning": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#f57c00",
                                      "light": "#ffb74d",
                                      "main": "#ff9800",
                                    },
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                },
                                "name": "MuiBackdrop",
                              },
                              "propTypes": Object {
                                "classes": [Function],
                                "innerRef": [Function],
                              },
                              "render": [Function],
                              "useStyles": [Function],
                            }
                          }
                          BackdropProps={
                            Object {
                              "transitionDuration": Object {
                                "enter": 225,
                                "exit": 195,
                              },
                            }
                          }
                          className="MuiDialog-root"
                          closeAfterTransition={true}
                          disableEscapeKeyDown={false}
                          onClose={[Function]}
                          open={false}
                        />
                      </ForwardRef(Dialog)>
                    </WithStyles(ForwardRef(Dialog))>
                  </div>
                </Prompt>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
            xs={3}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              item={true}
              xs={3}
            >
              <div
                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-3"
              >
                <Scoreboard
                  score={0}
                  setScore={[Function]}
                  setUsername={[Function]}
                  username={false}
                >
                  <RenderScoreboard
                    rows={Array []}
                  >
                    <div
                      className="makeStyles-root-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="makeStyles-paper-2"
                      >
                        <ForwardRef(Paper)
                          className="makeStyles-paper-2"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "outlined": "MuiPaper-outlined",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                        >
                          <div
                            className="MuiPaper-root makeStyles-paper-2 MuiPaper-elevation1 MuiPaper-rounded"
                          >
                            <EnhancedTableToolbar>
                              <WithStyles(ForwardRef(Toolbar))
                                className="makeStyles-root-5"
                              >
                                <ForwardRef(Toolbar)
                                  className="makeStyles-root-5"
                                  classes={
                                    Object {
                                      "dense": "MuiToolbar-dense",
                                      "gutters": "MuiToolbar-gutters",
                                      "regular": "MuiToolbar-regular",
                                      "root": "MuiToolbar-root",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiToolbar-root MuiToolbar-regular makeStyles-root-5 MuiToolbar-gutters"
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      className="makeStyles-title-7"
                                      component="div"
                                      id="tableTitle"
                                      variant="h6"
                                    >
                                      <ForwardRef(Typography)
                                        className="makeStyles-title-7"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="div"
                                        id="tableTitle"
                                        variant="h6"
                                      >
                                        <div
                                          className="MuiTypography-root makeStyles-title-7 MuiTypography-h6"
                                          id="tableTitle"
                                        >
                                          Scoreboard
                                        </div>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </div>
                                </ForwardRef(Toolbar)>
                              </WithStyles(ForwardRef(Toolbar))>
                            </EnhancedTableToolbar>
                            <WithStyles(ForwardRef(TableContainer))>
                              <ForwardRef(TableContainer)
                                classes={
                                  Object {
                                    "root": "MuiTableContainer-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiTableContainer-root"
                                >
                                  <WithStyles(ForwardRef(Table))
                                    aria-label="enhanced table"
                                    aria-labelledby="tableTitle"
                                    className="makeStyles-table-3"
                                    size="medium"
                                  >
                                    <ForwardRef(Table)
                                      aria-label="enhanced table"
                                      aria-labelledby="tableTitle"
                                      className="makeStyles-table-3"
                                      classes={
                                        Object {
                                          "root": "MuiTable-root",
                                          "stickyHeader": "MuiTable-stickyHeader",
                                        }
                                      }
                                      size="medium"
                                    >
                                      <table
                                        aria-label="enhanced table"
                                        aria-labelledby="tableTitle"
                                        className="MuiTable-root makeStyles-table-3"
                                        role={null}
                                      >
                                        <EnhancedTableHead
                                          classes={
                                            Object {
                                              "paper": "makeStyles-paper-2",
                                              "root": "makeStyles-root-1",
                                              "table": "makeStyles-table-3",
                                              "visuallyHidden": "makeStyles-visuallyHidden-4",
                                            }
                                          }
                                          onRequestSort={[Function]}
                                          order="desc"
                                          orderBy="score"
                                          rowCount={0}
                                        >
                                          <WithStyles(ForwardRef(TableHead))>
                                            <ForwardRef(TableHead)
                                              classes={
                                                Object {
                                                  "root": "MuiTableHead-root",
                                                }
                                              }
                                            >
                                              <thead
                                                className="MuiTableHead-root"
                                                role={null}
                                              >
                                                <WithStyles(ForwardRef(TableRow))>
                                                  <ForwardRef(TableRow)
                                                    classes={
                                                      Object {
                                                        "footer": "MuiTableRow-footer",
                                                        "head": "MuiTableRow-head",
                                                        "hover": "MuiTableRow-hover",
                                                        "root": "MuiTableRow-root",
                                                        "selected": "Mui-selected",
                                                      }
                                                    }
                                                  >
                                                    <tr
                                                      className="MuiTableRow-root MuiTableRow-head"
                                                      role={null}
                                                    >
                                                      <WithStyles(ForwardRef(TableCell))
                                                        align="left"
                                                        key="name"
                                                        padding="none"
                                                        sortDirection={false}
                                                      >
                                                        <ForwardRef(TableCell)
                                                          align="left"
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTableCell-alignCenter",
                                                              "alignJustify": "MuiTableCell-alignJustify",
                                                              "alignLeft": "MuiTableCell-alignLeft",
                                                              "alignRight": "MuiTableCell-alignRight",
                                                              "body": "MuiTableCell-body",
                                                              "footer": "MuiTableCell-footer",
                                                              "head": "MuiTableCell-head",
                                                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                              "paddingNone": "MuiTableCell-paddingNone",
                                                              "root": "MuiTableCell-root",
                                                              "sizeSmall": "MuiTableCell-sizeSmall",
                                                              "stickyHeader": "MuiTableCell-stickyHeader",
                                                            }
                                                          }
                                                          padding="none"
                                                          sortDirection={false}
                                                        >
                                                          <th
                                                            aria-sort={null}
                                                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft MuiTableCell-paddingNone"
                                                            scope="col"
                                                          >
                                                            <WithStyles(ForwardRef(TableSortLabel))
                                                              active={false}
                                                              className="nameHead"
                                                              direction="asc"
                                                              key="name"
                                                              onClick={[Function]}
                                                            >
                                                              <ForwardRef(TableSortLabel)
                                                                active={false}
                                                                className="nameHead"
                                                                classes={
                                                                  Object {
                                                                    "active": "MuiTableSortLabel-active",
                                                                    "icon": "MuiTableSortLabel-icon",
                                                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                    "root": "MuiTableSortLabel-root",
                                                                  }
                                                                }
                                                                direction="asc"
                                                                onClick={[Function]}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  className="MuiTableSortLabel-root nameHead"
                                                                  component="span"
                                                                  disableRipple={true}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    className="MuiTableSortLabel-root nameHead"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="span"
                                                                    disableRipple={true}
                                                                    onClick={[Function]}
                                                                  >
                                                                    <span
                                                                      aria-disabled={false}
                                                                      className="MuiButtonBase-root MuiTableSortLabel-root nameHead"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      Name
                                                                      <ForwardRef(ArrowDownwardIcon)
                                                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                      >
                                                                        <WithStyles(ForwardRef(SvgIcon))
                                                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                        >
                                                                          <ForwardRef(SvgIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                            classes={
                                                                              Object {
                                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                "colorError": "MuiSvgIcon-colorError",
                                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                "root": "MuiSvgIcon-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <svg
                                                                              aria-hidden={true}
                                                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                              focusable="false"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <path
                                                                                d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                              />
                                                                            </svg>
                                                                          </ForwardRef(SvgIcon)>
                                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                                      </ForwardRef(ArrowDownwardIcon)>
                                                                    </span>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(TableSortLabel)>
                                                            </WithStyles(ForwardRef(TableSortLabel))>
                                                          </th>
                                                        </ForwardRef(TableCell)>
                                                      </WithStyles(ForwardRef(TableCell))>
                                                      <WithStyles(ForwardRef(TableCell))
                                                        align="right"
                                                        key="score"
                                                        padding="normal"
                                                        sortDirection="desc"
                                                      >
                                                        <ForwardRef(TableCell)
                                                          align="right"
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTableCell-alignCenter",
                                                              "alignJustify": "MuiTableCell-alignJustify",
                                                              "alignLeft": "MuiTableCell-alignLeft",
                                                              "alignRight": "MuiTableCell-alignRight",
                                                              "body": "MuiTableCell-body",
                                                              "footer": "MuiTableCell-footer",
                                                              "head": "MuiTableCell-head",
                                                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                              "paddingNone": "MuiTableCell-paddingNone",
                                                              "root": "MuiTableCell-root",
                                                              "sizeSmall": "MuiTableCell-sizeSmall",
                                                              "stickyHeader": "MuiTableCell-stickyHeader",
                                                            }
                                                          }
                                                          padding="normal"
                                                          sortDirection="desc"
                                                        >
                                                          <th
                                                            aria-sort="descending"
                                                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignRight"
                                                            scope="col"
                                                          >
                                                            <WithStyles(ForwardRef(TableSortLabel))
                                                              active={true}
                                                              className="scoreHead"
                                                              direction="desc"
                                                              key="score"
                                                              onClick={[Function]}
                                                            >
                                                              <ForwardRef(TableSortLabel)
                                                                active={true}
                                                                className="scoreHead"
                                                                classes={
                                                                  Object {
                                                                    "active": "MuiTableSortLabel-active",
                                                                    "icon": "MuiTableSortLabel-icon",
                                                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                    "root": "MuiTableSortLabel-root",
                                                                  }
                                                                }
                                                                direction="desc"
                                                                onClick={[Function]}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  className="MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                                  component="span"
                                                                  disableRipple={true}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    className="MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="span"
                                                                    disableRipple={true}
                                                                    onClick={[Function]}
                                                                  >
                                                                    <span
                                                                      aria-disabled={false}
                                                                      className="MuiButtonBase-root MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      Score
                                                                      <span
                                                                        className="makeStyles-visuallyHidden-4"
                                                                      >
                                                                        sorted descending
                                                                      </span>
                                                                      <ForwardRef(ArrowDownwardIcon)
                                                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                                      >
                                                                        <WithStyles(ForwardRef(SvgIcon))
                                                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                                        >
                                                                          <ForwardRef(SvgIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                                            classes={
                                                                              Object {
                                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                "colorError": "MuiSvgIcon-colorError",
                                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                "root": "MuiSvgIcon-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <svg
                                                                              aria-hidden={true}
                                                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                                              focusable="false"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <path
                                                                                d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                              />
                                                                            </svg>
                                                                          </ForwardRef(SvgIcon)>
                                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                                      </ForwardRef(ArrowDownwardIcon)>
                                                                    </span>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(TableSortLabel)>
                                                            </WithStyles(ForwardRef(TableSortLabel))>
                                                          </th>
                                                        </ForwardRef(TableCell)>
                                                      </WithStyles(ForwardRef(TableCell))>
                                                    </tr>
                                                  </ForwardRef(TableRow)>
                                                </WithStyles(ForwardRef(TableRow))>
                                              </thead>
                                            </ForwardRef(TableHead)>
                                          </WithStyles(ForwardRef(TableHead))>
                                        </EnhancedTableHead>
                                        <WithStyles(ForwardRef(TableBody))>
                                          <ForwardRef(TableBody)
                                            classes={
                                              Object {
                                                "root": "MuiTableBody-root",
                                              }
                                            }
                                          >
                                            <tbody
                                              className="MuiTableBody-root"
                                              role={null}
                                            >
                                              <WithStyles(ForwardRef(TableRow))
                                                style={
                                                  Object {
                                                    "height": 265,
                                                  }
                                                }
                                              >
                                                <ForwardRef(TableRow)
                                                  classes={
                                                    Object {
                                                      "footer": "MuiTableRow-footer",
                                                      "head": "MuiTableRow-head",
                                                      "hover": "MuiTableRow-hover",
                                                      "root": "MuiTableRow-root",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  style={
                                                    Object {
                                                      "height": 265,
                                                    }
                                                  }
                                                >
                                                  <tr
                                                    className="MuiTableRow-root"
                                                    role={null}
                                                    style={
                                                      Object {
                                                        "height": 265,
                                                      }
                                                    }
                                                  >
                                                    <WithStyles(ForwardRef(TableCell))
                                                      colSpan={6}
                                                    >
                                                      <ForwardRef(TableCell)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTableCell-alignCenter",
                                                            "alignJustify": "MuiTableCell-alignJustify",
                                                            "alignLeft": "MuiTableCell-alignLeft",
                                                            "alignRight": "MuiTableCell-alignRight",
                                                            "body": "MuiTableCell-body",
                                                            "footer": "MuiTableCell-footer",
                                                            "head": "MuiTableCell-head",
                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                            "paddingNone": "MuiTableCell-paddingNone",
                                                            "root": "MuiTableCell-root",
                                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                                          }
                                                        }
                                                        colSpan={6}
                                                      >
                                                        <td
                                                          aria-sort={null}
                                                          className="MuiTableCell-root MuiTableCell-body"
                                                          colSpan={6}
                                                        />
                                                      </ForwardRef(TableCell)>
                                                    </WithStyles(ForwardRef(TableCell))>
                                                  </tr>
                                                </ForwardRef(TableRow)>
                                              </WithStyles(ForwardRef(TableRow))>
                                            </tbody>
                                          </ForwardRef(TableBody)>
                                        </WithStyles(ForwardRef(TableBody))>
                                      </table>
                                    </ForwardRef(Table)>
                                  </WithStyles(ForwardRef(Table))>
                                </div>
                              </ForwardRef(TableContainer)>
                            </WithStyles(ForwardRef(TableContainer))>
                            <WithStyles(ForwardRef(TablePagination))
                              component="div"
                              count={0}
                              onPageChange={[Function]}
                              onRowsPerPageChange={[Function]}
                              page={0}
                              rowsPerPage={5}
                              rowsPerPageOptions={
                                Array [
                                  5,
                                  10,
                                  25,
                                ]
                              }
                            >
                              <ForwardRef(TablePagination)
                                classes={
                                  Object {
                                    "actions": "MuiTablePagination-actions",
                                    "caption": "MuiTablePagination-caption",
                                    "input": "MuiTablePagination-input",
                                    "menuItem": "MuiTablePagination-menuItem",
                                    "root": "MuiTablePagination-root",
                                    "select": "MuiTablePagination-select",
                                    "selectIcon": "MuiTablePagination-selectIcon",
                                    "selectRoot": "MuiTablePagination-selectRoot",
                                    "spacer": "MuiTablePagination-spacer",
                                    "toolbar": "MuiTablePagination-toolbar",
                                  }
                                }
                                component="div"
                                count={0}
                                onPageChange={[Function]}
                                onRowsPerPageChange={[Function]}
                                page={0}
                                rowsPerPage={5}
                                rowsPerPageOptions={
                                  Array [
                                    5,
                                    10,
                                    25,
                                  ]
                                }
                              >
                                <div
                                  className="MuiTablePagination-root"
                                >
                                  <WithStyles(ForwardRef(Toolbar))
                                    className="MuiTablePagination-toolbar"
                                  >
                                    <ForwardRef(Toolbar)
                                      className="MuiTablePagination-toolbar"
                                      classes={
                                        Object {
                                          "dense": "MuiToolbar-dense",
                                          "gutters": "MuiToolbar-gutters",
                                          "regular": "MuiToolbar-regular",
                                          "root": "MuiToolbar-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                      >
                                        <div
                                          className="MuiTablePagination-spacer"
                                        />
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiTablePagination-caption"
                                          color="inherit"
                                          id="mui-50990"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiTablePagination-caption"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="inherit"
                                            id="mui-50990"
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                                              id="mui-50990"
                                            >
                                              Rows per page:
                                            </p>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                        <WithStyles(ForwardRef(Select))
                                          classes={
                                            Object {
                                              "icon": "MuiTablePagination-selectIcon",
                                              "select": "MuiTablePagination-select",
                                            }
                                          }
                                          id="mui-47559"
                                          input={
                                            <WithStyles(ForwardRef(InputBase))
                                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                            />
                                          }
                                          labelId="mui-50990"
                                          onChange={[Function]}
                                          value={5}
                                        >
                                          <ForwardRef(Select)
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled",
                                                "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                "iconFilled": "MuiSelect-iconFilled",
                                                "iconOpen": "MuiSelect-iconOpen",
                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                "nativeInput": "MuiSelect-nativeInput",
                                                "outlined": "MuiSelect-outlined",
                                                "root": "MuiSelect-root",
                                                "select": "MuiSelect-select MuiTablePagination-select",
                                                "selectMenu": "MuiSelect-selectMenu",
                                              }
                                            }
                                            id="mui-47559"
                                            input={
                                              <WithStyles(ForwardRef(InputBase))
                                                className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                              />
                                            }
                                            labelId="mui-50990"
                                            onChange={[Function]}
                                            value={5}
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "MenuProps": [Function],
                                                    "SelectDisplayProps": [Function],
                                                    "aria-label": [Function],
                                                    "autoFocus": [Function],
                                                    "autoWidth": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "defaultValue": [Function],
                                                    "disabled": [Function],
                                                    "displayEmpty": [Function],
                                                    "inputRef": [Function],
                                                    "labelId": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onClose": [Function],
                                                    "onFocus": [Function],
                                                    "onOpen": [Function],
                                                    "open": [Function],
                                                    "readOnly": [Function],
                                                    "renderValue": [Function],
                                                    "tabIndex": [Function],
                                                    "type": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": "mui-47559",
                                                  },
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      className="MuiTablePagination-menuItem"
                                                      value={5}
                                                    >
                                                      5
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      className="MuiTablePagination-menuItem"
                                                      value={10}
                                                    >
                                                      10
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      className="MuiTablePagination-menuItem"
                                                      value={25}
                                                    >
                                                      25
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "nativeInput": "MuiSelect-nativeInput",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select MuiTablePagination-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "displayEmpty": false,
                                                  "labelId": "mui-50990",
                                                  "multiple": false,
                                                  "onClose": undefined,
                                                  "onOpen": undefined,
                                                  "open": undefined,
                                                  "renderValue": undefined,
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              onChange={[Function]}
                                              value={5}
                                            >
                                              <ForwardRef(InputBase)
                                                className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "formControl": "MuiInputBase-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                    "input": "MuiInputBase-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense",
                                                    "multiline": "MuiInputBase-multiline",
                                                    "root": "MuiInputBase-root",
                                                  }
                                                }
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "MenuProps": [Function],
                                                      "SelectDisplayProps": [Function],
                                                      "aria-label": [Function],
                                                      "autoFocus": [Function],
                                                      "autoWidth": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "defaultValue": [Function],
                                                      "disabled": [Function],
                                                      "displayEmpty": [Function],
                                                      "inputRef": [Function],
                                                      "labelId": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onClose": [Function],
                                                      "onFocus": [Function],
                                                      "onOpen": [Function],
                                                      "open": [Function],
                                                      "readOnly": [Function],
                                                      "renderValue": [Function],
                                                      "tabIndex": [Function],
                                                      "type": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "MenuProps": undefined,
                                                    "SelectDisplayProps": Object {
                                                      "id": "mui-47559",
                                                    },
                                                    "autoWidth": false,
                                                    "children": Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        className="MuiTablePagination-menuItem"
                                                        value={5}
                                                      >
                                                        5
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        className="MuiTablePagination-menuItem"
                                                        value={10}
                                                      >
                                                        10
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        className="MuiTablePagination-menuItem"
                                                        value={25}
                                                      >
                                                        25
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select MuiTablePagination-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "displayEmpty": false,
                                                    "labelId": "mui-50990",
                                                    "multiple": false,
                                                    "onClose": undefined,
                                                    "onOpen": undefined,
                                                    "open": undefined,
                                                    "renderValue": undefined,
                                                    "type": undefined,
                                                    "variant": "standard",
                                                  }
                                                }
                                                onChange={[Function]}
                                                value={5}
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiTablePagination-input MuiTablePagination-selectRoot"
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(SelectInput)
                                                    IconComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      }
                                                    }
                                                    SelectDisplayProps={
                                                      Object {
                                                        "id": "mui-47559",
                                                      }
                                                    }
                                                    autoWidth={false}
                                                    className="MuiInputBase-input"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select MuiTablePagination-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      }
                                                    }
                                                    displayEmpty={false}
                                                    inputRef={[Function]}
                                                    labelId="mui-50990"
                                                    multiple={false}
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    value={5}
                                                    variant="standard"
                                                  >
                                                    <div
                                                      aria-haspopup="listbox"
                                                      aria-labelledby="mui-50990 mui-47559"
                                                      className="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                      id="mui-47559"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      5
                                                    </div>
                                                    <input
                                                      aria-hidden={true}
                                                      className="MuiSelect-nativeInput"
                                                      onAnimationStart={[Function]}
                                                      onChange={[Function]}
                                                      tabIndex={-1}
                                                      value={5}
                                                    />
                                                    <ForwardRef(ArrowDropDownIcon)
                                                      className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M7 10l5 5 5-5z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDropDownIcon)>
                                                    <WithStyles(ForwardRef(Menu))
                                                      MenuListProps={
                                                        Object {
                                                          "aria-labelledby": "mui-50990",
                                                          "disableListWrap": true,
                                                          "role": "listbox",
                                                        }
                                                      }
                                                      PaperProps={
                                                        Object {
                                                          "style": Object {
                                                            "minWidth": undefined,
                                                          },
                                                        }
                                                      }
                                                      anchorEl={
                                                        <div
                                                          aria-haspopup="listbox"
                                                          aria-labelledby="mui-50990 mui-47559"
                                                          class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                          id="mui-47559"
                                                          role="button"
                                                          tabindex="0"
                                                        >
                                                          5
                                                        </div>
                                                      }
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      open={false}
                                                    >
                                                      <ForwardRef(Menu)
                                                        MenuListProps={
                                                          Object {
                                                            "aria-labelledby": "mui-50990",
                                                            "disableListWrap": true,
                                                            "role": "listbox",
                                                          }
                                                        }
                                                        PaperProps={
                                                          Object {
                                                            "style": Object {
                                                              "minWidth": undefined,
                                                            },
                                                          }
                                                        }
                                                        anchorEl={
                                                          <div
                                                            aria-haspopup="listbox"
                                                            aria-labelledby="mui-50990 mui-47559"
                                                            class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                            id="mui-47559"
                                                            role="button"
                                                            tabindex="0"
                                                          >
                                                            5
                                                          </div>
                                                        }
                                                        classes={
                                                          Object {
                                                            "list": "MuiMenu-list",
                                                            "paper": "MuiMenu-paper",
                                                          }
                                                        }
                                                        id="menu-"
                                                        onClose={[Function]}
                                                        open={false}
                                                      >
                                                        <WithStyles(ForwardRef(Popover))
                                                          PaperProps={
                                                            Object {
                                                              "classes": Object {
                                                                "root": "MuiMenu-paper",
                                                              },
                                                              "style": Object {
                                                                "minWidth": undefined,
                                                              },
                                                            }
                                                          }
                                                          TransitionProps={
                                                            Object {
                                                              "onEntering": [Function],
                                                            }
                                                          }
                                                          anchorEl={
                                                            <div
                                                              aria-haspopup="listbox"
                                                              aria-labelledby="mui-50990 mui-47559"
                                                              class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                              id="mui-47559"
                                                              role="button"
                                                              tabindex="0"
                                                            >
                                                              5
                                                            </div>
                                                          }
                                                          anchorOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          getContentAnchorEl={[Function]}
                                                          id="menu-"
                                                          onClose={[Function]}
                                                          open={false}
                                                          transformOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          transitionDuration="auto"
                                                        >
                                                          <ForwardRef(Popover)
                                                            PaperProps={
                                                              Object {
                                                                "classes": Object {
                                                                  "root": "MuiMenu-paper",
                                                                },
                                                                "style": Object {
                                                                  "minWidth": undefined,
                                                                },
                                                              }
                                                            }
                                                            TransitionProps={
                                                              Object {
                                                                "onEntering": [Function],
                                                              }
                                                            }
                                                            anchorEl={
                                                              <div
                                                                aria-haspopup="listbox"
                                                                aria-labelledby="mui-50990 mui-47559"
                                                                class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                id="mui-47559"
                                                                role="button"
                                                                tabindex="0"
                                                              >
                                                                5
                                                              </div>
                                                            }
                                                            anchorOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "paper": "MuiPopover-paper",
                                                                "root": "MuiPopover-root",
                                                              }
                                                            }
                                                            getContentAnchorEl={[Function]}
                                                            id="menu-"
                                                            onClose={[Function]}
                                                            open={false}
                                                            transformOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            transitionDuration="auto"
                                                          >
                                                            <ForwardRef(Modal)
                                                              BackdropProps={
                                                                Object {
                                                                  "invisible": true,
                                                                }
                                                              }
                                                              className="MuiPopover-root"
                                                              container={<body />}
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            />
                                                          </ForwardRef(Popover)>
                                                        </WithStyles(ForwardRef(Popover))>
                                                      </ForwardRef(Menu)>
                                                    </WithStyles(ForwardRef(Menu))>
                                                  </ForwardRef(SelectInput)>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Select)>
                                        </WithStyles(ForwardRef(Select))>
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiTablePagination-caption"
                                          color="inherit"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiTablePagination-caption"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="inherit"
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                                            >
                                              0-0 of 0
                                            </p>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                        <ForwardRef(TablePaginationActions)
                                          backIconButtonProps={
                                            Object {
                                              "aria-label": "Previous page",
                                              "title": "Previous page",
                                            }
                                          }
                                          className="MuiTablePagination-actions"
                                          count={0}
                                          nextIconButtonProps={
                                            Object {
                                              "aria-label": "Next page",
                                              "title": "Next page",
                                            }
                                          }
                                          onPageChange={[Function]}
                                          page={0}
                                          rowsPerPage={5}
                                        >
                                          <div
                                            className="MuiTablePagination-actions"
                                          >
                                            <WithStyles(ForwardRef(IconButton))
                                              aria-label="Previous page"
                                              color="inherit"
                                              disabled={true}
                                              onClick={[Function]}
                                              title="Previous page"
                                            >
                                              <ForwardRef(IconButton)
                                                aria-label="Previous page"
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiIconButton-colorInherit",
                                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                                    "edgeStart": "MuiIconButton-edgeStart",
                                                    "label": "MuiIconButton-label",
                                                    "root": "MuiIconButton-root",
                                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                                  }
                                                }
                                                color="inherit"
                                                disabled={true}
                                                onClick={[Function]}
                                                title="Previous page"
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  aria-label="Previous page"
                                                  centerRipple={true}
                                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                  disabled={true}
                                                  focusRipple={true}
                                                  onClick={[Function]}
                                                  title="Previous page"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    aria-label="Previous page"
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    disabled={true}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    title="Previous page"
                                                  >
                                                    <button
                                                      aria-label="Previous page"
                                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                      disabled={true}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={-1}
                                                      title="Previous page"
                                                      type="button"
                                                    >
                                                      <span
                                                        className="MuiIconButton-label"
                                                      >
                                                        <ForwardRef(KeyboardArrowLeftIcon)>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(KeyboardArrowLeftIcon)>
                                                      </span>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(IconButton)>
                                            </WithStyles(ForwardRef(IconButton))>
                                            <WithStyles(ForwardRef(IconButton))
                                              aria-label="Next page"
                                              color="inherit"
                                              disabled={true}
                                              onClick={[Function]}
                                              title="Next page"
                                            >
                                              <ForwardRef(IconButton)
                                                aria-label="Next page"
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiIconButton-colorInherit",
                                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                                    "edgeStart": "MuiIconButton-edgeStart",
                                                    "label": "MuiIconButton-label",
                                                    "root": "MuiIconButton-root",
                                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                                  }
                                                }
                                                color="inherit"
                                                disabled={true}
                                                onClick={[Function]}
                                                title="Next page"
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  aria-label="Next page"
                                                  centerRipple={true}
                                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                  disabled={true}
                                                  focusRipple={true}
                                                  onClick={[Function]}
                                                  title="Next page"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    aria-label="Next page"
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    disabled={true}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    title="Next page"
                                                  >
                                                    <button
                                                      aria-label="Next page"
                                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                      disabled={true}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={-1}
                                                      title="Next page"
                                                      type="button"
                                                    >
                                                      <span
                                                        className="MuiIconButton-label"
                                                      >
                                                        <ForwardRef(KeyboardArrowRightIcon)>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(KeyboardArrowRightIcon)>
                                                      </span>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(IconButton)>
                                            </WithStyles(ForwardRef(IconButton))>
                                          </div>
                                        </ForwardRef(TablePaginationActions)>
                                      </div>
                                    </ForwardRef(Toolbar)>
                                  </WithStyles(ForwardRef(Toolbar))>
                                </div>
                              </ForwardRef(TablePagination)>
                            </WithStyles(ForwardRef(TablePagination))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                      <WithStyles(ForwardRef(FormControlLabel))
                        control={
                          <WithStyles(ForwardRef(Switch))
                            checked={false}
                            onChange={[Function]}
                          />
                        }
                        label="Dense padding"
                      >
                        <ForwardRef(FormControlLabel)
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "label": "MuiFormControlLabel-label",
                              "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                              "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                              "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                              "root": "MuiFormControlLabel-root",
                            }
                          }
                          control={
                            <WithStyles(ForwardRef(Switch))
                              checked={false}
                              onChange={[Function]}
                            />
                          }
                          label="Dense padding"
                        >
                          <label
                            className="MuiFormControlLabel-root"
                          >
                            <WithStyles(ForwardRef(Switch))
                              checked={false}
                              onChange={[Function]}
                            >
                              <ForwardRef(Switch)
                                checked={false}
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "colorPrimary": "MuiSwitch-colorPrimary",
                                    "colorSecondary": "MuiSwitch-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiSwitch-edgeEnd",
                                    "edgeStart": "MuiSwitch-edgeStart",
                                    "input": "MuiSwitch-input",
                                    "root": "MuiSwitch-root",
                                    "sizeSmall": "MuiSwitch-sizeSmall",
                                    "switchBase": "MuiSwitch-switchBase",
                                    "thumb": "MuiSwitch-thumb",
                                    "track": "MuiSwitch-track",
                                  }
                                }
                                onChange={[Function]}
                              >
                                <span
                                  className="MuiSwitch-root"
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={false}
                                    checkedIcon={
                                      <span
                                        className="MuiSwitch-thumb"
                                      />
                                    }
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "disabled": "Mui-disabled",
                                        "input": "MuiSwitch-input",
                                        "root": "MuiSwitch-switchBase MuiSwitch-colorSecondary",
                                      }
                                    }
                                    icon={
                                      <span
                                        className="MuiSwitch-thumb"
                                      />
                                    }
                                    onChange={[Function]}
                                    type="checkbox"
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={false}
                                      checkedIcon={
                                        <span
                                          className="MuiSwitch-thumb"
                                        />
                                      }
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-9 Mui-checked",
                                          "disabled": "PrivateSwitchBase-disabled-10 Mui-disabled",
                                          "input": "PrivateSwitchBase-input-11 MuiSwitch-input",
                                          "root": "PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary",
                                        }
                                      }
                                      icon={
                                        <span
                                          className="MuiSwitch-thumb"
                                        />
                                      }
                                      onChange={[Function]}
                                      type="checkbox"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                        component="span"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          component="span"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                            component="span"
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    checked={false}
                                                    className="PrivateSwitchBase-input-11 MuiSwitch-input"
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                  />
                                                  <span
                                                    className="MuiSwitch-thumb"
                                                  />
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                  <span
                                    className="MuiSwitch-track"
                                  />
                                </span>
                              </ForwardRef(Switch)>
                            </WithStyles(ForwardRef(Switch))>
                            <WithStyles(ForwardRef(Typography))
                              className="MuiFormControlLabel-label"
                              component="span"
                            >
                              <ForwardRef(Typography)
                                className="MuiFormControlLabel-label"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                              >
                                <span
                                  className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                >
                                  Dense padding
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </label>
                        </ForwardRef(FormControlLabel)>
                      </WithStyles(ForwardRef(FormControlLabel))>
                    </div>
                  </RenderScoreboard>
                </Scoreboard>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
        </div>
      </ForwardRef(Grid)>
    </WithStyles(ForwardRef(Grid))>
  </div>
</App>
`;

exports[`resizes correctly resizes 6x6 board correctly 1`] = `
<App>
  <div
    className="App"
  >
    <WithStyles(ForwardRef(Grid))
      alignItems="center"
      container={true}
      direction="column"
      justify="center"
    >
      <ForwardRef(Grid)
        alignItems="center"
        classes={
          Object {
            "align-content-xs-center": "MuiGrid-align-content-xs-center",
            "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
            "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
            "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
            "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
            "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
            "align-items-xs-center": "MuiGrid-align-items-xs-center",
            "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
            "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
            "container": "MuiGrid-container",
            "direction-xs-column": "MuiGrid-direction-xs-column",
            "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
            "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
            "grid-lg-1": "MuiGrid-grid-lg-1",
            "grid-lg-10": "MuiGrid-grid-lg-10",
            "grid-lg-11": "MuiGrid-grid-lg-11",
            "grid-lg-12": "MuiGrid-grid-lg-12",
            "grid-lg-2": "MuiGrid-grid-lg-2",
            "grid-lg-3": "MuiGrid-grid-lg-3",
            "grid-lg-4": "MuiGrid-grid-lg-4",
            "grid-lg-5": "MuiGrid-grid-lg-5",
            "grid-lg-6": "MuiGrid-grid-lg-6",
            "grid-lg-7": "MuiGrid-grid-lg-7",
            "grid-lg-8": "MuiGrid-grid-lg-8",
            "grid-lg-9": "MuiGrid-grid-lg-9",
            "grid-lg-auto": "MuiGrid-grid-lg-auto",
            "grid-lg-true": "MuiGrid-grid-lg-true",
            "grid-md-1": "MuiGrid-grid-md-1",
            "grid-md-10": "MuiGrid-grid-md-10",
            "grid-md-11": "MuiGrid-grid-md-11",
            "grid-md-12": "MuiGrid-grid-md-12",
            "grid-md-2": "MuiGrid-grid-md-2",
            "grid-md-3": "MuiGrid-grid-md-3",
            "grid-md-4": "MuiGrid-grid-md-4",
            "grid-md-5": "MuiGrid-grid-md-5",
            "grid-md-6": "MuiGrid-grid-md-6",
            "grid-md-7": "MuiGrid-grid-md-7",
            "grid-md-8": "MuiGrid-grid-md-8",
            "grid-md-9": "MuiGrid-grid-md-9",
            "grid-md-auto": "MuiGrid-grid-md-auto",
            "grid-md-true": "MuiGrid-grid-md-true",
            "grid-sm-1": "MuiGrid-grid-sm-1",
            "grid-sm-10": "MuiGrid-grid-sm-10",
            "grid-sm-11": "MuiGrid-grid-sm-11",
            "grid-sm-12": "MuiGrid-grid-sm-12",
            "grid-sm-2": "MuiGrid-grid-sm-2",
            "grid-sm-3": "MuiGrid-grid-sm-3",
            "grid-sm-4": "MuiGrid-grid-sm-4",
            "grid-sm-5": "MuiGrid-grid-sm-5",
            "grid-sm-6": "MuiGrid-grid-sm-6",
            "grid-sm-7": "MuiGrid-grid-sm-7",
            "grid-sm-8": "MuiGrid-grid-sm-8",
            "grid-sm-9": "MuiGrid-grid-sm-9",
            "grid-sm-auto": "MuiGrid-grid-sm-auto",
            "grid-sm-true": "MuiGrid-grid-sm-true",
            "grid-xl-1": "MuiGrid-grid-xl-1",
            "grid-xl-10": "MuiGrid-grid-xl-10",
            "grid-xl-11": "MuiGrid-grid-xl-11",
            "grid-xl-12": "MuiGrid-grid-xl-12",
            "grid-xl-2": "MuiGrid-grid-xl-2",
            "grid-xl-3": "MuiGrid-grid-xl-3",
            "grid-xl-4": "MuiGrid-grid-xl-4",
            "grid-xl-5": "MuiGrid-grid-xl-5",
            "grid-xl-6": "MuiGrid-grid-xl-6",
            "grid-xl-7": "MuiGrid-grid-xl-7",
            "grid-xl-8": "MuiGrid-grid-xl-8",
            "grid-xl-9": "MuiGrid-grid-xl-9",
            "grid-xl-auto": "MuiGrid-grid-xl-auto",
            "grid-xl-true": "MuiGrid-grid-xl-true",
            "grid-xs-1": "MuiGrid-grid-xs-1",
            "grid-xs-10": "MuiGrid-grid-xs-10",
            "grid-xs-11": "MuiGrid-grid-xs-11",
            "grid-xs-12": "MuiGrid-grid-xs-12",
            "grid-xs-2": "MuiGrid-grid-xs-2",
            "grid-xs-3": "MuiGrid-grid-xs-3",
            "grid-xs-4": "MuiGrid-grid-xs-4",
            "grid-xs-5": "MuiGrid-grid-xs-5",
            "grid-xs-6": "MuiGrid-grid-xs-6",
            "grid-xs-7": "MuiGrid-grid-xs-7",
            "grid-xs-8": "MuiGrid-grid-xs-8",
            "grid-xs-9": "MuiGrid-grid-xs-9",
            "grid-xs-auto": "MuiGrid-grid-xs-auto",
            "grid-xs-true": "MuiGrid-grid-xs-true",
            "item": "MuiGrid-item",
            "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
            "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
            "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
            "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
            "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
            "root": "MuiGrid-root",
            "spacing-xs-1": "MuiGrid-spacing-xs-1",
            "spacing-xs-10": "MuiGrid-spacing-xs-10",
            "spacing-xs-2": "MuiGrid-spacing-xs-2",
            "spacing-xs-3": "MuiGrid-spacing-xs-3",
            "spacing-xs-4": "MuiGrid-spacing-xs-4",
            "spacing-xs-5": "MuiGrid-spacing-xs-5",
            "spacing-xs-6": "MuiGrid-spacing-xs-6",
            "spacing-xs-7": "MuiGrid-spacing-xs-7",
            "spacing-xs-8": "MuiGrid-spacing-xs-8",
            "spacing-xs-9": "MuiGrid-spacing-xs-9",
            "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
            "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
            "zeroMinWidth": "MuiGrid-zeroMinWidth",
          }
        }
        container={true}
        direction="column"
        justify="center"
      >
        <div
          className="MuiGrid-root MuiGrid-container MuiGrid-direction-xs-column MuiGrid-align-items-xs-center MuiGrid-justify-content-xs-center"
        >
          <WithStyles(ForwardRef(Grid))
            item={true}
            xs={1}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              item={true}
              xs={1}
            >
              <div
                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1"
              >
                <ResizeButtons
                  setCurrentSize={[Function]}
                >
                  <div>
                    <button
                      className="resize4"
                      onClick={[Function]}
                      type="button"
                    >
                      4x4
                    </button>
                    <button
                      className="resize5"
                      onClick={[Function]}
                      type="button"
                    >
                      5x5
                    </button>
                    <button
                      className="resize6"
                      onClick={[Function]}
                      type="button"
                    >
                      6x6
                    </button>
                  </div>
                </ResizeButtons>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
            xs={8}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              item={true}
              xs={8}
            >
              <div
                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-8"
              >
                <Board
                  onGameOver={[Function]}
                  size={6}
                >
                  <div>
                    <div
                      className="score"
                    >
                      Score: 
                      0
                    </div>
                    <table
                      border="1px solid black"
                      border-collapse="collapse"
                    >
                      <tbody>
                        <Row
                          key="0"
                          row={
                            Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="4"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="5"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                        <Row
                          key="1"
                          row={
                            Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="4"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="5"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                        <Row
                          key="2"
                          row={
                            Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="4"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="5"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                        <Row
                          key="3"
                          row={
                            Array [
                              0,
                              0,
                              0,
                              0,
                              4,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={4}
                              key="4"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "rgb(0, 180, 128)",
                                  }
                                }
                                width="50"
                              >
                                <div>
                                  4
                                </div>
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="5"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                        <Row
                          key="4"
                          row={
                            Array [
                              0,
                              4,
                              0,
                              0,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={4}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "rgb(0, 180, 128)",
                                  }
                                }
                                width="50"
                              >
                                <div>
                                  4
                                </div>
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="4"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="5"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                        <Row
                          key="5"
                          row={
                            Array [
                              0,
                              0,
                              0,
                              0,
                              0,
                              0,
                            ]
                          }
                        >
                          <tr>
                            <Cell
                              cellValue={0}
                              key="0"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="1"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="2"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="3"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="4"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                            <Cell
                              cellValue={0}
                              key="5"
                            >
                              <td
                                align="center"
                                border="1px solid black"
                                border-collapse="collapse"
                                height="50"
                                style={
                                  Object {
                                    "backgroundColor": "white",
                                  }
                                }
                                width="50"
                              >
                                <div />
                              </td>
                            </Cell>
                          </tr>
                        </Row>
                      </tbody>
                    </table>
                    <div />
                  </div>
                </Board>
                <Prompt
                  finalScore={0}
                  username={[Function]}
                >
                  <div>
                    <WithStyles(ForwardRef(Dialog))
                      onClose={[Function]}
                      open={false}
                    >
                      <ForwardRef(Dialog)
                        classes={
                          Object {
                            "container": "MuiDialog-container",
                            "paper": "MuiDialog-paper",
                            "paperFullScreen": "MuiDialog-paperFullScreen",
                            "paperFullWidth": "MuiDialog-paperFullWidth",
                            "paperScrollBody": "MuiDialog-paperScrollBody",
                            "paperScrollPaper": "MuiDialog-paperScrollPaper",
                            "paperWidthFalse": "MuiDialog-paperWidthFalse",
                            "paperWidthLg": "MuiDialog-paperWidthLg",
                            "paperWidthMd": "MuiDialog-paperWidthMd",
                            "paperWidthSm": "MuiDialog-paperWidthSm",
                            "paperWidthXl": "MuiDialog-paperWidthXl",
                            "paperWidthXs": "MuiDialog-paperWidthXs",
                            "root": "MuiDialog-root",
                            "scrollBody": "MuiDialog-scrollBody",
                            "scrollPaper": "MuiDialog-scrollPaper",
                          }
                        }
                        onClose={[Function]}
                        open={false}
                      >
                        <ForwardRef(Modal)
                          BackdropComponent={
                            Object {
                              "$$typeof": Symbol(react.forward_ref),
                              "Naked": Object {
                                "$$typeof": Symbol(react.forward_ref),
                                "propTypes": Object {
                                  "children": [Function],
                                  "className": [Function],
                                  "classes": [Function],
                                  "invisible": [Function],
                                  "open": [Function],
                                  "transitionDuration": [Function],
                                },
                                "render": [Function],
                              },
                              "displayName": "WithStyles(ForwardRef(Backdrop))",
                              "options": Object {
                                "defaultTheme": Object {
                                  "breakpoints": Object {
                                    "between": [Function],
                                    "down": [Function],
                                    "keys": Array [
                                      "xs",
                                      "sm",
                                      "md",
                                      "lg",
                                      "xl",
                                    ],
                                    "only": [Function],
                                    "up": [Function],
                                    "values": Object {
                                      "lg": 1280,
                                      "md": 960,
                                      "sm": 600,
                                      "xl": 1920,
                                      "xs": 0,
                                    },
                                    "width": [Function],
                                  },
                                  "direction": "ltr",
                                  "mixins": Object {
                                    "gutters": [Function],
                                    "toolbar": Object {
                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                        "minHeight": 48,
                                      },
                                      "@media (min-width:600px)": Object {
                                        "minHeight": 64,
                                      },
                                      "minHeight": 56,
                                    },
                                  },
                                  "overrides": Object {},
                                  "palette": Object {
                                    "action": Object {
                                      "activatedOpacity": 0.12,
                                      "active": "rgba(0, 0, 0, 0.54)",
                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                      "disabledOpacity": 0.38,
                                      "focus": "rgba(0, 0, 0, 0.12)",
                                      "focusOpacity": 0.12,
                                      "hover": "rgba(0, 0, 0, 0.04)",
                                      "hoverOpacity": 0.04,
                                      "selected": "rgba(0, 0, 0, 0.08)",
                                      "selectedOpacity": 0.08,
                                    },
                                    "augmentColor": [Function],
                                    "background": Object {
                                      "default": "#fafafa",
                                      "paper": "#fff",
                                    },
                                    "common": Object {
                                      "black": "#000",
                                      "white": "#fff",
                                    },
                                    "contrastThreshold": 3,
                                    "divider": "rgba(0, 0, 0, 0.12)",
                                    "error": Object {
                                      "contrastText": "#fff",
                                      "dark": "#d32f2f",
                                      "light": "#e57373",
                                      "main": "#f44336",
                                    },
                                    "getContrastText": [Function],
                                    "grey": Object {
                                      "100": "#f5f5f5",
                                      "200": "#eeeeee",
                                      "300": "#e0e0e0",
                                      "400": "#bdbdbd",
                                      "50": "#fafafa",
                                      "500": "#9e9e9e",
                                      "600": "#757575",
                                      "700": "#616161",
                                      "800": "#424242",
                                      "900": "#212121",
                                      "A100": "#d5d5d5",
                                      "A200": "#aaaaaa",
                                      "A400": "#303030",
                                      "A700": "#616161",
                                    },
                                    "info": Object {
                                      "contrastText": "#fff",
                                      "dark": "#1976d2",
                                      "light": "#64b5f6",
                                      "main": "#2196f3",
                                    },
                                    "primary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#303f9f",
                                      "light": "#7986cb",
                                      "main": "#3f51b5",
                                    },
                                    "secondary": Object {
                                      "contrastText": "#fff",
                                      "dark": "#c51162",
                                      "light": "#ff4081",
                                      "main": "#f50057",
                                    },
                                    "success": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#388e3c",
                                      "light": "#81c784",
                                      "main": "#4caf50",
                                    },
                                    "text": Object {
                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                      "hint": "rgba(0, 0, 0, 0.38)",
                                      "primary": "rgba(0, 0, 0, 0.87)",
                                      "secondary": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "tonalOffset": 0.2,
                                    "type": "light",
                                    "warning": Object {
                                      "contrastText": "rgba(0, 0, 0, 0.87)",
                                      "dark": "#f57c00",
                                      "light": "#ffb74d",
                                      "main": "#ff9800",
                                    },
                                  },
                                  "props": Object {},
                                  "shadows": Array [
                                    "none",
                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                  ],
                                  "shape": Object {
                                    "borderRadius": 4,
                                  },
                                  "spacing": [Function],
                                  "transitions": Object {
                                    "create": [Function],
                                    "duration": Object {
                                      "complex": 375,
                                      "enteringScreen": 225,
                                      "leavingScreen": 195,
                                      "short": 250,
                                      "shorter": 200,
                                      "shortest": 150,
                                      "standard": 300,
                                    },
                                    "easing": Object {
                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                    },
                                    "getAutoHeightDuration": [Function],
                                  },
                                  "typography": Object {
                                    "body1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.5,
                                    },
                                    "body2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.01071em",
                                      "lineHeight": 1.43,
                                    },
                                    "button": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.02857em",
                                      "lineHeight": 1.75,
                                      "textTransform": "uppercase",
                                    },
                                    "caption": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.03333em",
                                      "lineHeight": 1.66,
                                    },
                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                    "fontSize": 14,
                                    "fontWeightBold": 700,
                                    "fontWeightLight": 300,
                                    "fontWeightMedium": 500,
                                    "fontWeightRegular": 400,
                                    "h1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "6rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.01562em",
                                      "lineHeight": 1.167,
                                    },
                                    "h2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3.75rem",
                                      "fontWeight": 300,
                                      "letterSpacing": "-0.00833em",
                                      "lineHeight": 1.2,
                                    },
                                    "h3": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "3rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.167,
                                    },
                                    "h4": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "2.125rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00735em",
                                      "lineHeight": 1.235,
                                    },
                                    "h5": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.5rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0em",
                                      "lineHeight": 1.334,
                                    },
                                    "h6": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1.25rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.0075em",
                                      "lineHeight": 1.6,
                                    },
                                    "htmlFontSize": 16,
                                    "overline": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.75rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.08333em",
                                      "lineHeight": 2.66,
                                      "textTransform": "uppercase",
                                    },
                                    "pxToRem": [Function],
                                    "round": [Function],
                                    "subtitle1": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "1rem",
                                      "fontWeight": 400,
                                      "letterSpacing": "0.00938em",
                                      "lineHeight": 1.75,
                                    },
                                    "subtitle2": Object {
                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                      "fontSize": "0.875rem",
                                      "fontWeight": 500,
                                      "letterSpacing": "0.00714em",
                                      "lineHeight": 1.57,
                                    },
                                  },
                                  "zIndex": Object {
                                    "appBar": 1100,
                                    "drawer": 1200,
                                    "mobileStepper": 1000,
                                    "modal": 1300,
                                    "snackbar": 1400,
                                    "speedDial": 1050,
                                    "tooltip": 1500,
                                  },
                                },
                                "name": "MuiBackdrop",
                              },
                              "propTypes": Object {
                                "classes": [Function],
                                "innerRef": [Function],
                              },
                              "render": [Function],
                              "useStyles": [Function],
                            }
                          }
                          BackdropProps={
                            Object {
                              "transitionDuration": Object {
                                "enter": 225,
                                "exit": 195,
                              },
                            }
                          }
                          className="MuiDialog-root"
                          closeAfterTransition={true}
                          disableEscapeKeyDown={false}
                          onClose={[Function]}
                          open={false}
                        />
                      </ForwardRef(Dialog)>
                    </WithStyles(ForwardRef(Dialog))>
                  </div>
                </Prompt>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
          <WithStyles(ForwardRef(Grid))
            item={true}
            xs={3}
          >
            <ForwardRef(Grid)
              classes={
                Object {
                  "align-content-xs-center": "MuiGrid-align-content-xs-center",
                  "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                  "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                  "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                  "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                  "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                  "align-items-xs-center": "MuiGrid-align-items-xs-center",
                  "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                  "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                  "container": "MuiGrid-container",
                  "direction-xs-column": "MuiGrid-direction-xs-column",
                  "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                  "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                  "grid-lg-1": "MuiGrid-grid-lg-1",
                  "grid-lg-10": "MuiGrid-grid-lg-10",
                  "grid-lg-11": "MuiGrid-grid-lg-11",
                  "grid-lg-12": "MuiGrid-grid-lg-12",
                  "grid-lg-2": "MuiGrid-grid-lg-2",
                  "grid-lg-3": "MuiGrid-grid-lg-3",
                  "grid-lg-4": "MuiGrid-grid-lg-4",
                  "grid-lg-5": "MuiGrid-grid-lg-5",
                  "grid-lg-6": "MuiGrid-grid-lg-6",
                  "grid-lg-7": "MuiGrid-grid-lg-7",
                  "grid-lg-8": "MuiGrid-grid-lg-8",
                  "grid-lg-9": "MuiGrid-grid-lg-9",
                  "grid-lg-auto": "MuiGrid-grid-lg-auto",
                  "grid-lg-true": "MuiGrid-grid-lg-true",
                  "grid-md-1": "MuiGrid-grid-md-1",
                  "grid-md-10": "MuiGrid-grid-md-10",
                  "grid-md-11": "MuiGrid-grid-md-11",
                  "grid-md-12": "MuiGrid-grid-md-12",
                  "grid-md-2": "MuiGrid-grid-md-2",
                  "grid-md-3": "MuiGrid-grid-md-3",
                  "grid-md-4": "MuiGrid-grid-md-4",
                  "grid-md-5": "MuiGrid-grid-md-5",
                  "grid-md-6": "MuiGrid-grid-md-6",
                  "grid-md-7": "MuiGrid-grid-md-7",
                  "grid-md-8": "MuiGrid-grid-md-8",
                  "grid-md-9": "MuiGrid-grid-md-9",
                  "grid-md-auto": "MuiGrid-grid-md-auto",
                  "grid-md-true": "MuiGrid-grid-md-true",
                  "grid-sm-1": "MuiGrid-grid-sm-1",
                  "grid-sm-10": "MuiGrid-grid-sm-10",
                  "grid-sm-11": "MuiGrid-grid-sm-11",
                  "grid-sm-12": "MuiGrid-grid-sm-12",
                  "grid-sm-2": "MuiGrid-grid-sm-2",
                  "grid-sm-3": "MuiGrid-grid-sm-3",
                  "grid-sm-4": "MuiGrid-grid-sm-4",
                  "grid-sm-5": "MuiGrid-grid-sm-5",
                  "grid-sm-6": "MuiGrid-grid-sm-6",
                  "grid-sm-7": "MuiGrid-grid-sm-7",
                  "grid-sm-8": "MuiGrid-grid-sm-8",
                  "grid-sm-9": "MuiGrid-grid-sm-9",
                  "grid-sm-auto": "MuiGrid-grid-sm-auto",
                  "grid-sm-true": "MuiGrid-grid-sm-true",
                  "grid-xl-1": "MuiGrid-grid-xl-1",
                  "grid-xl-10": "MuiGrid-grid-xl-10",
                  "grid-xl-11": "MuiGrid-grid-xl-11",
                  "grid-xl-12": "MuiGrid-grid-xl-12",
                  "grid-xl-2": "MuiGrid-grid-xl-2",
                  "grid-xl-3": "MuiGrid-grid-xl-3",
                  "grid-xl-4": "MuiGrid-grid-xl-4",
                  "grid-xl-5": "MuiGrid-grid-xl-5",
                  "grid-xl-6": "MuiGrid-grid-xl-6",
                  "grid-xl-7": "MuiGrid-grid-xl-7",
                  "grid-xl-8": "MuiGrid-grid-xl-8",
                  "grid-xl-9": "MuiGrid-grid-xl-9",
                  "grid-xl-auto": "MuiGrid-grid-xl-auto",
                  "grid-xl-true": "MuiGrid-grid-xl-true",
                  "grid-xs-1": "MuiGrid-grid-xs-1",
                  "grid-xs-10": "MuiGrid-grid-xs-10",
                  "grid-xs-11": "MuiGrid-grid-xs-11",
                  "grid-xs-12": "MuiGrid-grid-xs-12",
                  "grid-xs-2": "MuiGrid-grid-xs-2",
                  "grid-xs-3": "MuiGrid-grid-xs-3",
                  "grid-xs-4": "MuiGrid-grid-xs-4",
                  "grid-xs-5": "MuiGrid-grid-xs-5",
                  "grid-xs-6": "MuiGrid-grid-xs-6",
                  "grid-xs-7": "MuiGrid-grid-xs-7",
                  "grid-xs-8": "MuiGrid-grid-xs-8",
                  "grid-xs-9": "MuiGrid-grid-xs-9",
                  "grid-xs-auto": "MuiGrid-grid-xs-auto",
                  "grid-xs-true": "MuiGrid-grid-xs-true",
                  "item": "MuiGrid-item",
                  "justify-content-xs-center": "MuiGrid-justify-content-xs-center",
                  "justify-content-xs-flex-end": "MuiGrid-justify-content-xs-flex-end",
                  "justify-content-xs-space-around": "MuiGrid-justify-content-xs-space-around",
                  "justify-content-xs-space-between": "MuiGrid-justify-content-xs-space-between",
                  "justify-content-xs-space-evenly": "MuiGrid-justify-content-xs-space-evenly",
                  "root": "MuiGrid-root",
                  "spacing-xs-1": "MuiGrid-spacing-xs-1",
                  "spacing-xs-10": "MuiGrid-spacing-xs-10",
                  "spacing-xs-2": "MuiGrid-spacing-xs-2",
                  "spacing-xs-3": "MuiGrid-spacing-xs-3",
                  "spacing-xs-4": "MuiGrid-spacing-xs-4",
                  "spacing-xs-5": "MuiGrid-spacing-xs-5",
                  "spacing-xs-6": "MuiGrid-spacing-xs-6",
                  "spacing-xs-7": "MuiGrid-spacing-xs-7",
                  "spacing-xs-8": "MuiGrid-spacing-xs-8",
                  "spacing-xs-9": "MuiGrid-spacing-xs-9",
                  "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                  "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                  "zeroMinWidth": "MuiGrid-zeroMinWidth",
                }
              }
              item={true}
              xs={3}
            >
              <div
                className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-3"
              >
                <Scoreboard
                  score={0}
                  setScore={[Function]}
                  setUsername={[Function]}
                  username={false}
                >
                  <RenderScoreboard
                    rows={Array []}
                  >
                    <div
                      className="makeStyles-root-1"
                    >
                      <WithStyles(ForwardRef(Paper))
                        className="makeStyles-paper-2"
                      >
                        <ForwardRef(Paper)
                          className="makeStyles-paper-2"
                          classes={
                            Object {
                              "elevation0": "MuiPaper-elevation0",
                              "elevation1": "MuiPaper-elevation1",
                              "elevation10": "MuiPaper-elevation10",
                              "elevation11": "MuiPaper-elevation11",
                              "elevation12": "MuiPaper-elevation12",
                              "elevation13": "MuiPaper-elevation13",
                              "elevation14": "MuiPaper-elevation14",
                              "elevation15": "MuiPaper-elevation15",
                              "elevation16": "MuiPaper-elevation16",
                              "elevation17": "MuiPaper-elevation17",
                              "elevation18": "MuiPaper-elevation18",
                              "elevation19": "MuiPaper-elevation19",
                              "elevation2": "MuiPaper-elevation2",
                              "elevation20": "MuiPaper-elevation20",
                              "elevation21": "MuiPaper-elevation21",
                              "elevation22": "MuiPaper-elevation22",
                              "elevation23": "MuiPaper-elevation23",
                              "elevation24": "MuiPaper-elevation24",
                              "elevation3": "MuiPaper-elevation3",
                              "elevation4": "MuiPaper-elevation4",
                              "elevation5": "MuiPaper-elevation5",
                              "elevation6": "MuiPaper-elevation6",
                              "elevation7": "MuiPaper-elevation7",
                              "elevation8": "MuiPaper-elevation8",
                              "elevation9": "MuiPaper-elevation9",
                              "outlined": "MuiPaper-outlined",
                              "root": "MuiPaper-root",
                              "rounded": "MuiPaper-rounded",
                            }
                          }
                        >
                          <div
                            className="MuiPaper-root makeStyles-paper-2 MuiPaper-elevation1 MuiPaper-rounded"
                          >
                            <EnhancedTableToolbar>
                              <WithStyles(ForwardRef(Toolbar))
                                className="makeStyles-root-5"
                              >
                                <ForwardRef(Toolbar)
                                  className="makeStyles-root-5"
                                  classes={
                                    Object {
                                      "dense": "MuiToolbar-dense",
                                      "gutters": "MuiToolbar-gutters",
                                      "regular": "MuiToolbar-regular",
                                      "root": "MuiToolbar-root",
                                    }
                                  }
                                >
                                  <div
                                    className="MuiToolbar-root MuiToolbar-regular makeStyles-root-5 MuiToolbar-gutters"
                                  >
                                    <WithStyles(ForwardRef(Typography))
                                      className="makeStyles-title-7"
                                      component="div"
                                      id="tableTitle"
                                      variant="h6"
                                    >
                                      <ForwardRef(Typography)
                                        className="makeStyles-title-7"
                                        classes={
                                          Object {
                                            "alignCenter": "MuiTypography-alignCenter",
                                            "alignJustify": "MuiTypography-alignJustify",
                                            "alignLeft": "MuiTypography-alignLeft",
                                            "alignRight": "MuiTypography-alignRight",
                                            "body1": "MuiTypography-body1",
                                            "body2": "MuiTypography-body2",
                                            "button": "MuiTypography-button",
                                            "caption": "MuiTypography-caption",
                                            "colorError": "MuiTypography-colorError",
                                            "colorInherit": "MuiTypography-colorInherit",
                                            "colorPrimary": "MuiTypography-colorPrimary",
                                            "colorSecondary": "MuiTypography-colorSecondary",
                                            "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                            "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                            "displayBlock": "MuiTypography-displayBlock",
                                            "displayInline": "MuiTypography-displayInline",
                                            "gutterBottom": "MuiTypography-gutterBottom",
                                            "h1": "MuiTypography-h1",
                                            "h2": "MuiTypography-h2",
                                            "h3": "MuiTypography-h3",
                                            "h4": "MuiTypography-h4",
                                            "h5": "MuiTypography-h5",
                                            "h6": "MuiTypography-h6",
                                            "noWrap": "MuiTypography-noWrap",
                                            "overline": "MuiTypography-overline",
                                            "paragraph": "MuiTypography-paragraph",
                                            "root": "MuiTypography-root",
                                            "srOnly": "MuiTypography-srOnly",
                                            "subtitle1": "MuiTypography-subtitle1",
                                            "subtitle2": "MuiTypography-subtitle2",
                                          }
                                        }
                                        component="div"
                                        id="tableTitle"
                                        variant="h6"
                                      >
                                        <div
                                          className="MuiTypography-root makeStyles-title-7 MuiTypography-h6"
                                          id="tableTitle"
                                        >
                                          Scoreboard
                                        </div>
                                      </ForwardRef(Typography)>
                                    </WithStyles(ForwardRef(Typography))>
                                  </div>
                                </ForwardRef(Toolbar)>
                              </WithStyles(ForwardRef(Toolbar))>
                            </EnhancedTableToolbar>
                            <WithStyles(ForwardRef(TableContainer))>
                              <ForwardRef(TableContainer)
                                classes={
                                  Object {
                                    "root": "MuiTableContainer-root",
                                  }
                                }
                              >
                                <div
                                  className="MuiTableContainer-root"
                                >
                                  <WithStyles(ForwardRef(Table))
                                    aria-label="enhanced table"
                                    aria-labelledby="tableTitle"
                                    className="makeStyles-table-3"
                                    size="medium"
                                  >
                                    <ForwardRef(Table)
                                      aria-label="enhanced table"
                                      aria-labelledby="tableTitle"
                                      className="makeStyles-table-3"
                                      classes={
                                        Object {
                                          "root": "MuiTable-root",
                                          "stickyHeader": "MuiTable-stickyHeader",
                                        }
                                      }
                                      size="medium"
                                    >
                                      <table
                                        aria-label="enhanced table"
                                        aria-labelledby="tableTitle"
                                        className="MuiTable-root makeStyles-table-3"
                                        role={null}
                                      >
                                        <EnhancedTableHead
                                          classes={
                                            Object {
                                              "paper": "makeStyles-paper-2",
                                              "root": "makeStyles-root-1",
                                              "table": "makeStyles-table-3",
                                              "visuallyHidden": "makeStyles-visuallyHidden-4",
                                            }
                                          }
                                          onRequestSort={[Function]}
                                          order="desc"
                                          orderBy="score"
                                          rowCount={0}
                                        >
                                          <WithStyles(ForwardRef(TableHead))>
                                            <ForwardRef(TableHead)
                                              classes={
                                                Object {
                                                  "root": "MuiTableHead-root",
                                                }
                                              }
                                            >
                                              <thead
                                                className="MuiTableHead-root"
                                                role={null}
                                              >
                                                <WithStyles(ForwardRef(TableRow))>
                                                  <ForwardRef(TableRow)
                                                    classes={
                                                      Object {
                                                        "footer": "MuiTableRow-footer",
                                                        "head": "MuiTableRow-head",
                                                        "hover": "MuiTableRow-hover",
                                                        "root": "MuiTableRow-root",
                                                        "selected": "Mui-selected",
                                                      }
                                                    }
                                                  >
                                                    <tr
                                                      className="MuiTableRow-root MuiTableRow-head"
                                                      role={null}
                                                    >
                                                      <WithStyles(ForwardRef(TableCell))
                                                        align="left"
                                                        key="name"
                                                        padding="none"
                                                        sortDirection={false}
                                                      >
                                                        <ForwardRef(TableCell)
                                                          align="left"
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTableCell-alignCenter",
                                                              "alignJustify": "MuiTableCell-alignJustify",
                                                              "alignLeft": "MuiTableCell-alignLeft",
                                                              "alignRight": "MuiTableCell-alignRight",
                                                              "body": "MuiTableCell-body",
                                                              "footer": "MuiTableCell-footer",
                                                              "head": "MuiTableCell-head",
                                                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                              "paddingNone": "MuiTableCell-paddingNone",
                                                              "root": "MuiTableCell-root",
                                                              "sizeSmall": "MuiTableCell-sizeSmall",
                                                              "stickyHeader": "MuiTableCell-stickyHeader",
                                                            }
                                                          }
                                                          padding="none"
                                                          sortDirection={false}
                                                        >
                                                          <th
                                                            aria-sort={null}
                                                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignLeft MuiTableCell-paddingNone"
                                                            scope="col"
                                                          >
                                                            <WithStyles(ForwardRef(TableSortLabel))
                                                              active={false}
                                                              className="nameHead"
                                                              direction="asc"
                                                              key="name"
                                                              onClick={[Function]}
                                                            >
                                                              <ForwardRef(TableSortLabel)
                                                                active={false}
                                                                className="nameHead"
                                                                classes={
                                                                  Object {
                                                                    "active": "MuiTableSortLabel-active",
                                                                    "icon": "MuiTableSortLabel-icon",
                                                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                    "root": "MuiTableSortLabel-root",
                                                                  }
                                                                }
                                                                direction="asc"
                                                                onClick={[Function]}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  className="MuiTableSortLabel-root nameHead"
                                                                  component="span"
                                                                  disableRipple={true}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    className="MuiTableSortLabel-root nameHead"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="span"
                                                                    disableRipple={true}
                                                                    onClick={[Function]}
                                                                  >
                                                                    <span
                                                                      aria-disabled={false}
                                                                      className="MuiButtonBase-root MuiTableSortLabel-root nameHead"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      Name
                                                                      <ForwardRef(ArrowDownwardIcon)
                                                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                      >
                                                                        <WithStyles(ForwardRef(SvgIcon))
                                                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                        >
                                                                          <ForwardRef(SvgIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                            classes={
                                                                              Object {
                                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                "colorError": "MuiSvgIcon-colorError",
                                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                "root": "MuiSvgIcon-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <svg
                                                                              aria-hidden={true}
                                                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionAsc"
                                                                              focusable="false"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <path
                                                                                d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                              />
                                                                            </svg>
                                                                          </ForwardRef(SvgIcon)>
                                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                                      </ForwardRef(ArrowDownwardIcon)>
                                                                    </span>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(TableSortLabel)>
                                                            </WithStyles(ForwardRef(TableSortLabel))>
                                                          </th>
                                                        </ForwardRef(TableCell)>
                                                      </WithStyles(ForwardRef(TableCell))>
                                                      <WithStyles(ForwardRef(TableCell))
                                                        align="right"
                                                        key="score"
                                                        padding="normal"
                                                        sortDirection="desc"
                                                      >
                                                        <ForwardRef(TableCell)
                                                          align="right"
                                                          classes={
                                                            Object {
                                                              "alignCenter": "MuiTableCell-alignCenter",
                                                              "alignJustify": "MuiTableCell-alignJustify",
                                                              "alignLeft": "MuiTableCell-alignLeft",
                                                              "alignRight": "MuiTableCell-alignRight",
                                                              "body": "MuiTableCell-body",
                                                              "footer": "MuiTableCell-footer",
                                                              "head": "MuiTableCell-head",
                                                              "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                              "paddingNone": "MuiTableCell-paddingNone",
                                                              "root": "MuiTableCell-root",
                                                              "sizeSmall": "MuiTableCell-sizeSmall",
                                                              "stickyHeader": "MuiTableCell-stickyHeader",
                                                            }
                                                          }
                                                          padding="normal"
                                                          sortDirection="desc"
                                                        >
                                                          <th
                                                            aria-sort="descending"
                                                            className="MuiTableCell-root MuiTableCell-head MuiTableCell-alignRight"
                                                            scope="col"
                                                          >
                                                            <WithStyles(ForwardRef(TableSortLabel))
                                                              active={true}
                                                              className="scoreHead"
                                                              direction="desc"
                                                              key="score"
                                                              onClick={[Function]}
                                                            >
                                                              <ForwardRef(TableSortLabel)
                                                                active={true}
                                                                className="scoreHead"
                                                                classes={
                                                                  Object {
                                                                    "active": "MuiTableSortLabel-active",
                                                                    "icon": "MuiTableSortLabel-icon",
                                                                    "iconDirectionAsc": "MuiTableSortLabel-iconDirectionAsc",
                                                                    "iconDirectionDesc": "MuiTableSortLabel-iconDirectionDesc",
                                                                    "root": "MuiTableSortLabel-root",
                                                                  }
                                                                }
                                                                direction="desc"
                                                                onClick={[Function]}
                                                              >
                                                                <WithStyles(ForwardRef(ButtonBase))
                                                                  className="MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                                  component="span"
                                                                  disableRipple={true}
                                                                  onClick={[Function]}
                                                                >
                                                                  <ForwardRef(ButtonBase)
                                                                    className="MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                                    classes={
                                                                      Object {
                                                                        "disabled": "Mui-disabled",
                                                                        "focusVisible": "Mui-focusVisible",
                                                                        "root": "MuiButtonBase-root",
                                                                      }
                                                                    }
                                                                    component="span"
                                                                    disableRipple={true}
                                                                    onClick={[Function]}
                                                                  >
                                                                    <span
                                                                      aria-disabled={false}
                                                                      className="MuiButtonBase-root MuiTableSortLabel-root scoreHead MuiTableSortLabel-active"
                                                                      onBlur={[Function]}
                                                                      onClick={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      role="button"
                                                                      tabIndex={0}
                                                                    >
                                                                      Score
                                                                      <span
                                                                        className="makeStyles-visuallyHidden-4"
                                                                      >
                                                                        sorted descending
                                                                      </span>
                                                                      <ForwardRef(ArrowDownwardIcon)
                                                                        className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                                      >
                                                                        <WithStyles(ForwardRef(SvgIcon))
                                                                          className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                                        >
                                                                          <ForwardRef(SvgIcon)
                                                                            className="MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                                            classes={
                                                                              Object {
                                                                                "colorAction": "MuiSvgIcon-colorAction",
                                                                                "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                                "colorError": "MuiSvgIcon-colorError",
                                                                                "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                                "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                                "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                                "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                                "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                                "root": "MuiSvgIcon-root",
                                                                              }
                                                                            }
                                                                          >
                                                                            <svg
                                                                              aria-hidden={true}
                                                                              className="MuiSvgIcon-root MuiTableSortLabel-icon MuiTableSortLabel-iconDirectionDesc"
                                                                              focusable="false"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <path
                                                                                d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z"
                                                                              />
                                                                            </svg>
                                                                          </ForwardRef(SvgIcon)>
                                                                        </WithStyles(ForwardRef(SvgIcon))>
                                                                      </ForwardRef(ArrowDownwardIcon)>
                                                                    </span>
                                                                  </ForwardRef(ButtonBase)>
                                                                </WithStyles(ForwardRef(ButtonBase))>
                                                              </ForwardRef(TableSortLabel)>
                                                            </WithStyles(ForwardRef(TableSortLabel))>
                                                          </th>
                                                        </ForwardRef(TableCell)>
                                                      </WithStyles(ForwardRef(TableCell))>
                                                    </tr>
                                                  </ForwardRef(TableRow)>
                                                </WithStyles(ForwardRef(TableRow))>
                                              </thead>
                                            </ForwardRef(TableHead)>
                                          </WithStyles(ForwardRef(TableHead))>
                                        </EnhancedTableHead>
                                        <WithStyles(ForwardRef(TableBody))>
                                          <ForwardRef(TableBody)
                                            classes={
                                              Object {
                                                "root": "MuiTableBody-root",
                                              }
                                            }
                                          >
                                            <tbody
                                              className="MuiTableBody-root"
                                              role={null}
                                            >
                                              <WithStyles(ForwardRef(TableRow))
                                                style={
                                                  Object {
                                                    "height": 265,
                                                  }
                                                }
                                              >
                                                <ForwardRef(TableRow)
                                                  classes={
                                                    Object {
                                                      "footer": "MuiTableRow-footer",
                                                      "head": "MuiTableRow-head",
                                                      "hover": "MuiTableRow-hover",
                                                      "root": "MuiTableRow-root",
                                                      "selected": "Mui-selected",
                                                    }
                                                  }
                                                  style={
                                                    Object {
                                                      "height": 265,
                                                    }
                                                  }
                                                >
                                                  <tr
                                                    className="MuiTableRow-root"
                                                    role={null}
                                                    style={
                                                      Object {
                                                        "height": 265,
                                                      }
                                                    }
                                                  >
                                                    <WithStyles(ForwardRef(TableCell))
                                                      colSpan={6}
                                                    >
                                                      <ForwardRef(TableCell)
                                                        classes={
                                                          Object {
                                                            "alignCenter": "MuiTableCell-alignCenter",
                                                            "alignJustify": "MuiTableCell-alignJustify",
                                                            "alignLeft": "MuiTableCell-alignLeft",
                                                            "alignRight": "MuiTableCell-alignRight",
                                                            "body": "MuiTableCell-body",
                                                            "footer": "MuiTableCell-footer",
                                                            "head": "MuiTableCell-head",
                                                            "paddingCheckbox": "MuiTableCell-paddingCheckbox",
                                                            "paddingNone": "MuiTableCell-paddingNone",
                                                            "root": "MuiTableCell-root",
                                                            "sizeSmall": "MuiTableCell-sizeSmall",
                                                            "stickyHeader": "MuiTableCell-stickyHeader",
                                                          }
                                                        }
                                                        colSpan={6}
                                                      >
                                                        <td
                                                          aria-sort={null}
                                                          className="MuiTableCell-root MuiTableCell-body"
                                                          colSpan={6}
                                                        />
                                                      </ForwardRef(TableCell)>
                                                    </WithStyles(ForwardRef(TableCell))>
                                                  </tr>
                                                </ForwardRef(TableRow)>
                                              </WithStyles(ForwardRef(TableRow))>
                                            </tbody>
                                          </ForwardRef(TableBody)>
                                        </WithStyles(ForwardRef(TableBody))>
                                      </table>
                                    </ForwardRef(Table)>
                                  </WithStyles(ForwardRef(Table))>
                                </div>
                              </ForwardRef(TableContainer)>
                            </WithStyles(ForwardRef(TableContainer))>
                            <WithStyles(ForwardRef(TablePagination))
                              component="div"
                              count={0}
                              onPageChange={[Function]}
                              onRowsPerPageChange={[Function]}
                              page={0}
                              rowsPerPage={5}
                              rowsPerPageOptions={
                                Array [
                                  5,
                                  10,
                                  25,
                                ]
                              }
                            >
                              <ForwardRef(TablePagination)
                                classes={
                                  Object {
                                    "actions": "MuiTablePagination-actions",
                                    "caption": "MuiTablePagination-caption",
                                    "input": "MuiTablePagination-input",
                                    "menuItem": "MuiTablePagination-menuItem",
                                    "root": "MuiTablePagination-root",
                                    "select": "MuiTablePagination-select",
                                    "selectIcon": "MuiTablePagination-selectIcon",
                                    "selectRoot": "MuiTablePagination-selectRoot",
                                    "spacer": "MuiTablePagination-spacer",
                                    "toolbar": "MuiTablePagination-toolbar",
                                  }
                                }
                                component="div"
                                count={0}
                                onPageChange={[Function]}
                                onRowsPerPageChange={[Function]}
                                page={0}
                                rowsPerPage={5}
                                rowsPerPageOptions={
                                  Array [
                                    5,
                                    10,
                                    25,
                                  ]
                                }
                              >
                                <div
                                  className="MuiTablePagination-root"
                                >
                                  <WithStyles(ForwardRef(Toolbar))
                                    className="MuiTablePagination-toolbar"
                                  >
                                    <ForwardRef(Toolbar)
                                      className="MuiTablePagination-toolbar"
                                      classes={
                                        Object {
                                          "dense": "MuiToolbar-dense",
                                          "gutters": "MuiToolbar-gutters",
                                          "regular": "MuiToolbar-regular",
                                          "root": "MuiToolbar-root",
                                        }
                                      }
                                    >
                                      <div
                                        className="MuiToolbar-root MuiToolbar-regular MuiTablePagination-toolbar MuiToolbar-gutters"
                                      >
                                        <div
                                          className="MuiTablePagination-spacer"
                                        />
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiTablePagination-caption"
                                          color="inherit"
                                          id="mui-77891"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiTablePagination-caption"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="inherit"
                                            id="mui-77891"
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                                              id="mui-77891"
                                            >
                                              Rows per page:
                                            </p>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                        <WithStyles(ForwardRef(Select))
                                          classes={
                                            Object {
                                              "icon": "MuiTablePagination-selectIcon",
                                              "select": "MuiTablePagination-select",
                                            }
                                          }
                                          id="mui-8151"
                                          input={
                                            <WithStyles(ForwardRef(InputBase))
                                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                            />
                                          }
                                          labelId="mui-77891"
                                          onChange={[Function]}
                                          value={5}
                                        >
                                          <ForwardRef(Select)
                                            classes={
                                              Object {
                                                "disabled": "Mui-disabled",
                                                "filled": "MuiSelect-filled",
                                                "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                "iconFilled": "MuiSelect-iconFilled",
                                                "iconOpen": "MuiSelect-iconOpen",
                                                "iconOutlined": "MuiSelect-iconOutlined",
                                                "nativeInput": "MuiSelect-nativeInput",
                                                "outlined": "MuiSelect-outlined",
                                                "root": "MuiSelect-root",
                                                "select": "MuiSelect-select MuiTablePagination-select",
                                                "selectMenu": "MuiSelect-selectMenu",
                                              }
                                            }
                                            id="mui-8151"
                                            input={
                                              <WithStyles(ForwardRef(InputBase))
                                                className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                              />
                                            }
                                            labelId="mui-77891"
                                            onChange={[Function]}
                                            value={5}
                                          >
                                            <WithStyles(ForwardRef(InputBase))
                                              className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                              inputComponent={
                                                Object {
                                                  "$$typeof": Symbol(react.forward_ref),
                                                  "propTypes": Object {
                                                    "IconComponent": [Function],
                                                    "MenuProps": [Function],
                                                    "SelectDisplayProps": [Function],
                                                    "aria-label": [Function],
                                                    "autoFocus": [Function],
                                                    "autoWidth": [Function],
                                                    "children": [Function],
                                                    "className": [Function],
                                                    "classes": [Function],
                                                    "defaultValue": [Function],
                                                    "disabled": [Function],
                                                    "displayEmpty": [Function],
                                                    "inputRef": [Function],
                                                    "labelId": [Function],
                                                    "multiple": [Function],
                                                    "name": [Function],
                                                    "onBlur": [Function],
                                                    "onChange": [Function],
                                                    "onClose": [Function],
                                                    "onFocus": [Function],
                                                    "onOpen": [Function],
                                                    "open": [Function],
                                                    "readOnly": [Function],
                                                    "renderValue": [Function],
                                                    "tabIndex": [Function],
                                                    "type": [Function],
                                                    "value": [Function],
                                                    "variant": [Function],
                                                  },
                                                  "render": [Function],
                                                }
                                              }
                                              inputProps={
                                                Object {
                                                  "IconComponent": Object {
                                                    "$$typeof": Symbol(react.memo),
                                                    "compare": null,
                                                    "type": Object {
                                                      "$$typeof": Symbol(react.forward_ref),
                                                      "render": [Function],
                                                    },
                                                  },
                                                  "MenuProps": undefined,
                                                  "SelectDisplayProps": Object {
                                                    "id": "mui-8151",
                                                  },
                                                  "autoWidth": false,
                                                  "children": Array [
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      className="MuiTablePagination-menuItem"
                                                      value={5}
                                                    >
                                                      5
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      className="MuiTablePagination-menuItem"
                                                      value={10}
                                                    >
                                                      10
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                    <WithStyles(ForwardRef(MenuItem))
                                                      className="MuiTablePagination-menuItem"
                                                      value={25}
                                                    >
                                                      25
                                                    </WithStyles(ForwardRef(MenuItem))>,
                                                  ],
                                                  "classes": Object {
                                                    "disabled": "Mui-disabled",
                                                    "filled": "MuiSelect-filled",
                                                    "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                    "iconFilled": "MuiSelect-iconFilled",
                                                    "iconOpen": "MuiSelect-iconOpen",
                                                    "iconOutlined": "MuiSelect-iconOutlined",
                                                    "nativeInput": "MuiSelect-nativeInput",
                                                    "outlined": "MuiSelect-outlined",
                                                    "root": "MuiSelect-root",
                                                    "select": "MuiSelect-select MuiTablePagination-select",
                                                    "selectMenu": "MuiSelect-selectMenu",
                                                  },
                                                  "displayEmpty": false,
                                                  "labelId": "mui-77891",
                                                  "multiple": false,
                                                  "onClose": undefined,
                                                  "onOpen": undefined,
                                                  "open": undefined,
                                                  "renderValue": undefined,
                                                  "type": undefined,
                                                  "variant": "standard",
                                                }
                                              }
                                              onChange={[Function]}
                                              value={5}
                                            >
                                              <ForwardRef(InputBase)
                                                className="MuiTablePagination-input MuiTablePagination-selectRoot"
                                                classes={
                                                  Object {
                                                    "adornedEnd": "MuiInputBase-adornedEnd",
                                                    "adornedStart": "MuiInputBase-adornedStart",
                                                    "colorSecondary": "MuiInputBase-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "error": "Mui-error",
                                                    "focused": "Mui-focused",
                                                    "formControl": "MuiInputBase-formControl",
                                                    "fullWidth": "MuiInputBase-fullWidth",
                                                    "input": "MuiInputBase-input",
                                                    "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                                    "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                                    "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                                    "inputMarginDense": "MuiInputBase-inputMarginDense",
                                                    "inputMultiline": "MuiInputBase-inputMultiline",
                                                    "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                    "marginDense": "MuiInputBase-marginDense",
                                                    "multiline": "MuiInputBase-multiline",
                                                    "root": "MuiInputBase-root",
                                                  }
                                                }
                                                inputComponent={
                                                  Object {
                                                    "$$typeof": Symbol(react.forward_ref),
                                                    "propTypes": Object {
                                                      "IconComponent": [Function],
                                                      "MenuProps": [Function],
                                                      "SelectDisplayProps": [Function],
                                                      "aria-label": [Function],
                                                      "autoFocus": [Function],
                                                      "autoWidth": [Function],
                                                      "children": [Function],
                                                      "className": [Function],
                                                      "classes": [Function],
                                                      "defaultValue": [Function],
                                                      "disabled": [Function],
                                                      "displayEmpty": [Function],
                                                      "inputRef": [Function],
                                                      "labelId": [Function],
                                                      "multiple": [Function],
                                                      "name": [Function],
                                                      "onBlur": [Function],
                                                      "onChange": [Function],
                                                      "onClose": [Function],
                                                      "onFocus": [Function],
                                                      "onOpen": [Function],
                                                      "open": [Function],
                                                      "readOnly": [Function],
                                                      "renderValue": [Function],
                                                      "tabIndex": [Function],
                                                      "type": [Function],
                                                      "value": [Function],
                                                      "variant": [Function],
                                                    },
                                                    "render": [Function],
                                                  }
                                                }
                                                inputProps={
                                                  Object {
                                                    "IconComponent": Object {
                                                      "$$typeof": Symbol(react.memo),
                                                      "compare": null,
                                                      "type": Object {
                                                        "$$typeof": Symbol(react.forward_ref),
                                                        "render": [Function],
                                                      },
                                                    },
                                                    "MenuProps": undefined,
                                                    "SelectDisplayProps": Object {
                                                      "id": "mui-8151",
                                                    },
                                                    "autoWidth": false,
                                                    "children": Array [
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        className="MuiTablePagination-menuItem"
                                                        value={5}
                                                      >
                                                        5
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        className="MuiTablePagination-menuItem"
                                                        value={10}
                                                      >
                                                        10
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                      <WithStyles(ForwardRef(MenuItem))
                                                        className="MuiTablePagination-menuItem"
                                                        value={25}
                                                      >
                                                        25
                                                      </WithStyles(ForwardRef(MenuItem))>,
                                                    ],
                                                    "classes": Object {
                                                      "disabled": "Mui-disabled",
                                                      "filled": "MuiSelect-filled",
                                                      "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                      "iconFilled": "MuiSelect-iconFilled",
                                                      "iconOpen": "MuiSelect-iconOpen",
                                                      "iconOutlined": "MuiSelect-iconOutlined",
                                                      "nativeInput": "MuiSelect-nativeInput",
                                                      "outlined": "MuiSelect-outlined",
                                                      "root": "MuiSelect-root",
                                                      "select": "MuiSelect-select MuiTablePagination-select",
                                                      "selectMenu": "MuiSelect-selectMenu",
                                                    },
                                                    "displayEmpty": false,
                                                    "labelId": "mui-77891",
                                                    "multiple": false,
                                                    "onClose": undefined,
                                                    "onOpen": undefined,
                                                    "open": undefined,
                                                    "renderValue": undefined,
                                                    "type": undefined,
                                                    "variant": "standard",
                                                  }
                                                }
                                                onChange={[Function]}
                                                value={5}
                                              >
                                                <div
                                                  className="MuiInputBase-root MuiTablePagination-input MuiTablePagination-selectRoot"
                                                  onClick={[Function]}
                                                >
                                                  <ForwardRef(SelectInput)
                                                    IconComponent={
                                                      Object {
                                                        "$$typeof": Symbol(react.memo),
                                                        "compare": null,
                                                        "type": Object {
                                                          "$$typeof": Symbol(react.forward_ref),
                                                          "render": [Function],
                                                        },
                                                      }
                                                    }
                                                    SelectDisplayProps={
                                                      Object {
                                                        "id": "mui-8151",
                                                      }
                                                    }
                                                    autoWidth={false}
                                                    className="MuiInputBase-input"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "filled": "MuiSelect-filled",
                                                        "icon": "MuiSelect-icon MuiTablePagination-selectIcon",
                                                        "iconFilled": "MuiSelect-iconFilled",
                                                        "iconOpen": "MuiSelect-iconOpen",
                                                        "iconOutlined": "MuiSelect-iconOutlined",
                                                        "nativeInput": "MuiSelect-nativeInput",
                                                        "outlined": "MuiSelect-outlined",
                                                        "root": "MuiSelect-root",
                                                        "select": "MuiSelect-select MuiTablePagination-select",
                                                        "selectMenu": "MuiSelect-selectMenu",
                                                      }
                                                    }
                                                    displayEmpty={false}
                                                    inputRef={[Function]}
                                                    labelId="mui-77891"
                                                    multiple={false}
                                                    onAnimationStart={[Function]}
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    onFocus={[Function]}
                                                    value={5}
                                                    variant="standard"
                                                  >
                                                    <div
                                                      aria-haspopup="listbox"
                                                      aria-labelledby="mui-77891 mui-8151"
                                                      className="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                      id="mui-8151"
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onMouseDown={[Function]}
                                                      role="button"
                                                      tabIndex={0}
                                                    >
                                                      5
                                                    </div>
                                                    <input
                                                      aria-hidden={true}
                                                      className="MuiSelect-nativeInput"
                                                      onAnimationStart={[Function]}
                                                      onChange={[Function]}
                                                      tabIndex={-1}
                                                      value={5}
                                                    />
                                                    <ForwardRef(ArrowDropDownIcon)
                                                      className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                    >
                                                      <WithStyles(ForwardRef(SvgIcon))
                                                        className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                      >
                                                        <ForwardRef(SvgIcon)
                                                          className="MuiSelect-icon MuiTablePagination-selectIcon"
                                                          classes={
                                                            Object {
                                                              "colorAction": "MuiSvgIcon-colorAction",
                                                              "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                              "colorError": "MuiSvgIcon-colorError",
                                                              "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                              "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                              "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                              "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                              "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                              "root": "MuiSvgIcon-root",
                                                            }
                                                          }
                                                        >
                                                          <svg
                                                            aria-hidden={true}
                                                            className="MuiSvgIcon-root MuiSelect-icon MuiTablePagination-selectIcon"
                                                            focusable="false"
                                                            viewBox="0 0 24 24"
                                                          >
                                                            <path
                                                              d="M7 10l5 5 5-5z"
                                                            />
                                                          </svg>
                                                        </ForwardRef(SvgIcon)>
                                                      </WithStyles(ForwardRef(SvgIcon))>
                                                    </ForwardRef(ArrowDropDownIcon)>
                                                    <WithStyles(ForwardRef(Menu))
                                                      MenuListProps={
                                                        Object {
                                                          "aria-labelledby": "mui-77891",
                                                          "disableListWrap": true,
                                                          "role": "listbox",
                                                        }
                                                      }
                                                      PaperProps={
                                                        Object {
                                                          "style": Object {
                                                            "minWidth": undefined,
                                                          },
                                                        }
                                                      }
                                                      anchorEl={
                                                        <div
                                                          aria-haspopup="listbox"
                                                          aria-labelledby="mui-77891 mui-8151"
                                                          class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                          id="mui-8151"
                                                          role="button"
                                                          tabindex="0"
                                                        >
                                                          5
                                                        </div>
                                                      }
                                                      id="menu-"
                                                      onClose={[Function]}
                                                      open={false}
                                                    >
                                                      <ForwardRef(Menu)
                                                        MenuListProps={
                                                          Object {
                                                            "aria-labelledby": "mui-77891",
                                                            "disableListWrap": true,
                                                            "role": "listbox",
                                                          }
                                                        }
                                                        PaperProps={
                                                          Object {
                                                            "style": Object {
                                                              "minWidth": undefined,
                                                            },
                                                          }
                                                        }
                                                        anchorEl={
                                                          <div
                                                            aria-haspopup="listbox"
                                                            aria-labelledby="mui-77891 mui-8151"
                                                            class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                            id="mui-8151"
                                                            role="button"
                                                            tabindex="0"
                                                          >
                                                            5
                                                          </div>
                                                        }
                                                        classes={
                                                          Object {
                                                            "list": "MuiMenu-list",
                                                            "paper": "MuiMenu-paper",
                                                          }
                                                        }
                                                        id="menu-"
                                                        onClose={[Function]}
                                                        open={false}
                                                      >
                                                        <WithStyles(ForwardRef(Popover))
                                                          PaperProps={
                                                            Object {
                                                              "classes": Object {
                                                                "root": "MuiMenu-paper",
                                                              },
                                                              "style": Object {
                                                                "minWidth": undefined,
                                                              },
                                                            }
                                                          }
                                                          TransitionProps={
                                                            Object {
                                                              "onEntering": [Function],
                                                            }
                                                          }
                                                          anchorEl={
                                                            <div
                                                              aria-haspopup="listbox"
                                                              aria-labelledby="mui-77891 mui-8151"
                                                              class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                              id="mui-8151"
                                                              role="button"
                                                              tabindex="0"
                                                            >
                                                              5
                                                            </div>
                                                          }
                                                          anchorOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          getContentAnchorEl={[Function]}
                                                          id="menu-"
                                                          onClose={[Function]}
                                                          open={false}
                                                          transformOrigin={
                                                            Object {
                                                              "horizontal": "left",
                                                              "vertical": "top",
                                                            }
                                                          }
                                                          transitionDuration="auto"
                                                        >
                                                          <ForwardRef(Popover)
                                                            PaperProps={
                                                              Object {
                                                                "classes": Object {
                                                                  "root": "MuiMenu-paper",
                                                                },
                                                                "style": Object {
                                                                  "minWidth": undefined,
                                                                },
                                                              }
                                                            }
                                                            TransitionProps={
                                                              Object {
                                                                "onEntering": [Function],
                                                              }
                                                            }
                                                            anchorEl={
                                                              <div
                                                                aria-haspopup="listbox"
                                                                aria-labelledby="mui-77891 mui-8151"
                                                                class="MuiSelect-root MuiSelect-select MuiTablePagination-select MuiSelect-selectMenu MuiInputBase-input"
                                                                id="mui-8151"
                                                                role="button"
                                                                tabindex="0"
                                                              >
                                                                5
                                                              </div>
                                                            }
                                                            anchorOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            classes={
                                                              Object {
                                                                "paper": "MuiPopover-paper",
                                                                "root": "MuiPopover-root",
                                                              }
                                                            }
                                                            getContentAnchorEl={[Function]}
                                                            id="menu-"
                                                            onClose={[Function]}
                                                            open={false}
                                                            transformOrigin={
                                                              Object {
                                                                "horizontal": "left",
                                                                "vertical": "top",
                                                              }
                                                            }
                                                            transitionDuration="auto"
                                                          >
                                                            <ForwardRef(Modal)
                                                              BackdropProps={
                                                                Object {
                                                                  "invisible": true,
                                                                }
                                                              }
                                                              className="MuiPopover-root"
                                                              container={<body />}
                                                              id="menu-"
                                                              onClose={[Function]}
                                                              open={false}
                                                            />
                                                          </ForwardRef(Popover)>
                                                        </WithStyles(ForwardRef(Popover))>
                                                      </ForwardRef(Menu)>
                                                    </WithStyles(ForwardRef(Menu))>
                                                  </ForwardRef(SelectInput)>
                                                </div>
                                              </ForwardRef(InputBase)>
                                            </WithStyles(ForwardRef(InputBase))>
                                          </ForwardRef(Select)>
                                        </WithStyles(ForwardRef(Select))>
                                        <WithStyles(ForwardRef(Typography))
                                          className="MuiTablePagination-caption"
                                          color="inherit"
                                          variant="body2"
                                        >
                                          <ForwardRef(Typography)
                                            className="MuiTablePagination-caption"
                                            classes={
                                              Object {
                                                "alignCenter": "MuiTypography-alignCenter",
                                                "alignJustify": "MuiTypography-alignJustify",
                                                "alignLeft": "MuiTypography-alignLeft",
                                                "alignRight": "MuiTypography-alignRight",
                                                "body1": "MuiTypography-body1",
                                                "body2": "MuiTypography-body2",
                                                "button": "MuiTypography-button",
                                                "caption": "MuiTypography-caption",
                                                "colorError": "MuiTypography-colorError",
                                                "colorInherit": "MuiTypography-colorInherit",
                                                "colorPrimary": "MuiTypography-colorPrimary",
                                                "colorSecondary": "MuiTypography-colorSecondary",
                                                "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                                "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                                "displayBlock": "MuiTypography-displayBlock",
                                                "displayInline": "MuiTypography-displayInline",
                                                "gutterBottom": "MuiTypography-gutterBottom",
                                                "h1": "MuiTypography-h1",
                                                "h2": "MuiTypography-h2",
                                                "h3": "MuiTypography-h3",
                                                "h4": "MuiTypography-h4",
                                                "h5": "MuiTypography-h5",
                                                "h6": "MuiTypography-h6",
                                                "noWrap": "MuiTypography-noWrap",
                                                "overline": "MuiTypography-overline",
                                                "paragraph": "MuiTypography-paragraph",
                                                "root": "MuiTypography-root",
                                                "srOnly": "MuiTypography-srOnly",
                                                "subtitle1": "MuiTypography-subtitle1",
                                                "subtitle2": "MuiTypography-subtitle2",
                                              }
                                            }
                                            color="inherit"
                                            variant="body2"
                                          >
                                            <p
                                              className="MuiTypography-root MuiTablePagination-caption MuiTypography-body2 MuiTypography-colorInherit"
                                            >
                                              0-0 of 0
                                            </p>
                                          </ForwardRef(Typography)>
                                        </WithStyles(ForwardRef(Typography))>
                                        <ForwardRef(TablePaginationActions)
                                          backIconButtonProps={
                                            Object {
                                              "aria-label": "Previous page",
                                              "title": "Previous page",
                                            }
                                          }
                                          className="MuiTablePagination-actions"
                                          count={0}
                                          nextIconButtonProps={
                                            Object {
                                              "aria-label": "Next page",
                                              "title": "Next page",
                                            }
                                          }
                                          onPageChange={[Function]}
                                          page={0}
                                          rowsPerPage={5}
                                        >
                                          <div
                                            className="MuiTablePagination-actions"
                                          >
                                            <WithStyles(ForwardRef(IconButton))
                                              aria-label="Previous page"
                                              color="inherit"
                                              disabled={true}
                                              onClick={[Function]}
                                              title="Previous page"
                                            >
                                              <ForwardRef(IconButton)
                                                aria-label="Previous page"
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiIconButton-colorInherit",
                                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                                    "edgeStart": "MuiIconButton-edgeStart",
                                                    "label": "MuiIconButton-label",
                                                    "root": "MuiIconButton-root",
                                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                                  }
                                                }
                                                color="inherit"
                                                disabled={true}
                                                onClick={[Function]}
                                                title="Previous page"
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  aria-label="Previous page"
                                                  centerRipple={true}
                                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                  disabled={true}
                                                  focusRipple={true}
                                                  onClick={[Function]}
                                                  title="Previous page"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    aria-label="Previous page"
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    disabled={true}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    title="Previous page"
                                                  >
                                                    <button
                                                      aria-label="Previous page"
                                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                      disabled={true}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={-1}
                                                      title="Previous page"
                                                      type="button"
                                                    >
                                                      <span
                                                        className="MuiIconButton-label"
                                                      >
                                                        <ForwardRef(KeyboardArrowLeftIcon)>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(KeyboardArrowLeftIcon)>
                                                      </span>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(IconButton)>
                                            </WithStyles(ForwardRef(IconButton))>
                                            <WithStyles(ForwardRef(IconButton))
                                              aria-label="Next page"
                                              color="inherit"
                                              disabled={true}
                                              onClick={[Function]}
                                              title="Next page"
                                            >
                                              <ForwardRef(IconButton)
                                                aria-label="Next page"
                                                classes={
                                                  Object {
                                                    "colorInherit": "MuiIconButton-colorInherit",
                                                    "colorPrimary": "MuiIconButton-colorPrimary",
                                                    "colorSecondary": "MuiIconButton-colorSecondary",
                                                    "disabled": "Mui-disabled",
                                                    "edgeEnd": "MuiIconButton-edgeEnd",
                                                    "edgeStart": "MuiIconButton-edgeStart",
                                                    "label": "MuiIconButton-label",
                                                    "root": "MuiIconButton-root",
                                                    "sizeSmall": "MuiIconButton-sizeSmall",
                                                  }
                                                }
                                                color="inherit"
                                                disabled={true}
                                                onClick={[Function]}
                                                title="Next page"
                                              >
                                                <WithStyles(ForwardRef(ButtonBase))
                                                  aria-label="Next page"
                                                  centerRipple={true}
                                                  className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                  disabled={true}
                                                  focusRipple={true}
                                                  onClick={[Function]}
                                                  title="Next page"
                                                >
                                                  <ForwardRef(ButtonBase)
                                                    aria-label="Next page"
                                                    centerRipple={true}
                                                    className="MuiIconButton-root MuiIconButton-colorInherit Mui-disabled"
                                                    classes={
                                                      Object {
                                                        "disabled": "Mui-disabled",
                                                        "focusVisible": "Mui-focusVisible",
                                                        "root": "MuiButtonBase-root",
                                                      }
                                                    }
                                                    disabled={true}
                                                    focusRipple={true}
                                                    onClick={[Function]}
                                                    title="Next page"
                                                  >
                                                    <button
                                                      aria-label="Next page"
                                                      className="MuiButtonBase-root MuiIconButton-root MuiIconButton-colorInherit Mui-disabled Mui-disabled"
                                                      disabled={true}
                                                      onBlur={[Function]}
                                                      onClick={[Function]}
                                                      onDragLeave={[Function]}
                                                      onFocus={[Function]}
                                                      onKeyDown={[Function]}
                                                      onKeyUp={[Function]}
                                                      onMouseDown={[Function]}
                                                      onMouseLeave={[Function]}
                                                      onMouseUp={[Function]}
                                                      onTouchEnd={[Function]}
                                                      onTouchMove={[Function]}
                                                      onTouchStart={[Function]}
                                                      tabIndex={-1}
                                                      title="Next page"
                                                      type="button"
                                                    >
                                                      <span
                                                        className="MuiIconButton-label"
                                                      >
                                                        <ForwardRef(KeyboardArrowRightIcon)>
                                                          <WithStyles(ForwardRef(SvgIcon))>
                                                            <ForwardRef(SvgIcon)
                                                              classes={
                                                                Object {
                                                                  "colorAction": "MuiSvgIcon-colorAction",
                                                                  "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                  "colorError": "MuiSvgIcon-colorError",
                                                                  "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                  "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                  "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                  "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                  "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                  "root": "MuiSvgIcon-root",
                                                                }
                                                              }
                                                            >
                                                              <svg
                                                                aria-hidden={true}
                                                                className="MuiSvgIcon-root"
                                                                focusable="false"
                                                                viewBox="0 0 24 24"
                                                              >
                                                                <path
                                                                  d="M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z"
                                                                />
                                                              </svg>
                                                            </ForwardRef(SvgIcon)>
                                                          </WithStyles(ForwardRef(SvgIcon))>
                                                        </ForwardRef(KeyboardArrowRightIcon)>
                                                      </span>
                                                    </button>
                                                  </ForwardRef(ButtonBase)>
                                                </WithStyles(ForwardRef(ButtonBase))>
                                              </ForwardRef(IconButton)>
                                            </WithStyles(ForwardRef(IconButton))>
                                          </div>
                                        </ForwardRef(TablePaginationActions)>
                                      </div>
                                    </ForwardRef(Toolbar)>
                                  </WithStyles(ForwardRef(Toolbar))>
                                </div>
                              </ForwardRef(TablePagination)>
                            </WithStyles(ForwardRef(TablePagination))>
                          </div>
                        </ForwardRef(Paper)>
                      </WithStyles(ForwardRef(Paper))>
                      <WithStyles(ForwardRef(FormControlLabel))
                        control={
                          <WithStyles(ForwardRef(Switch))
                            checked={false}
                            onChange={[Function]}
                          />
                        }
                        label="Dense padding"
                      >
                        <ForwardRef(FormControlLabel)
                          classes={
                            Object {
                              "disabled": "Mui-disabled",
                              "label": "MuiFormControlLabel-label",
                              "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                              "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                              "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                              "root": "MuiFormControlLabel-root",
                            }
                          }
                          control={
                            <WithStyles(ForwardRef(Switch))
                              checked={false}
                              onChange={[Function]}
                            />
                          }
                          label="Dense padding"
                        >
                          <label
                            className="MuiFormControlLabel-root"
                          >
                            <WithStyles(ForwardRef(Switch))
                              checked={false}
                              onChange={[Function]}
                            >
                              <ForwardRef(Switch)
                                checked={false}
                                classes={
                                  Object {
                                    "checked": "Mui-checked",
                                    "colorPrimary": "MuiSwitch-colorPrimary",
                                    "colorSecondary": "MuiSwitch-colorSecondary",
                                    "disabled": "Mui-disabled",
                                    "edgeEnd": "MuiSwitch-edgeEnd",
                                    "edgeStart": "MuiSwitch-edgeStart",
                                    "input": "MuiSwitch-input",
                                    "root": "MuiSwitch-root",
                                    "sizeSmall": "MuiSwitch-sizeSmall",
                                    "switchBase": "MuiSwitch-switchBase",
                                    "thumb": "MuiSwitch-thumb",
                                    "track": "MuiSwitch-track",
                                  }
                                }
                                onChange={[Function]}
                              >
                                <span
                                  className="MuiSwitch-root"
                                >
                                  <WithStyles(ForwardRef(SwitchBase))
                                    checked={false}
                                    checkedIcon={
                                      <span
                                        className="MuiSwitch-thumb"
                                      />
                                    }
                                    classes={
                                      Object {
                                        "checked": "Mui-checked",
                                        "disabled": "Mui-disabled",
                                        "input": "MuiSwitch-input",
                                        "root": "MuiSwitch-switchBase MuiSwitch-colorSecondary",
                                      }
                                    }
                                    icon={
                                      <span
                                        className="MuiSwitch-thumb"
                                      />
                                    }
                                    onChange={[Function]}
                                    type="checkbox"
                                  >
                                    <ForwardRef(SwitchBase)
                                      checked={false}
                                      checkedIcon={
                                        <span
                                          className="MuiSwitch-thumb"
                                        />
                                      }
                                      classes={
                                        Object {
                                          "checked": "PrivateSwitchBase-checked-9 Mui-checked",
                                          "disabled": "PrivateSwitchBase-disabled-10 Mui-disabled",
                                          "input": "PrivateSwitchBase-input-11 MuiSwitch-input",
                                          "root": "PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary",
                                        }
                                      }
                                      icon={
                                        <span
                                          className="MuiSwitch-thumb"
                                        />
                                      }
                                      onChange={[Function]}
                                      type="checkbox"
                                    >
                                      <WithStyles(ForwardRef(IconButton))
                                        className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                        component="span"
                                        onBlur={[Function]}
                                        onFocus={[Function]}
                                        tabIndex={null}
                                      >
                                        <ForwardRef(IconButton)
                                          className="PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                          classes={
                                            Object {
                                              "colorInherit": "MuiIconButton-colorInherit",
                                              "colorPrimary": "MuiIconButton-colorPrimary",
                                              "colorSecondary": "MuiIconButton-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "edgeEnd": "MuiIconButton-edgeEnd",
                                              "edgeStart": "MuiIconButton-edgeStart",
                                              "label": "MuiIconButton-label",
                                              "root": "MuiIconButton-root",
                                              "sizeSmall": "MuiIconButton-sizeSmall",
                                            }
                                          }
                                          component="span"
                                          onBlur={[Function]}
                                          onFocus={[Function]}
                                          tabIndex={null}
                                        >
                                          <WithStyles(ForwardRef(ButtonBase))
                                            centerRipple={true}
                                            className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                            component="span"
                                            disabled={false}
                                            focusRipple={true}
                                            onBlur={[Function]}
                                            onFocus={[Function]}
                                            tabIndex={null}
                                          >
                                            <ForwardRef(ButtonBase)
                                              centerRipple={true}
                                              className="MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                              classes={
                                                Object {
                                                  "disabled": "Mui-disabled",
                                                  "focusVisible": "Mui-focusVisible",
                                                  "root": "MuiButtonBase-root",
                                                }
                                              }
                                              component="span"
                                              disabled={false}
                                              focusRipple={true}
                                              onBlur={[Function]}
                                              onFocus={[Function]}
                                              tabIndex={null}
                                            >
                                              <span
                                                aria-disabled={false}
                                                className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-8 MuiSwitch-switchBase MuiSwitch-colorSecondary"
                                                onBlur={[Function]}
                                                onDragLeave={[Function]}
                                                onFocus={[Function]}
                                                onKeyDown={[Function]}
                                                onKeyUp={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                onTouchEnd={[Function]}
                                                onTouchMove={[Function]}
                                                onTouchStart={[Function]}
                                                tabIndex={null}
                                              >
                                                <span
                                                  className="MuiIconButton-label"
                                                >
                                                  <input
                                                    checked={false}
                                                    className="PrivateSwitchBase-input-11 MuiSwitch-input"
                                                    onChange={[Function]}
                                                    type="checkbox"
                                                  />
                                                  <span
                                                    className="MuiSwitch-thumb"
                                                  />
                                                </span>
                                                <WithStyles(memo)
                                                  center={true}
                                                >
                                                  <ForwardRef(TouchRipple)
                                                    center={true}
                                                    classes={
                                                      Object {
                                                        "child": "MuiTouchRipple-child",
                                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                                        "ripple": "MuiTouchRipple-ripple",
                                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                        "root": "MuiTouchRipple-root",
                                                      }
                                                    }
                                                  >
                                                    <span
                                                      className="MuiTouchRipple-root"
                                                    >
                                                      <TransitionGroup
                                                        childFactory={[Function]}
                                                        component={null}
                                                        exit={true}
                                                      />
                                                    </span>
                                                  </ForwardRef(TouchRipple)>
                                                </WithStyles(memo)>
                                              </span>
                                            </ForwardRef(ButtonBase)>
                                          </WithStyles(ForwardRef(ButtonBase))>
                                        </ForwardRef(IconButton)>
                                      </WithStyles(ForwardRef(IconButton))>
                                    </ForwardRef(SwitchBase)>
                                  </WithStyles(ForwardRef(SwitchBase))>
                                  <span
                                    className="MuiSwitch-track"
                                  />
                                </span>
                              </ForwardRef(Switch)>
                            </WithStyles(ForwardRef(Switch))>
                            <WithStyles(ForwardRef(Typography))
                              className="MuiFormControlLabel-label"
                              component="span"
                            >
                              <ForwardRef(Typography)
                                className="MuiFormControlLabel-label"
                                classes={
                                  Object {
                                    "alignCenter": "MuiTypography-alignCenter",
                                    "alignJustify": "MuiTypography-alignJustify",
                                    "alignLeft": "MuiTypography-alignLeft",
                                    "alignRight": "MuiTypography-alignRight",
                                    "body1": "MuiTypography-body1",
                                    "body2": "MuiTypography-body2",
                                    "button": "MuiTypography-button",
                                    "caption": "MuiTypography-caption",
                                    "colorError": "MuiTypography-colorError",
                                    "colorInherit": "MuiTypography-colorInherit",
                                    "colorPrimary": "MuiTypography-colorPrimary",
                                    "colorSecondary": "MuiTypography-colorSecondary",
                                    "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                    "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                    "displayBlock": "MuiTypography-displayBlock",
                                    "displayInline": "MuiTypography-displayInline",
                                    "gutterBottom": "MuiTypography-gutterBottom",
                                    "h1": "MuiTypography-h1",
                                    "h2": "MuiTypography-h2",
                                    "h3": "MuiTypography-h3",
                                    "h4": "MuiTypography-h4",
                                    "h5": "MuiTypography-h5",
                                    "h6": "MuiTypography-h6",
                                    "noWrap": "MuiTypography-noWrap",
                                    "overline": "MuiTypography-overline",
                                    "paragraph": "MuiTypography-paragraph",
                                    "root": "MuiTypography-root",
                                    "srOnly": "MuiTypography-srOnly",
                                    "subtitle1": "MuiTypography-subtitle1",
                                    "subtitle2": "MuiTypography-subtitle2",
                                  }
                                }
                                component="span"
                              >
                                <span
                                  className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                >
                                  Dense padding
                                </span>
                              </ForwardRef(Typography)>
                            </WithStyles(ForwardRef(Typography))>
                          </label>
                        </ForwardRef(FormControlLabel)>
                      </WithStyles(ForwardRef(FormControlLabel))>
                    </div>
                  </RenderScoreboard>
                </Scoreboard>
              </div>
            </ForwardRef(Grid)>
          </WithStyles(ForwardRef(Grid))>
        </div>
      </ForwardRef(Grid)>
    </WithStyles(ForwardRef(Grid))>
  </div>
</App>
`;
